{"version":3,"file":"static/js/350.79105fc9.chunk.js","mappings":"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","sources":["services/coinApi.ts","libs/useCoinNames.ts","components/CoinList/ColGroup.tsx","components/CoinList/TheadTr.tsx","components/CoinList/SkeletonUI.tsx","components/CoinList/TradePrice.tsx","components/CoinList/ChangePrice.tsx","components/CoinList/CirculatingSupply.tsx","components/CoinList/AccTradePrice24h.tsx","components/CoinList/AccTradeVolume24h.tsx","components/CoinList/Chart.tsx","components/CoinList/Chart200Days.tsx","libs/useCoinListData.ts","components/CoinList/TbodyTr.tsx","container/CoinList.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { ICoinSocketTickers } from \"../interface/icoin\";\r\n\r\nexport async function fetchCoins() {\r\n  const response = await fetch(`https://api.upbit.com/v1/market/all`);\r\n  return await response.json();\r\n}\r\nexport async function fetchCoinTickers(coinList: string[]) {\r\n  let results = [];\r\n  for (let index = 0; index < coinList.length; index++) {\r\n    const response = await fetch(\r\n      `https://api.upbit.com/v1/ticker?markets=${coinList[index]}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    );\r\n    const [json] = await response.json();\r\n    results.push(json);\r\n  }\r\n  return results;\r\n}\r\nexport async function fetchCoinHistory(coinList: string[]) {\r\n  let results = [];\r\n  for (let index = 0; index < coinList.length; index++) {\r\n    const response = await fetch(\r\n      `https://api.upbit.com/v1/candles/days?market=${coinList[index]}&count=200&convertingPriceUnit=KRW`,\r\n      { method: \"GET\" }\r\n    );\r\n    const json = await response.json();\r\n    results.push(json);\r\n  }\r\n\r\n  return results;\r\n}\r\nexport const useCoinTickersSocket = (socketNameList: string[]) => {\r\n  const [socket, setSocket] = useState<WebSocket | null>(null);\r\n  const [coinTickers, setCoinTickers] = useState<ICoinSocketTickers[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const connectWS = useCallback(() => {\r\n    if (\r\n      socket &&\r\n      (socket.readyState === WebSocket.OPEN ||\r\n        socket.readyState === WebSocket.CONNECTING)\r\n    ) {\r\n      return; // Avoid creating a new WebSocket if one is already open or connecting\r\n    }\r\n    const upbitSocket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\r\n    setSocket(upbitSocket);\r\n\r\n    upbitSocket.addEventListener(\"error\", (error: any) => {\r\n      console.error(\"WebSocket error:\", error.name);\r\n      setError(\"WebSocket error: \" + error.name);\r\n      upbitSocket.close(); // Close the socket before attempting to reconnect\r\n    });\r\n\r\n    upbitSocket.addEventListener(\"close\", () => {\r\n      setSocket(null); // Clear the socket when it is closed\r\n      connectWS(); // Attempt to reconnect\r\n    });\r\n\r\n    upbitSocket.addEventListener(\"message\", (message) => {\r\n      message.data.text().then((text: string) => {\r\n        try {\r\n          const jsonData = JSON.parse(text);\r\n          setCoinTickers(() => [jsonData]);\r\n        } catch (e) {\r\n          console.error(\"Error parsing message data:\", e);\r\n        }\r\n      });\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    connectWS();\r\n\r\n    return () => {\r\n      if (socket) {\r\n        socket.close(); // Cleanup the socket connection when the component unmounts or dependencies change\r\n      }\r\n    };\r\n  }, [connectWS]);\r\n\r\n  useEffect(() => {\r\n    if (!socket || !socketNameList) return;\r\n\r\n    const handleOpen = () => {\r\n      const subscribeMsg = [\r\n        { ticket: \"UNIQUE_TICKET\" },\r\n        { type: \"ticker\", codes: socketNameList },\r\n      ];\r\n      socket.send(JSON.stringify(subscribeMsg));\r\n    };\r\n\r\n    socket.addEventListener(\"open\", handleOpen);\r\n\r\n    return () => {\r\n      socket.removeEventListener(\"open\", handleOpen); // Cleanup the event listener\r\n    };\r\n  }, [socketNameList, socket]);\r\n  console.log(coinTickers);\r\n  return { coinTickers, error };\r\n};\r\n\r\n//무료 Supply api, market cap api 못찾겠다...\r\nexport const circulatingSupply = [\r\n  { id: \"KRW-ZETA\", supply: 265475000 },\r\n  { id: \"KRW-IMX\", supply: 1456815249 },\r\n  { id: \"KRW-EGLD\", supply: 26853943 },\r\n  { id: \"KRW-MINA\", supply: 1091547861 },\r\n  {\r\n    id: \"KRW-BLUR\",\r\n    supply: 1559340725,\r\n  },\r\n  {\r\n    id: \"KRW-ADA\",\r\n    supply: 35631835365,\r\n  },\r\n  { id: \"KRW-STRIKE\", supply: 4813974 },\r\n  {\r\n    id: \"KRW-LSK\",\r\n    supply: 128900445,\r\n  },\r\n  {\r\n    id: \"KRW-SUI\",\r\n    supply: 1295901469,\r\n  },\r\n  {\r\n    id: \"KRW-BTC\",\r\n    supply: 19689303,\r\n  },\r\n  {\r\n    id: \"KRW-ETH\",\r\n    supply: 122044085,\r\n  },\r\n  {\r\n    id: \"KRW-NEO\",\r\n    supply: 70538831,\r\n  },\r\n  {\r\n    id: \"KRW-MTL\",\r\n    supply: 66588888,\r\n  },\r\n  {\r\n    id: \"KRW-XRP\",\r\n    supply: 55129144019,\r\n  },\r\n  {\r\n    id: \"KRW-ETC\",\r\n    supply: 146702776,\r\n  },\r\n  {\r\n    id: \"KRW-OMG\",\r\n    supply: 140245398,\r\n  },\r\n  {\r\n    id: \"KRW-SNT\",\r\n    supply: 3877437479,\r\n  },\r\n  {\r\n    id: \"KRW-WAVES\",\r\n    supply: 114411940,\r\n  },\r\n  {\r\n    id: \"KRW-XEM\",\r\n    supply: 8999999999,\r\n  },\r\n  {\r\n    id: \"KRW-QTUM\",\r\n    supply: 104755842,\r\n  },\r\n  {\r\n    id: \"KRW-STEEM\",\r\n    supply: 460447618,\r\n  },\r\n  {\r\n    id: \"KRW-XLM\",\r\n    supply: 28918610779,\r\n  },\r\n  {\r\n    id: \"KRW-ARDR\",\r\n    supply: 998999495,\r\n  },\r\n  {\r\n    id: \"KRW-ARK\",\r\n    supply: 180363380,\r\n  },\r\n  {\r\n    id: \"KRW-STORJ\",\r\n    supply: 414984351,\r\n  },\r\n  {\r\n    id: \"KRW-GRS\",\r\n    supply: 84912674,\r\n  },\r\n  {\r\n    id: \"KRW-GRT\",\r\n    supply: 9482594119,\r\n  },\r\n  {\r\n    id: \"KRW-POWR\",\r\n    supply: 512375110,\r\n  },\r\n  {\r\n    id: \"KRW-BTG\",\r\n    supply: 17513924,\r\n  },\r\n  {\r\n    id: \"KRW-ICX\",\r\n    supply: 990775901,\r\n  },\r\n  {\r\n    id: \"KRW-EOS\",\r\n    supply: 1123883481,\r\n  },\r\n  {\r\n    id: \"KRW-TRX\",\r\n    supply: 87581059304,\r\n  },\r\n  {\r\n    id: \"KRW-SC\",\r\n    supply: 57008346857,\r\n  },\r\n  {\r\n    id: \"KRW-ONT\",\r\n    supply: 875249524,\r\n  },\r\n  {\r\n    id: \"KRW-ZIL\",\r\n    supply: 17372203179,\r\n  },\r\n  {\r\n    id: \"KRW-POLYX\",\r\n    supply: 843897698,\r\n  },\r\n  {\r\n    id: \"KRW-ZRX\",\r\n    supply: 847496055,\r\n  },\r\n  {\r\n    id: \"KRW-LOOM\",\r\n    supply: 1224270898,\r\n  },\r\n  {\r\n    id: \"KRW-BCH\",\r\n    supply: 19695803,\r\n  },\r\n  {\r\n    id: \"KRW-BAT\",\r\n    supply: 1490413701,\r\n  },\r\n  {\r\n    id: \"KRW-IOST\",\r\n    supply: 21315000000,\r\n  },\r\n  {\r\n    id: \"KRW-CVC\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-IQ\",\r\n    supply: 18032726356,\r\n  },\r\n  {\r\n    id: \"KRW-IOTA\",\r\n    supply: 3229505319,\r\n  },\r\n  {\r\n    id: \"KRW-HIFI\",\r\n    supply: 123618290,\r\n  },\r\n  { id: \"KRW-ID\", supply: 533986987 },\r\n  {\r\n    id: \"KRW-ONG\",\r\n    supply: 376722113,\r\n  },\r\n  { id: \"KRW-ASTR\", supply: 5633951458 },\r\n  {\r\n    id: \"KRW-GAS\",\r\n    supply: 67623878,\r\n  },\r\n  {\r\n    id: \"KRW-UPP\",\r\n    supply: 497834800,\r\n  },\r\n  {\r\n    id: \"KRW-ELF\",\r\n    supply: 726537296,\r\n  },\r\n  {\r\n    id: \"KRW-KNC\",\r\n    supply: 187996102,\r\n  },\r\n  {\r\n    id: \"KRW-BSV\",\r\n    supply: 19692013,\r\n  },\r\n  {\r\n    id: \"KRW-THETA\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-QKC\",\r\n    supply: 6983119113,\r\n  },\r\n  {\r\n    id: \"KRW-BTT\",\r\n    supply: 951421714286000,\r\n  },\r\n  {\r\n    id: \"KRW-MOC\",\r\n    supply: 412489688,\r\n  },\r\n  {\r\n    id: \"KRW-TFUEL\",\r\n    supply: 6523967285,\r\n  },\r\n  {\r\n    id: \"KRW-MANA\",\r\n    supply: 1908319865,\r\n  },\r\n  {\r\n    id: \"KRW-ANKR\",\r\n    supply: 10000000000,\r\n  },\r\n  {\r\n    id: \"KRW-AERGO\",\r\n    supply: 445000000,\r\n  },\r\n  {\r\n    id: \"KRW-ATOM\",\r\n    supply: 390930671,\r\n  },\r\n  { id: \"KRW-AKT\", supply: 234465962 },\r\n  {\r\n    id: \"KRW-TT\",\r\n    supply: 10445528584,\r\n  },\r\n  {\r\n    id: \"KRW-GAME2\",\r\n    supply: 15616114935,\r\n  },\r\n  {\r\n    id: \"KRW-MBL\",\r\n    supply: 17535220550,\r\n  },\r\n  {\r\n    id: \"KRW-WAXP\",\r\n    supply: 3436555622,\r\n  },\r\n  {\r\n    id: \"KRW-HBAR\",\r\n    supply: 35742801273,\r\n  },\r\n  { id: \"KRW-PYTH\", supply: 1499989003 },\r\n  {\r\n    id: \"KRW-MED\",\r\n    supply: 8285671092,\r\n  },\r\n  {\r\n    id: \"KRW-MLK\",\r\n    supply: 353736562,\r\n  },\r\n  {\r\n    id: \"KRW-SBD\",\r\n    supply: 13194660,\r\n  },\r\n  {\r\n    id: \"KRW-STPT\",\r\n    supply: 1942420283,\r\n  },\r\n  {\r\n    id: \"KRW-ORBS\",\r\n    supply: 4301534998,\r\n  },\r\n  {\r\n    id: \"KRW-VET\",\r\n    supply: 72714516834,\r\n  },\r\n  {\r\n    id: \"KRW-CHZ\",\r\n    supply: 8888289967,\r\n  },\r\n  {\r\n    id: \"KRW-STMX\",\r\n    supply: 10000000000,\r\n  },\r\n  {\r\n    id: \"KRW-DKA\",\r\n    supply: 3716250000,\r\n  },\r\n  {\r\n    id: \"KRW-HIVE\",\r\n    supply: 500749243,\r\n  },\r\n  {\r\n    id: \"KRW-KAVA\",\r\n    supply: 1082860622,\r\n  },\r\n  {\r\n    id: \"KRW-AHT\",\r\n    supply: 4502217832,\r\n  },\r\n  {\r\n    id: \"KRW-LINK\",\r\n    supply: 587099970,\r\n  },\r\n  {\r\n    id: \"KRW-SEI\",\r\n    supply: 2800000000,\r\n  },\r\n  {\r\n    id: \"KRW-XTZ\",\r\n    supply: 979244499,\r\n  },\r\n  {\r\n    id: \"KRW-BORA\",\r\n    supply: 1046750000,\r\n  },\r\n  {\r\n    id: \"KRW-JST\",\r\n    supply: 8902080000,\r\n  },\r\n  {\r\n    id: \"KRW-CRO\",\r\n    supply: 26571560696,\r\n  },\r\n  {\r\n    id: \"KRW-TON\",\r\n    supply: 43841454,\r\n  },\r\n  {\r\n    id: \"KRW-SXP\",\r\n    supply: 601550328,\r\n  },\r\n  {\r\n    id: \"KRW-HUNT\",\r\n    supply: 198912688,\r\n  },\r\n  {\r\n    id: \"KRW-PLA\",\r\n    supply: 569265030,\r\n  },\r\n  {\r\n    id: \"KRW-DOT\",\r\n    supply: 1436847160,\r\n  },\r\n  {\r\n    id: \"KRW-SRM\",\r\n    supply: 263244669,\r\n  },\r\n  {\r\n    id: \"KRW-MVL\",\r\n    supply: 24652958863,\r\n  },\r\n  {\r\n    id: \"KRW-STRAX\",\r\n    supply: 1908178499,\r\n  },\r\n  {\r\n    id: \"KRW-AQT\",\r\n    supply: 26806201,\r\n  },\r\n  {\r\n    id: \"KRW-GLM\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-SSX\",\r\n    supply: 2861938931,\r\n  },\r\n  {\r\n    id: \"KRW-META\",\r\n    supply: 1703608720,\r\n  },\r\n  {\r\n    id: \"KRW-FCT2\",\r\n    supply: 843825196,\r\n  },\r\n  { id: \"KRW-CTC\", supply: 331783609 },\r\n  {\r\n    id: \"KRW-CBK\",\r\n    supply: 82944777,\r\n  },\r\n  {\r\n    id: \"KRW-SAND\",\r\n    supply: 2251731926,\r\n  },\r\n  {\r\n    id: \"KRW-HPO\",\r\n    supply: 993409273,\r\n  },\r\n  {\r\n    id: \"KRW-HUM\",\r\n    supply: 913409274,\r\n  },\r\n  {\r\n    id: \"KRW-DOGE\",\r\n    supply: 144009276384,\r\n  },\r\n  {\r\n    id: \"KRW-STRK\",\r\n    supply: 3964522,\r\n  },\r\n  {\r\n    id: \"KRW-PUNDIX\",\r\n    supply: 258491637,\r\n  },\r\n  {\r\n    id: \"KRW-FLOW\",\r\n    supply: 1501883814,\r\n  },\r\n  {\r\n    id: \"KRW-AXS\",\r\n    supply: 143636573,\r\n  },\r\n  {\r\n    id: \"KRW-STX\",\r\n    supply: 1453976524,\r\n  },\r\n  {\r\n    id: \"KRW-XEC\",\r\n    supply: 19539129673093,\r\n  },\r\n  {\r\n    id: \"KRW-SOL\",\r\n    supply: 447048737,\r\n  },\r\n  {\r\n    id: \"KRW-MATIC\",\r\n    supply: 9899052814,\r\n  },\r\n  {\r\n    id: \"KRW-NU\",\r\n    supply: 703000000,\r\n  },\r\n  {\r\n    id: \"KRW-AAVE\",\r\n    supply: 14807466,\r\n  },\r\n  {\r\n    id: \"KRW-1INCH\",\r\n    supply: 1157267877,\r\n  },\r\n  {\r\n    id: \"KRW-ALGO\",\r\n    supply: 8133112354,\r\n  },\r\n  {\r\n    id: \"KRW-NEAR\",\r\n    supply: 1065164766,\r\n  },\r\n  {\r\n    id: \"KRW-AVAX\",\r\n    supply: 378019462,\r\n  },\r\n  {\r\n    id: \"KRW-T\",\r\n    supply: 9647764144,\r\n  },\r\n  {\r\n    id: \"KRW-CELO\",\r\n    supply: 533817831,\r\n  },\r\n  {\r\n    id: \"KRW-GMT\",\r\n    supply: 1930858058,\r\n  },\r\n  {\r\n    id: \"KRW-APT\",\r\n    supply: 426017434,\r\n  },\r\n  {\r\n    id: \"KRW-SHIB\",\r\n    supply: 589346914631298,\r\n  },\r\n  {\r\n    id: \"KRW-MASK\",\r\n    supply: 96025000,\r\n  },\r\n  {\r\n    id: \"KRW-ARB\",\r\n    supply: 2653939384,\r\n  },\r\n  { id: \"KRW-MNT\", supply: 3264441708 },\r\n  { id: \"KRW-ZRO\", supply: 110000000 },\r\n  { id: \"KRW-TAIKO\", supply: 65951595 },\r\n  { id: \"KRW-BLAST\", supply: 17000000000 },\r\n  { id: \"KRW-BEAM\", supply: 49466004168 },\r\n  { id: \"KRW-USDT\", supply: 112911493076 },\r\n  { id: \"KRW-ONDO\", supply: 1389759838 },\r\n  { id: \"KRW-AUCTION\", supply: 6500037 },\r\n  { id: \"KRW-JUP\", supply: 1350000000 },\r\n  { id: \"KRW-STG\", supply: 204338417 },\r\n  { id: \"KRW-GAL\", supply: 118544998 },\r\n  { id: \"KRW-G\", supply: 7232700005 },\r\n  { id: \"KRW-ENS\", supply: 32839999 },\r\n];\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { ICoins } from \"../interface/icoin\";\r\nimport { fetchCoins } from \"../services/coinApi\";\r\n\r\nconst useCoinNames = (allList: boolean) => {\r\n  const { data: nameData } = useQuery<ICoins[]>([\"name\"], () => fetchCoins(), {\r\n    select: (datas) =>\r\n      datas.filter((data) => {\r\n        if (allList) {\r\n          return !data.market.indexOf(\"KRW\");\r\n        } else {\r\n          return data;\r\n        }\r\n      }),\r\n    refetchOnMount: false,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n  return { nameData };\r\n};\r\n\r\nexport default useCoinNames;\r\n","import styled from \"styled-components\";\r\n\r\nconst ColName = styled.col`\r\n  width: 310px;\r\n  min-width: auto;\r\n  @media (max-width: 1279px) {\r\n    & {\r\n      box-shadow: 0px 0px 2px rgba(128, 138, 157, 0.12),\r\n        0px 0px 24px rgba(128, 138, 157, 0.14);\r\n    }\r\n  }\r\n`;\r\nconst ColPrice = styled.col`\r\n  width: 181px;\r\n  min-width: auto;\r\n`;\r\nconst ColChange = styled.col`\r\n  width: 200px;\r\n  min-width: auto;\r\n`;\r\nconst ColVolume = styled.col`\r\n  width: 236px;\r\n  min-width: auto;\r\n`;\r\nconst ColVolumePrice = styled.col`\r\n  width: 236px;\r\n  min-width: auto;\r\n`;\r\nconst ColSupply = styled.col`\r\n  width: 236px;\r\n  min-width: auto;\r\n`;\r\nconst ColCap = styled.col`\r\n  width: 236px;\r\n  min-width: auto;\r\n`;\r\nconst ColChart = styled.col`\r\n  width: 183px;\r\n  min-width: auto;\r\n`;\r\nfunction Colgroup() {\r\n  return (\r\n    <colgroup>\r\n      <ColName />\r\n      <ColPrice />\r\n      <ColChange />\r\n      <ColVolume />\r\n      <ColVolumePrice />\r\n      <ColSupply />\r\n      <ColCap />\r\n      <ColChart />\r\n    </colgroup>\r\n  );\r\n}\r\nexport default Colgroup;\r\n","import styled from \"styled-components\";\r\nimport { Tr } from \"../../container/CoinList\";\r\nconst NameTh = styled.th`\r\n  text-align: start;\r\n  vertical-align: middle;\r\n  padding: 10px;\r\n  padding-left: 1vw;\r\n  position: sticky;\r\n  top: 0;\r\n  left: -2px;\r\n  z-index: 10;\r\n  background-color: #f8f8f8;\r\n  @media (max-width: 1279px) {\r\n    & {\r\n      ::before {\r\n        box-shadow: inset 10px 0 8px -8px rgba(0, 0, 0, 0.15);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: -1px;\r\n        width: 30px;\r\n        transform: translateX(100%);\r\n        transition: box-shadow 0.3s;\r\n        content: \"\";\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Th = styled.th`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 3;\r\n  background-color: #f8f8f8;\r\n  text-align: end;\r\n  vertical-align: middle;\r\n  padding: 10px;\r\n  font-weight: 900;\r\n  white-space: nowrap;\r\n  :last-child {\r\n    padding-right: 1vw;\r\n  }\r\n`;\r\nfunction TheadTr() {\r\n  return (\r\n    <Tr>\r\n      <NameTh>\r\n        <span>Name</span>\r\n      </NameTh>\r\n      <Th>\r\n        <span>Price</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Change (24h)</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Volume (24h)</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Volume Price (24h)</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Circulating Supply</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Market Cap</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Last 200 Days</span>\r\n      </Th>\r\n    </Tr>\r\n  );\r\n}\r\nexport default TheadTr;\r\n","import styled from \"styled-components\";\r\nimport { Tr } from \"../../container/CoinList\";\r\nconst Namediv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\nconst TdFixed = styled.td`\r\n  padding: 3.5px;\r\n  text-align: end;\r\n  vertical-align: middle;\r\n  white-space: nowrap;\r\n  :last-child {\r\n    padding: 0px;\r\n  }\r\n`;\r\n\r\nconst TdNomalDivFixed = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 3px;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst Skeleton = styled.div`\r\n  background-color: #ececec;\r\n  border-radius: 5px;\r\n  padding: 13px 10px;\r\n`;\r\nconst SkeletonName = styled(Skeleton)`\r\n  width: 100%;\r\n`;\r\nconst SkeletonPrice = styled(Skeleton)`\r\n  width: 100%;\r\n`;\r\nconst SkeletonChangePrice = styled(Skeleton)`\r\n  width: 40%;\r\n`;\r\nconst SkeletonChangePer = styled(Skeleton)`\r\n  width: 50%;\r\n`;\r\nconst SkeletonVolume = styled(Skeleton)`\r\n  width: 90%;\r\n`;\r\nconst SkeletonVolumePrice = styled(Skeleton)`\r\n  width: 90%;\r\n`;\r\nconst SkeletonSupply = styled(Skeleton)`\r\n  width: 90%;\r\n`;\r\nconst SkeletonMarketCap = styled(Skeleton)`\r\n  width: 90%;\r\n`;\r\nconst SkeletonChart = styled(Skeleton)`\r\n  width: 100%;\r\n  height: 50px;\r\n`;\r\n\r\nfunction SkeletonUI() {\r\n  return (\r\n    <Tr>\r\n      <TdFixed>\r\n        <Namediv>\r\n          <SkeletonName />\r\n        </Namediv>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonPrice />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonChangePrice />\r\n          <SkeletonChangePer />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonVolume />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonVolumePrice />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonSupply />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonMarketCap />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <SkeletonChart />\r\n      </TdFixed>\r\n    </Tr>\r\n  );\r\n}\r\nexport default SkeletonUI;\r\n","import { useEffect, useState } from \"react\";\r\nimport { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\n\r\nconst TradePrice = ({\r\n  coinName,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const price: string = tickerList\r\n      .find((ticker) => ticker.market === coinName && ticker, 0)\r\n      ?.trade_price.toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\r\n    return <span>₩{price || 0}</span>;\r\n  }\r\n  return <></>;\r\n};\r\nexport default TradePrice;\r\n","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\r\nimport { Icons, TdChangeDiv } from \"./TbodyTr\";\r\n\r\nconst ChangePrice = ({\r\n  coinName,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const changePrice: string = tickerList\r\n      .find((ticker) => ticker.market === coinName && ticker, 0)\r\n      ?.change_price.toString()\r\n      .replace(/\\B(?=(\\d{3})+(!\\d))/g, \",\")!;\r\n    const change: string = tickerList.find(\r\n      (ticker) => ticker.market === coinName && ticker,\r\n      \"EVEN\"\r\n    )?.change!;\r\n    const changeRate: number = tickerList.find(\r\n      (ticker) => ticker.market === coinName && ticker,\r\n      0\r\n    )?.change_rate!;\r\n    return (\r\n      <TdChangeDiv change={change || \"EVEN\"}>\r\n        <span>₩{changePrice || 0}</span>\r\n        <span>\r\n          {change === \"EVEN\" ? (\r\n            <Icons className=\"material-symbols-outlined\">\r\n              check_indeterminate_small\r\n            </Icons>\r\n          ) : change === \"RISE\" ? (\r\n            <Icons className=\"material-symbols-outlined\">arrow_drop_up</Icons>\r\n          ) : change === \"FALL\" ? (\r\n            <Icons className=\"material-symbols-outlined\">arrow_drop_down</Icons>\r\n          ) : (\r\n            <Icons className=\"material-symbols-outlined\">trending_flat</Icons>\r\n          )}\r\n          {(changeRate * 100 || 0).toFixed(2)}%\r\n        </span>\r\n      </TdChangeDiv>\r\n    );\r\n  }\r\n  return <TdChangeDiv change=\"EVEN\"></TdChangeDiv>;\r\n};\r\nexport default ChangePrice;","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\r\nconst CirculatingSupply = ({\r\n  coinName,\r\n  supply,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  supply: number;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const price: number = tickerList.find(\r\n      (ticker) => ticker.market === coinName && ticker,\r\n      0\r\n    )?.trade_price!;\r\n    return (\r\n      <span>\r\n        ₩\r\n        {(supply * price || 0)\r\n          .toFixed(0)\r\n          .toString()\r\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n      </span>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\nexport default CirculatingSupply;\r\n","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\r\n\r\nconst AccTradePrice24h = ({\r\n  coinName,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const accTradePrice24h: string = tickerList\r\n      .find((ticker) => ticker.market === coinName && ticker, 0)\r\n      ?.acc_trade_price_24h.toFixed(0)\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\r\n    return <span>₩{accTradePrice24h || 0}</span>;\r\n  }\r\n  return <></>;\r\n};\r\nexport default AccTradePrice24h;","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\r\n\r\nconst AccTradeVolume24h = ({\r\n  coinName,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const accTradeVolume24h: string = tickerList\r\n      .find((ticker) => ticker.market === coinName && ticker, 0)\r\n      ?.acc_trade_volume_24h.toFixed(0)\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\r\n    return (\r\n      <span>\r\n        {accTradeVolume24h || 0} {coinName.substring(4) || \"\"}\r\n      </span>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\nexport default AccTradeVolume24h;","import styled from \"styled-components\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { ICoinHistory } from \"../../interface/icoin\";\r\n\r\nconst ApexChartDiv = styled.div`\r\n  max-width: 100%;\r\n  max-height: 61px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst ApexChart = styled(ReactApexChart)`\r\n  width: 164px;\r\n  color: ${(props) =>\r\n    props.change === \"RISE\"\r\n      ? \"#089981\"\r\n      : props.change === \"FALL\"\r\n      ? \" #F23645\"\r\n      : \"#222\"};\r\n  will-change: color;\r\n`;\r\nfunction Chart({\r\n  history,\r\n  change,\r\n}: {\r\n  history: ICoinHistory[];\r\n  change: string;\r\n}) {\r\n  return (\r\n    <>\r\n      <ApexChartDiv>\r\n        <ApexChart\r\n          change={change}\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              data:\r\n                history.map((price) => ({\r\n                  x: price.timestamp,\r\n                  y: price.prev_closing_price,\r\n                })) ?? [],\r\n            },\r\n          ]}\r\n          options={{\r\n            chart: {\r\n              type: \"line\",\r\n              background: \"transparent\",\r\n              zoom: { enabled: false },\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              animations: {\r\n                enabled: false,\r\n              },\r\n            },\r\n            grid: {\r\n              show: false,\r\n            },\r\n            legend: {\r\n              show: false,\r\n            },\r\n            dataLabels: {\r\n              enabled: false,\r\n            },\r\n            labels: {\r\n              show: false,\r\n            },\r\n            tooltip: {\r\n              enabled: false,\r\n            },\r\n            markers: { size: 0 },\r\n            stroke: { curve: \"smooth\", width: 3 },\r\n            colors: [\r\n              change === \"RISE\"\r\n                ? \"#c84a31\"\r\n                : change === \"EVEN\"\r\n                ? \"#222\"\r\n                : \"#1261c4\",\r\n            ],\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: { show: false },\r\n          }}\r\n        />\r\n      </ApexChartDiv>\r\n    </>\r\n  );\r\n}\r\nexport default Chart;\r\n","import {\r\n  ICoinHistory,\r\n  ICoinHttpTickers,\r\n  ICoinSocketTickers,\r\n} from \"../../interface/icoin\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst Chart200Days = ({\r\n  coinName,\r\n  history,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  history: ICoinHistory[];\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}) => {\r\n  if (tickerSocketData) {\r\n    const change: string = tickerList.find(\r\n      (ticker) => ticker.market === coinName && ticker,\r\n      \"EVEN\"\r\n    )?.change!;\r\n    return <Chart history={history} change={change} />;\r\n  }\r\n  return <></>;\r\n};\r\nexport default Chart200Days;","import { useEffect, useState, useCallback } from \"react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport {\r\n  circulatingSupply,\r\n  fetchCoinHistory,\r\n  fetchCoinTickers,\r\n} from \"../services/coinApi\";\r\nimport {\r\n  ICoinHistory,\r\n  ICoinHttpTickers,\r\n  ICoinListDataResult,\r\n  ICoinListMerge,\r\n  ICoins,\r\n} from \"../interface/icoin\";\r\n\r\n\r\n\r\nconst useCoinListData = (\r\n  count: number,\r\n  coinList: string[] | undefined,\r\n  nameData: ICoins[] | undefined\r\n): ICoinListDataResult => {\r\n  const { data: tickerHttpData } = useQuery<ICoinHttpTickers[]>(\r\n    [\"ticker\", count],\r\n    () => fetchCoinTickers(coinList!),\r\n    {\r\n      enabled: !!coinList,\r\n      refetchOnMount: false,\r\n      refetchOnWindowFocus: true,\r\n    }\r\n  );\r\n\r\n  const { data: historyData } = useQuery<ICoinHistory[][]>(\r\n    [\"history\", count],\r\n    () => fetchCoinHistory(coinList!),\r\n    {\r\n      enabled: !!coinList,\r\n      refetchOnMount: false,\r\n      refetchOnWindowFocus: true,\r\n    }\r\n  );\r\n\r\n  const [mergeData, setMergeData] = useState<ICoinListMerge[]>([]);\r\n\r\n  const mergeFn = useCallback(async () => {\r\n    let newArr: ICoinListMerge[] = [];\r\n    await Promise.all(\r\n      tickerHttpData!.map(async (tickerArr) => {\r\n        const supplyArr = circulatingSupply.find(\r\n          (supply) => supply.id === tickerArr.market\r\n        );\r\n        if (supplyArr) {\r\n          const historyArr = historyData!.find(\r\n            (history) => history[0].market === tickerArr.market\r\n          );\r\n          if (historyArr) {\r\n            const nameArr = nameData!.find(\r\n              (name) => name.market === tickerArr.market\r\n            );\r\n            if (nameArr) {\r\n              let newObject = {\r\n                ...tickerArr,\r\n                ...nameArr,\r\n                ...supplyArr,\r\n                historyArr,\r\n              };\r\n              newArr.push(newObject);\r\n            }\r\n          }\r\n        }\r\n      })\r\n    ).then(() => setMergeData(() => newArr));\r\n  }, [historyData, nameData, tickerHttpData]);\r\n\r\n  useEffect(() => {\r\n    if (historyData) {\r\n      mergeFn();\r\n    }\r\n  }, [historyData, mergeFn]);\r\n\r\n  return {\r\n    data: mergeData,\r\n  };\r\n};\r\n\r\nexport default useCoinListData;\r\n","import styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SkeletonUI from \"./SkeletonUI\";\r\nimport TradePrice from \"./TradePrice\";\r\nimport ChangePrice from \"./ChangePrice\";\r\nimport CirculatingSupply from \"./CirculatingSupply\";\r\nimport AccTradePrice24h from \"./AccTradePrice24h\";\r\nimport AccTradeVolume24h from \"./AccTradeVolume24h\";\r\nimport Chart200Days from \"./Chart200Days\";\r\nimport useCoinNames from \"../../libs/useCoinNames\";\r\nimport useCoinListData from \"../../libs/useCoinListData\";\r\nimport { useCoinTickersSocket } from \"../../services/coinApi\";\r\nimport { ICoinHttpTickers } from \"../../interface/icoin\";\r\nimport { Tr } from \"../../container/CoinList\";\r\n\r\nconst GoDetail = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  &:hover {\r\n    background-color: #dadada;\r\n    border-radius: 5px;\r\n  }\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n  div span + span {\r\n    color: #808a9d;\r\n  }\r\n`;\r\nexport const Td = styled.td`\r\n  text-align: end;\r\n  vertical-align: middle;\r\n  padding: 10px;\r\n  white-space: nowrap;\r\n  :last-child {\r\n    padding: 0px;\r\n  }\r\n`;\r\nconst NameTd = styled.td`\r\n  text-align: start;\r\n  vertical-align: middle;\r\n  position: sticky;\r\n  position: -webkit-sticky;\r\n  top: 0;\r\n  left: -2px;\r\n  z-index: 10;\r\n  background-color: #f8f8f8;\r\n  @media (max-width: 1279px) {\r\n    & {\r\n      ::before {\r\n        box-shadow: inset 10px 0 8px -8px rgba(0, 0, 0, 0.15);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: -1px;\r\n        width: 30px;\r\n        transform: translateX(100%);\r\n        transition: box-shadow 0.3s;\r\n        content: \"\";\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const Namediv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n  div span + span {\r\n    color: #808a9d;\r\n  }\r\n`;\r\nexport const TdChangeDiv = styled.div<{ change: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${(props) =>\r\n    props.change === \"RISE\"\r\n      ? \"#c84a31\"\r\n      : props.change === \"FALL\"\r\n      ? \"#1261c4\"\r\n      : \"#222\"};\r\n  will-change: color;\r\n`;\r\nexport const Icons = styled.span`\r\n  vertical-align: middle;\r\n`;\r\nexport const Img = styled.img`\r\n  margin-right: 5px;\r\n  max-width: 20px;\r\n`;\r\n\r\nfunction TbodyTr({ count }: { count: number }) {\r\n  const { nameData } = useCoinNames(true);\r\n  const coinList = nameData\r\n    ?.map((data) => data.market)\r\n    .slice(count - 10, count);\r\n  const socketNameList = nameData?.map((data) => data.market);\r\n  const { data: mergeData } = useCoinListData(count, coinList, nameData);\r\n  const { coinTickers } = useCoinTickersSocket(socketNameList!);\r\n  const [tickerList, setTickerList] = useState<ICoinHttpTickers[]>(\r\n    mergeData || []\r\n  );\r\n  useEffect(() => {\r\n    if (coinTickers) {\r\n      setTickerList(\r\n        mergeData?.map((httpData) => {\r\n          const arr = coinTickers.find(\r\n            (socketData) => httpData.market === socketData.code\r\n          );\r\n          if (arr) {\r\n            return { ...httpData, ...arr };\r\n          }\r\n          return httpData;\r\n        }) || []\r\n      );\r\n    }\r\n  }, [mergeData, coinTickers]);\r\n  const makeSkeleton = () => {\r\n    const skeletons = [];\r\n    for (let i = 1; i <= 10; i++) {\r\n      skeletons.push(<SkeletonUI key={i} />);\r\n    }\r\n    return skeletons;\r\n  };\r\n  return (\r\n    <>\r\n      {mergeData && tickerList && coinTickers\r\n        ? mergeData.map((data, index) => (\r\n            <Tr key={index}>\r\n              <NameTd>\r\n                <GoDetail\r\n                  href={`https://upbit.com/exchange?code=CRIX.UPBIT.${data.market}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  <Img\r\n                    src={`https://static.upbit.com/logos/${data.market.substring(\r\n                      4\r\n                    )}.png`}\r\n                    alt=\"coin_icon\"\r\n                    loading=\"lazy\"\r\n                    decoding=\"async\"\r\n                  />\r\n                  <div>\r\n                    <span>{data.english_name}</span>\r\n                    <span>{data.market.substring(4)}</span>\r\n                  </div>\r\n                </GoDetail>\r\n              </NameTd>\r\n              <Td>\r\n                <TradePrice\r\n                  coinName={data.market}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={coinTickers}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                <ChangePrice\r\n                  coinName={data.market}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={coinTickers}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                <AccTradeVolume24h\r\n                  coinName={data.market}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={coinTickers}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                <AccTradePrice24h\r\n                  coinName={data.market}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={coinTickers}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                <span>\r\n                  {data.supply.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}{\" \"}\r\n                  {data.market.substring(4)}\r\n                </span>\r\n              </Td>\r\n              <Td>\r\n                <CirculatingSupply\r\n                  coinName={data.market}\r\n                  supply={data.supply}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={coinTickers}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                {data.historyArr && (\r\n                  <Chart200Days\r\n                    coinName={data.market}\r\n                    history={data.historyArr}\r\n                    tickerList={tickerList}\r\n                    tickerSocketData={coinTickers}\r\n                  />\r\n                )}\r\n              </Td>\r\n            </Tr>\r\n          ))\r\n        : makeSkeleton()}\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(TbodyTr);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useCoinNames from \"../libs/useCoinNames\";\r\nimport { TextBox, TextBoxMiddle, TextBoxbottom } from \"../pages/main/common/mainCommon\";\r\nimport Colgroup from \"../components/CoinList/ColGroup\";\r\nimport TheadTr from \"../components/CoinList/TheadTr\";\r\nimport TbodyTr from \"../components/CoinList/TbodyTr\";\r\n\r\nconst Container = styled.section`\r\n  width: 100%;\r\n  margin-top: -5rem;\r\n  padding: 4vw 2.7vw 15vw 2.7vw;\r\n  border-radius: 5vw 5vw 0 0;\r\n  background-color: #f8f8f8;\r\n  position: relative;\r\n  z-index: 3;\r\n  @media (max-width: 1050px) {\r\n    & {\r\n      padding-bottom: 12rem;\r\n    }\r\n  }\r\n`;\r\nconst Inner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst TableBox = styled.div`\r\n  @media (max-width: 1279px) {\r\n    & {\r\n      overflow-x: scroll;\r\n    }\r\n  }\r\n`;\r\nconst ListTable = styled.table`\r\n  width: 100%;\r\n  font-weight: 900;\r\n  @media (max-width: 650px) {\r\n    & {\r\n      font-size: 2.3vw;\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    & {\r\n      font-size: 3vw;\r\n    }\r\n  }\r\n`;\r\nexport const Tr = styled.tr`\r\n  border-bottom: 1px solid #e2e2e2;\r\n  :first-child {\r\n    border-top: 1px solid #e2e2e2;\r\n  }\r\n`;\r\nconst BtnBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5vw;\r\n  margin-top: 40px;\r\n`;\r\nconst PageBtn = styled.button<{ selected: boolean }>`\r\n  font-family: \"Apercu\", sans-serif;\r\n  font-weight: 600;\r\n  border: none;\r\n  border-radius: 7px;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  transition: all 0.2s ease-in-out;\r\n  background-color: ${(props) => (props.selected ? \"#333\" : \"transparent\")};\r\n  color: ${(props) => (props.selected ? \"#fff\" : \"#333\")};\r\n  will-change: background-color, color;\r\n`;\r\nfunction CoinList() {\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(10);\r\n  const pageNation = (pageNum: number) => {\r\n    setPage(() => pageNum);\r\n  };\r\n  useEffect(() => {\r\n    updateCount(page);\r\n  }, [page]);\r\n  const updateCount = (page: number) => {\r\n    setCount(() => page * 10);\r\n  };\r\n  const { nameData } = useCoinNames(true);\r\n  const makePageBtn = () => {\r\n    const pageButtons = [];\r\n    if (nameData) {\r\n      let pageLength = Math.ceil(nameData.length / 10);\r\n      for (let i = 1; i <= pageLength; i++) {\r\n        pageButtons.push(\r\n          <PageBtn onClick={() => pageNation(i)} key={i} selected={i === page}>\r\n            {i}\r\n          </PageBtn>\r\n        );\r\n      }\r\n      return pageButtons;\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <Inner>\r\n        <TextBox>\r\n          <TextBoxMiddle>CoinList</TextBoxMiddle>\r\n          <TextBoxbottom>\r\n            Combination of UPBIT Websocket, React-Query\r\n          </TextBoxbottom>\r\n        </TextBox>\r\n        <TableBox>\r\n          <ListTable>\r\n            <Colgroup />\r\n            <thead>\r\n              <TheadTr />\r\n            </thead>\r\n            <tbody>\r\n              <TbodyTr count={count} />\r\n            </tbody>\r\n          </ListTable>\r\n        </TableBox>\r\n        <BtnBox>{makePageBtn()}</BtnBox>\r\n      </Inner>\r\n    </Container>\r\n  );\r\n}\r\nexport default React.memo(CoinList);\r\n"],"names":["circulatingSupply","id","supply","allList","data","nameData","useQuery","async","response","fetch","json","fetchCoins","select","datas","filter","market","indexOf","refetchOnMount","refetchOnWindowFocus","ColName","styled","col","_templateObject","_taggedTemplateLiteral","ColPrice","_templateObject2","ColChange","_templateObject3","ColVolume","_templateObject4","ColVolumePrice","_templateObject5","ColSupply","_templateObject6","ColCap","_templateObject7","ColChart","_templateObject8","_jsxs","children","_jsx","NameTh","th","Th","Tr","Namediv","div","TdFixed","td","TdNomalDivFixed","Skeleton","SkeletonName","SkeletonPrice","SkeletonChangePrice","SkeletonChangePer","SkeletonVolume","_templateObject9","SkeletonVolumePrice","_templateObject10","SkeletonSupply","_templateObject11","SkeletonMarketCap","_templateObject12","SkeletonChart","_templateObject13","_ref","coinName","tickerSocketData","tickerList","_tickerList$find","price","find","ticker","trade_price","toString","replace","_Fragment","_tickerList$find2","_tickerList$find3","changePrice","change_price","change","changeRate","change_rate","TdChangeDiv","Icons","className","toFixed","accTradePrice24h","acc_trade_price_24h","accTradeVolume24h","acc_trade_volume_24h","substring","ApexChartDiv","ApexChart","ReactApexChart","props","_history$map","history","type","series","map","x","timestamp","y","prev_closing_price","options","chart","background","zoom","enabled","toolbar","show","animations","grid","legend","dataLabels","labels","tooltip","markers","size","stroke","curve","width","colors","xaxis","axisBorder","axisTicks","yaxis","Chart","useCoinListData","count","coinList","tickerHttpData","results","index","length","concat","method","push","fetchCoinTickers","historyData","fetchCoinHistory","mergeData","setMergeData","useState","mergeFn","useCallback","newArr","Promise","all","supplyArr","tickerArr","historyArr","nameArr","name","newObject","then","useEffect","GoDetail","a","Td","NameTd","span","Img","img","TbodyTr","useCoinNames","slice","socketNameList","coinTickers","socket","setSocket","setCoinTickers","error","setError","connectWS","readyState","WebSocket","OPEN","CONNECTING","upbitSocket","addEventListener","console","close","message","text","jsonData","JSON","parse","e","handleOpen","subscribeMsg","ticket","codes","send","stringify","removeEventListener","log","useCoinTickersSocket","setTickerList","httpData","arr","socketData","code","href","target","src","alt","loading","decoding","english_name","TradePrice","ChangePrice","AccTradeVolume24h","AccTradePrice24h","CirculatingSupply","Chart200Days","makeSkeleton","skeletons","i","SkeletonUI","React","Container","section","Inner","TableBox","ListTable","table","tr","BtnBox","PageBtn","button","selected","CoinList","page","setPage","setCount","updateCount","TextBox","TextBoxMiddle","TextBoxbottom","Colgroup","TheadTr","makePageBtn","pageButtons","pageLength","Math","ceil","onClick","pageNation","pageNum"],"sourceRoot":""}