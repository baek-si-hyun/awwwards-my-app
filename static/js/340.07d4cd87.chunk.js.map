{"version":3,"file":"static/js/340.07d4cd87.chunk.js","mappings":"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","sources":["libs/useCoinNames.ts","pages/coin_detail/TitleBar.tsx","pages/coin_detail/Sidebar.tsx","pages/coin_detail/CoinDetail.tsx","services/coinApi.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { ICoins } from \"../interface/icoin\";\r\nimport { fetchCoins } from \"../services/coinApi\";\r\n\r\nconst useCoinNames = (allList : boolean) => {\r\n  const { data: nameData } = useQuery<ICoins[]>([\"name\"], () => fetchCoins(), {\r\n    select: (data) =>\r\n      data.filter((data) => {\r\n        if (allList) {\r\n          return !data.market.indexOf(\"KRW\");\r\n        } else {\r\n          return data\r\n        }\r\n      }),\r\n    refetchOnMount: false,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  return { nameData };\r\n};\r\n\r\nexport default useCoinNames;\r\n","/* eslint-disable jsx-a11y/anchor-has-content */\r\nimport styled from \"styled-components\";\r\nimport { useCoinTickersSocket } from \"../../services/coinApi\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ICoins } from \"../../interface/icoin\";\r\nimport useCoinNames from \"../../libs/useCoinNames\";\r\n\r\nconst TitleBarContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 150px;\r\n  border: 1px solid #d9dadb;\r\n  border-bottom: none;\r\n  background-color: #fff;\r\n`;\r\nconst SymbolBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 4px solid #e0e3eb;\r\n  & div + div {\r\n    display: flex;\r\n  }\r\n`;\r\nconst ImgBox = styled.div`\r\n  padding: 7px 10px 7px 14px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Img = styled.img`\r\n  max-width: 26px;\r\n`;\r\nconst TextBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n`;\r\nconst CoinName = styled.span`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  letter-spacing: -2px;\r\n`;\r\nconst CoinSymbol = styled.span`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n`;\r\nconst MarketBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 18px 20px 14px 20px;\r\n`;\r\nconst PriceData = styled.div<{ change: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 7px;\r\n  color: ${(props) =>\r\n    props.change === \"RISE\"\r\n      ? \"#089981\"\r\n      : props.change === \"FALL\"\r\n      ? \"#F23645\"\r\n      : \"#222\"};\r\n  will-change: color;\r\n`;\r\nconst TradePriceBox = styled.div`\r\n  display: flex;\r\n  align-items: end;\r\n  gap: 2px;\r\n`;\r\nconst TradePrice = styled.div`\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n`;\r\nconst KRW = styled.div`\r\n  margin-bottom: 3px;\r\n  font-size: 14px;\r\n`;\r\nconst ChangeBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  gap: 4px;\r\n`;\r\nconst ChangeRate = styled.div``;\r\nconst ChangePrice = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst SimpleData = styled.div`\r\n  width: 550px;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(2, 1fr);\r\n`;\r\nconst Data = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  &:nth-child(odd) {\r\n    margin-right: 20px;\r\n  }\r\n  &:nth-child(1),\r\n  &:nth-child(2) {\r\n    border-bottom: 1px solid #e0e3eb;\r\n    padding-bottom: 9px;\r\n    margin-bottom: 9px;\r\n  }\r\n`;\r\nconst Label = styled.span`\r\n  font-size: 12px;\r\n`;\r\nconst Value = styled.span`\r\n  font-size: 14px;\r\n`;\r\nconst High = styled(Value)`\r\n  color: #089981;\r\n`;\r\nconst Low = styled(Value)`\r\n  color: #F23645;\r\n`;\r\nconst Unit = styled.span`\r\n  color: #999999;\r\n  font-weight: normal;\r\n  font-size: 11px;\r\n`;\r\nconst Svg = styled.svg<{ change: string }>`\r\n  fill: ${(props) =>\r\n    props.change === \"RISE\"\r\n      ? \"#089981\"\r\n      : props.change === \"FALL\"\r\n      ? \"#F23645\"\r\n      : \"#222\"};\r\n  will-change: color;\r\n`;\r\nfunction TitleBar({nameData} : {nameData : ICoins[]}) {\r\n  const { pathname } = useLocation();\r\n  const [coinName, setCoinName] = useState(\"\");\r\n  const [nameObj, setNameObj] = useState<ICoins>();\r\n  const { data: tickerSocketData } = useCoinTickersSocket([coinName]!);\r\n  useEffect(() => {\r\n    const editPathname = pathname.replace(/\\/coin-detail\\/UPBIT:|KRW/g, \"\");\r\n    setNameObj(nameData?.find((item) => item.market.includes(editPathname)));\r\n    const coinWithPrefix = \"KRW-\" + editPathname;\r\n    setCoinName(coinWithPrefix);\r\n  }, [pathname, nameData]);\r\n\r\n  return (\r\n    <>\r\n      {tickerSocketData && (\r\n        <TitleBarContainer>\r\n          <SymbolBar>\r\n            <ImgBox>\r\n              <Img\r\n                src={`https://static.upbit.com/logos/${nameObj?.market.substring(\r\n                  4\r\n                )}.png`}\r\n                alt=\"coin_icon\"\r\n                loading=\"lazy\"\r\n                decoding=\"async\"\r\n              />\r\n            </ImgBox>\r\n            <TextBox>\r\n              <CoinName>{nameObj?.korean_name}</CoinName>\r\n              <CoinSymbol>\r\n                {nameObj?.market.split(\"-\").reverse().join(\"/\")}\r\n              </CoinSymbol>\r\n            </TextBox>\r\n          </SymbolBar>\r\n          <MarketBar>\r\n            <PriceData change={tickerSocketData[0].change}>\r\n              <TradePriceBox>\r\n                <TradePrice>\r\n                  {tickerSocketData[0].trade_price.toLocaleString()}\r\n                </TradePrice>{\" \"}\r\n                <KRW>KRW</KRW>\r\n              </TradePriceBox>\r\n              <ChangeBox>\r\n                <ChangeRate>\r\n                  {tickerSocketData[0].change === \"RISE\"\r\n                    ? \"+\"\r\n                    : tickerSocketData[0].change === \"FALL\"\r\n                    ? \"-\"\r\n                    : \"\"}\r\n                  {(tickerSocketData[0].change_rate * 100 || 0).toFixed(2) +\r\n                    \"%\"}\r\n                </ChangeRate>\r\n                <ChangePrice>\r\n                  {tickerSocketData[0].change === \"RISE\" ? (\r\n                    <Svg\r\n                      change={tickerSocketData[0].change}\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      height=\"14\"\r\n                      viewBox=\"0 -960 960 960\"\r\n                      width=\"14\"\r\n                    >\r\n                      <path d=\"m80-160 400-640 400 640H80Z\" />\r\n                    </Svg>\r\n                  ) : tickerSocketData[0].change === \"FALL\" ? (\r\n                    <Svg\r\n                      change={tickerSocketData[0].change}\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      height=\"14\"\r\n                      viewBox=\"0 -960 960 960\"\r\n                      width=\"14\"\r\n                      style={{ transform: \"rotate(180deg)\" }}\r\n                    >\r\n                      <path d=\"m80-160 400-640 400 640H80Z\" />\r\n                    </Svg>\r\n                  ) : (\r\n                    \"\"\r\n                  )}{\" \"}\r\n                  {tickerSocketData[0].change_price.toLocaleString()}\r\n                </ChangePrice>\r\n              </ChangeBox>\r\n            </PriceData>\r\n            <SimpleData>\r\n              <Data>\r\n                <Label>고가:</Label>{\" \"}\r\n                <High>{tickerSocketData[0].high_price.toLocaleString()}</High>\r\n              </Data>\r\n              <Data>\r\n                <Label>거래량(24h)</Label>\r\n                <Value>\r\n                  {tickerSocketData[0].acc_trade_volume_24h.toLocaleString()}\r\n                  <Unit> {nameObj?.market.substring(4)}</Unit>\r\n                </Value>\r\n              </Data>\r\n              <Data>\r\n                <Label>저가:</Label>{\" \"}\r\n                <Low>{tickerSocketData[0].low_price.toLocaleString()}</Low>\r\n              </Data>\r\n              <Data>\r\n                <Label>거래대금(24h)</Label>\r\n                <Value>\r\n                  {tickerSocketData[0].acc_trade_price_24h\r\n                    .toLocaleString()\r\n                    .replace(/\\.\\d+/, \"\")}{\" \"}\r\n                  <Unit>KRW</Unit>\r\n                </Value>\r\n              </Data>\r\n            </SimpleData>\r\n          </MarketBar>\r\n        </TitleBarContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TitleBar;\r\n","/* eslint-disable jsx-a11y/anchor-has-content */\r\nimport styled from \"styled-components\";\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport { ICoins } from \"../../interface/icoin\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ListBox = styled.div``;\r\nconst ListUl = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction Sidebar({ nameData }: { nameData: ICoins[] }) {\r\n  return (\r\n    <Container>\r\n      <></>\r\n      <></>\r\n      <></>\r\n      <ListBox>\r\n        {/* <ListUl>{nameData.map(<SidebarItem />)}</ListUl> */}\r\n      </ListBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable jsx-a11y/anchor-has-content */\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TitleBar from \"./TitleBar\";\r\nimport useCoinNames from \"../../libs/useCoinNames\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 7fr 3fr;\r\n  align-items: center;\r\n  height: 100vh;\r\n  padding: 3vw 5vw;\r\n  margin-bottom: 8vh;\r\n  font-family: Roboto;\r\n`;\r\n\r\nconst TradingviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst TradingviewInner = styled.div`\r\n  flex: 1;\r\n`;\r\nconst Tradingview = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst CoinSidebar = styled.div``;\r\n\r\nfunction CoinDetail() {\r\n  const { pathname } = useLocation();\r\n  let tvScriptLoadingPromise: Promise<void>;\r\n  const onLoadScriptRef = useRef<(() => void) | null>();\r\n\r\n  useEffect(() => {\r\n    onLoadScriptRef.current = createWidget;\r\n\r\n    if (!tvScriptLoadingPromise) {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      tvScriptLoadingPromise = new Promise((resolve) => {\r\n        const script = document.createElement(\"script\");\r\n        script.id = \"tradingview-widget-loading-script\";\r\n        script.src = \"https://s3.tradingview.com/tv.js\";\r\n        script.type = \"text/javascript\";\r\n        script.onload = () => resolve();\r\n        document.head.appendChild(script);\r\n      });\r\n    }\r\n\r\n    tvScriptLoadingPromise.then(\r\n      () => onLoadScriptRef.current && onLoadScriptRef.current()\r\n    );\r\n\r\n    return () => {\r\n      onLoadScriptRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  function createWidget(): void {\r\n    if (\r\n      document.getElementById(\"tradingview_e032d\") &&\r\n      \"TradingView\" in window\r\n    ) {\r\n      new window.TradingView.widget({\r\n        autosize: true,\r\n        symbol: pathname.slice(13),\r\n        interval: \"D\",\r\n        timezone: \"Asia/Seoul\",\r\n        theme: \"light\",\r\n        style: \"1\",\r\n        locale: \"kr\",\r\n        toolbar_bg: \"#fff\",\r\n        enable_publishing: true,\r\n        allow_symbol_change: false,\r\n        hide_side_toolbar: false,\r\n        details: false,\r\n        container_id: \"tradingview_e032d\",\r\n      });\r\n    }\r\n  }\r\n  const { nameData } = useCoinNames(false);\r\n\r\n  return (\r\n    <>\r\n      {nameData && (\r\n        <Container>\r\n          <TradingviewContainer>\r\n            {<TitleBar nameData={nameData} />}\r\n            <TradingviewInner className=\"tradingview-widget-container\">\r\n              <Tradingview id=\"tradingview_e032d\" />\r\n              <div className=\"tradingview-widget-copyright\">\r\n                <a\r\n                  href=\"https://kr.tradingview.com/\"\r\n                  rel=\"noopener nofollow noreferrer\"\r\n                  target=\"_blank\"\r\n                ></a>\r\n              </div>\r\n            </TradingviewInner>\r\n          </TradingviewContainer>\r\n          <Sidebar nameData={nameData} />\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoinDetail;\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ICoinSocketTickers } from \"../interface/icoin\";\r\n\r\nexport async function fetchCoins() {\r\n  const response = await fetch(\r\n    `https://api.upbit.com/v1/market/all?isDetails=false`\r\n  );\r\n  return await response.json();\r\n}\r\nexport async function fetchCoinTickers(coinList: string[]) {\r\n  let results = [];\r\n  for (let index = 0; index < coinList.length; index++) {\r\n    const response = await fetch(\r\n      `https://api.upbit.com/v1/ticker?markets=${coinList[index]}`\r\n    );\r\n    const [json] = await response.json();\r\n    results.push(json);\r\n  }\r\n  return results;\r\n}\r\n\r\nexport async function fetchCoinHistory(coinList: string[]) {\r\n  let results = [];\r\n  for (let index = 0; index < coinList.length; index++) {\r\n    const response = await fetch(\r\n      `https://api.upbit.com/v1/candles/days?market=${coinList[index]}&count=200&convertingPriceUnit=KRW`\r\n    );\r\n    const json = await response.json();\r\n    results.push(json);\r\n  }\r\n  return results;\r\n}\r\n\r\nexport function useCoinTickersSocket(coinList: string[]) {\r\n  const [socket, setSocket] = useState<WebSocket | null>(null);\r\n  const connectWS = () => {\r\n    const upbitSocket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\r\n    setSocket(() => upbitSocket);\r\n    upbitSocket.addEventListener(\"error\", (error) => {\r\n      console.error(\"WebSocket error:\", error);\r\n      connectWS();\r\n    });\r\n    upbitSocket.addEventListener(\"close\", () => {\r\n      console.log(\"WebSocket connection closed\");\r\n      connectWS();\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      connectWS();\r\n      return;\r\n    }\r\n    socket.addEventListener(\"open\", () => {\r\n      const subscribeMsg = [\r\n        { ticket: \"UNIQUE_TICKET\" },\r\n        { type: \"ticker\", codes: coinList },\r\n      ];\r\n      socket.send(JSON.stringify(subscribeMsg));\r\n    });\r\n  }, [coinList, socket]);\r\n\r\n  const fetchCoinTickersSocket = async () => {\r\n    let newArr: ICoinSocketTickers[] = [];\r\n    await new Promise((resolve, reject) => {\r\n      if (!socket) {\r\n        reject(\"The websocket connection is experiencing some delay.\");\r\n        return;\r\n      }\r\n      socket.addEventListener(\"message\", (message) => {\r\n        message.data.text().then((text: string) => {\r\n          const jsonData = JSON.parse(text);\r\n          newArr = [jsonData];\r\n          resolve(newArr);\r\n        });\r\n      });\r\n    });\r\n    return newArr;\r\n  };\r\n\r\n  return useQuery<ICoinSocketTickers[]>(\r\n    [\"coinTickers\", coinList],\r\n    () => fetchCoinTickersSocket(),\r\n    {\r\n      enabled: !!coinList,\r\n      refetchInterval: 500,\r\n      cacheTime: 500,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n}\r\n\r\n//무료 Supply api, market cap api 못찾겠다...\r\nexport const circulatingSupply = [\r\n  { id: \"KRW-EGLD\", supply: 26141841 },\r\n  { id: \"KRW-MINA\", supply: 993204269 },\r\n  {\r\n    id: \"KRW-BLUR\",\r\n    supply: 1037696566,\r\n  },\r\n  {\r\n    id: \"KRW-ADA\",\r\n    supply: 35239093292,\r\n  },\r\n  {\r\n    id: \"KRW-LSK\",\r\n    supply: 128900445,\r\n  },\r\n  {\r\n    id: \"KRW-SUI\",\r\n    supply: 860392960,\r\n  },\r\n  {\r\n    id: \"KRW-BTC\",\r\n    supply: 19527825,\r\n  },\r\n  {\r\n    id: \"KRW-ETH\",\r\n    supply: 120269588,\r\n  },\r\n  {\r\n    id: \"KRW-NEO\",\r\n    supply: 70538831,\r\n  },\r\n  {\r\n    id: \"KRW-MTL\",\r\n    supply: 66588888,\r\n  },\r\n  {\r\n    id: \"KRW-XRP\",\r\n    supply: 53560508378,\r\n  },\r\n  {\r\n    id: \"KRW-ETC\",\r\n    supply: 143761250,\r\n  },\r\n  {\r\n    id: \"KRW-OMG\",\r\n    supply: 140245398,\r\n  },\r\n  {\r\n    id: \"KRW-SNT\",\r\n    supply: 3867254211,\r\n  },\r\n  {\r\n    id: \"KRW-WAVES\",\r\n    supply: 112880272,\r\n  },\r\n  {\r\n    id: \"KRW-XEM\",\r\n    supply: 8999999999,\r\n  },\r\n  {\r\n    id: \"KRW-QTUM\",\r\n    supply: 104755842,\r\n  },\r\n  {\r\n    id: \"KRW-STEEM\",\r\n    supply: 447323620,\r\n  },\r\n  {\r\n    id: \"KRW-XLM\",\r\n    supply: 27828662953,\r\n  },\r\n  {\r\n    id: \"KRW-ARDR\",\r\n    supply: 998999495,\r\n  },\r\n  {\r\n    id: \"KRW-ARK\",\r\n    supply: 176574732,\r\n  },\r\n  {\r\n    id: \"KRW-STORJ\",\r\n    supply: 369601919,\r\n  },\r\n  {\r\n    id: \"KRW-GRS\",\r\n    supply: 83701269,\r\n  },\r\n  {\r\n    id: \"KRW-GRT\",\r\n    supply: 9273618693,\r\n  },\r\n  {\r\n    id: \"KRW-POWR\",\r\n    supply: 511332804,\r\n  },\r\n  {\r\n    id: \"KRW-BTG\",\r\n    supply: 17513924,\r\n  },\r\n  {\r\n    id: \"KRW-ICX\",\r\n    supply: 970574697,\r\n  },\r\n  {\r\n    id: \"KRW-EOS\",\r\n    supply: 1106943005,\r\n  },\r\n  {\r\n    id: \"KRW-TRX\",\r\n    supply: 88813932678,\r\n  },\r\n  {\r\n    id: \"KRW-SC\",\r\n    supply: 55459686387,\r\n  },\r\n  {\r\n    id: \"KRW-ONT\",\r\n    supply: 875249524,\r\n  },\r\n  {\r\n    id: \"KRW-ZIL\",\r\n    supply: 17372203179,\r\n  },\r\n  {\r\n    id: \"KRW-POLYX\",\r\n    supply: 743118982,\r\n  },\r\n  {\r\n    id: \"KRW-ZRX\",\r\n    supply: 847496055,\r\n  },\r\n  {\r\n    id: \"KRW-LOOM\",\r\n    supply: 1219425698,\r\n  },\r\n  {\r\n    id: \"KRW-BCH\",\r\n    supply: 19545181,\r\n  },\r\n  {\r\n    id: \"KRW-BAT\",\r\n    supply: 1490115132,\r\n  },\r\n  {\r\n    id: \"KRW-IOST\",\r\n    supply: 18588745668,\r\n  },\r\n  {\r\n    id: \"KRW-CVC\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-IQ\",\r\n    supply: 17022926376,\r\n  },\r\n  {\r\n    id: \"KRW-IOTA\",\r\n    supply: 2980714977,\r\n  },\r\n  {\r\n    id: \"KRW-HIFI\",\r\n    supply: 95012805,\r\n  },\r\n  {\r\n    id: \"KRW-ONG\",\r\n    supply: 360446029,\r\n  },\r\n  {\r\n    id: \"KRW-GAS\",\r\n    supply: 10128375,\r\n  },\r\n  {\r\n    id: \"KRW-UPP\",\r\n    supply: 490334811,\r\n  },\r\n  {\r\n    id: \"KRW-ELF\",\r\n    supply: 622340178,\r\n  },\r\n  {\r\n    id: \"KRW-KNC\",\r\n    supply: 170553950,\r\n  },\r\n  {\r\n    id: \"KRW-BSV\",\r\n    supply: 19266077,\r\n  },\r\n  {\r\n    id: \"KRW-THETA\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-QKC\",\r\n    supply: 6399906497,\r\n  },\r\n  {\r\n    id: \"KRW-BTT\",\r\n    supply: 951421714286000,\r\n  },\r\n  {\r\n    id: \"KRW-MOC\",\r\n    supply: 399489688,\r\n  },\r\n  {\r\n    id: \"KRW-TFUEL\",\r\n    supply: 6329728259,\r\n  },\r\n  {\r\n    id: \"KRW-MANA\",\r\n    supply: 1893095371,\r\n  },\r\n  {\r\n    id: \"KRW-ANKR\",\r\n    supply: 10000000000,\r\n  },\r\n  {\r\n    id: \"KRW-AERGO\",\r\n    supply: 445000000,\r\n  },\r\n  {\r\n    id: \"KRW-ATOM\",\r\n    supply: 372014559,\r\n  },\r\n  {\r\n    id: \"KRW-TT\",\r\n    supply: 10445528584,\r\n  },\r\n  {\r\n    id: \"KRW-CRE\",\r\n    supply: 10000000000,\r\n  },\r\n  {\r\n    id: \"KRW-MBL\",\r\n    supply: 16805372888,\r\n  },\r\n  {\r\n    id: \"KRW-WAXP\",\r\n    supply: 3369760187,\r\n  },\r\n  {\r\n    id: \"KRW-HBAR\",\r\n    supply: 33530602294,\r\n  },\r\n  {\r\n    id: \"KRW-MED\",\r\n    supply: 6908642520,\r\n  },\r\n  {\r\n    id: \"KRW-MLK\",\r\n    supply: 316685004,\r\n  },\r\n  {\r\n    id: \"KRW-SBD\",\r\n    supply: 12532609,\r\n  },\r\n  {\r\n    id: \"KRW-STPT\",\r\n    supply: 1942420283,\r\n  },\r\n  {\r\n    id: \"KRW-ORBS\",\r\n    supply: 3837372313,\r\n  },\r\n  {\r\n    id: \"KRW-VET\",\r\n    supply: 72714516834,\r\n  },\r\n  {\r\n    id: \"KRW-CHZ\",\r\n    supply: 7565079839,\r\n  },\r\n  {\r\n    id: \"KRW-STMX\",\r\n    supply: 10000000000,\r\n  },\r\n  {\r\n    id: \"KRW-DKA\",\r\n    supply: 3121666667,\r\n  },\r\n  {\r\n    id: \"KRW-HIVE\",\r\n    supply: 500749243,\r\n  },\r\n  {\r\n    id: \"KRW-KAVA\",\r\n    supply: 885982791,\r\n  },\r\n  {\r\n    id: \"KRW-AHT\",\r\n    supply: 4317728503,\r\n  },\r\n  {\r\n    id: \"KRW-LINK\",\r\n    supply: 556849970,\r\n  },\r\n  {\r\n    id: \"KRW-SEI\",\r\n    supply: 1800000000,\r\n  },\r\n  {\r\n    id: \"KRW-XTZ\",\r\n    supply: 932500082,\r\n  },\r\n  {\r\n    id: \"KRW-BORA\",\r\n    supply: 993750000,\r\n  },\r\n  {\r\n    id: \"KRW-JST\",\r\n    supply: 8902080000,\r\n  },\r\n  {\r\n    id: \"KRW-CRO\",\r\n    supply: 25263013692,\r\n  },\r\n  {\r\n    id: \"KRW-TON\",\r\n    supply: 43749835,\r\n  },\r\n  {\r\n    id: \"KRW-SXP\",\r\n    supply: 582529712,\r\n  },\r\n  {\r\n    id: \"KRW-HUNT\",\r\n    supply: 198912688,\r\n  },\r\n  {\r\n    id: \"KRW-PLA\",\r\n    supply: 569265030,\r\n  },\r\n  {\r\n    id: \"KRW-DOT\",\r\n    supply: 1263709202,\r\n  },\r\n  {\r\n    id: \"KRW-SRM\",\r\n    supply: 263244669,\r\n  },\r\n  {\r\n    id: \"KRW-MVL\",\r\n    supply: 23752958863,\r\n  },\r\n  {\r\n    id: \"KRW-STRAX\",\r\n    supply: 154744623,\r\n  },\r\n  {\r\n    id: \"KRW-AQT\",\r\n    supply: 26640785,\r\n  },\r\n  {\r\n    id: \"KRW-GLM\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-SSX\",\r\n    supply: 2861938931,\r\n  },\r\n  {\r\n    id: \"KRW-META\",\r\n    supply: 1703608720,\r\n  },\r\n  {\r\n    id: \"KRW-FCT2\",\r\n    supply: 766632231,\r\n  },\r\n  {\r\n    id: \"KRW-CBK\",\r\n    supply: 78071865,\r\n  },\r\n  {\r\n    id: \"KRW-SAND\",\r\n    supply: 2071031926,\r\n  },\r\n  {\r\n    id: \"KRW-HPO\",\r\n    supply: 913409273,\r\n  },\r\n  {\r\n    id: \"KRW-HUM\",\r\n    supply: 913409274,\r\n  },\r\n  {\r\n    id: \"KRW-DOGE\",\r\n    supply: 141619286384,\r\n  },\r\n  {\r\n    id: \"KRW-STRK\",\r\n    supply: 3964522,\r\n  },\r\n  {\r\n    id: \"KRW-PUNDIX\",\r\n    supply: 258491637,\r\n  },\r\n  {\r\n    id: \"KRW-FLOW\",\r\n    supply: 1036200000,\r\n  },\r\n  {\r\n    id: \"KRW-AXS\",\r\n    supply: 141391485,\r\n  },\r\n  {\r\n    id: \"KRW-STX\",\r\n    supply: 1415522352,\r\n  },\r\n  {\r\n    id: \"KRW-XEC\",\r\n    supply: 19539129673093,\r\n  },\r\n  {\r\n    id: \"KRW-SOL\",\r\n    supply: 419295247,\r\n  },\r\n  {\r\n    id: \"KRW-MATIC\",\r\n    supply: 9309803041,\r\n  },\r\n  {\r\n    id: \"KRW-NU\",\r\n    supply: 703000000,\r\n  },\r\n  {\r\n    id: \"KRW-AAVE\",\r\n    supply: 14598485,\r\n  },\r\n  {\r\n    id: \"KRW-1INCH\",\r\n    supply: 1043779237,\r\n  },\r\n  {\r\n    id: \"KRW-ALGO\",\r\n    supply: 7925375653,\r\n  },\r\n  {\r\n    id: \"KRW-NEAR\",\r\n    supply: 989205460,\r\n  },\r\n  {\r\n    id: \"KRW-AVAX\",\r\n    supply: 355071893,\r\n  },\r\n  {\r\n    id: \"KRW-T\",\r\n    supply: 9312266778,\r\n  },\r\n  {\r\n    id: \"KRW-CELO\",\r\n    supply: 515094127,\r\n  },\r\n  {\r\n    id: \"KRW-GMT\",\r\n    supply: 1294809379,\r\n  },\r\n  {\r\n    id: \"KRW-APT\",\r\n    supply: 247248463,\r\n  },\r\n  {\r\n    id: \"KRW-SHIB\",\r\n    supply: 589346914631298,\r\n  },\r\n  {\r\n    id: \"KRW-MASK\",\r\n    supply: 82112500,\r\n  },\r\n  {\r\n    id: \"KRW-ARB\",\r\n    supply: 1275000000,\r\n  },\r\n];\r\n"],"names":["allList","data","nameData","useQuery","fetchCoins","select","filter","market","indexOf","refetchOnMount","refetchOnWindowFocus","TitleBarContainer","styled","div","_templateObject","_taggedTemplateLiteral","SymbolBar","_templateObject2","ImgBox","_templateObject3","Img","img","_templateObject4","TextBox","_templateObject5","CoinName","span","_templateObject6","CoinSymbol","_templateObject7","MarketBar","_templateObject8","PriceData","_templateObject9","props","change","TradePriceBox","_templateObject10","TradePrice","_templateObject11","KRW","_templateObject12","ChangeBox","_templateObject13","ChangeRate","_templateObject14","ChangePrice","_templateObject15","SimpleData","_templateObject16","Data","_templateObject17","Label","_templateObject18","Value","_templateObject19","High","_templateObject20","Low","_templateObject21","Unit","_templateObject22","Svg","svg","_templateObject23","_ref","pathname","useLocation","coinName","setCoinName","useState","nameObj","setNameObj","tickerSocketData","useCoinTickersSocket","useEffect","editPathname","replace","find","item","includes","_jsx","_Fragment","children","_jsxs","src","concat","substring","alt","loading","decoding","korean_name","split","reverse","join","trade_price","toLocaleString","change_rate","toFixed","xmlns","height","viewBox","width","d","style","transform","change_price","high_price","acc_trade_volume_24h","low_price","acc_trade_price_24h","Container","ListBox","ul","TradingviewContainer","TradingviewInner","Tradingview","tvScriptLoadingPromise","onLoadScriptRef","useRef","createWidget","document","getElementById","window","TradingView","widget","autosize","symbol","slice","interval","timezone","theme","locale","toolbar_bg","enable_publishing","allow_symbol_change","hide_side_toolbar","details","container_id","current","Promise","resolve","script","createElement","id","type","onload","head","appendChild","then","useCoinNames","TitleBar","className","href","rel","target","Sidebar","async","response","fetch","json","fetchCoinTickers","coinList","results","index","length","push","fetchCoinHistory","socket","setSocket","connectWS","upbitSocket","WebSocket","addEventListener","error","console","log","subscribeMsg","ticket","codes","send","JSON","stringify","newArr","reject","message","text","jsonData","parse","fetchCoinTickersSocket","enabled","refetchInterval","cacheTime","circulatingSupply","supply"],"sourceRoot":""}