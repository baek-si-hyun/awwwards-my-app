{"version":3,"file":"static/js/258.829e195f.chunk.js","mappings":"sQAGMA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uIAWtBC,EAAQJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oJAUlBG,EAAkBN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iIAS5BK,EAAqBR,EAAAA,GAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qLAiErC,I,sBAAA,EArDA,SAAmBO,GAMf,IALFC,EAAWD,EAAXC,YACAC,EAAIF,EAAJE,KAKOC,GAAPC,EAAAA,EAAAA,GAAkBH,EAAW,GAAf,GACd,OACEI,EAAAA,EAAAA,MAAChB,EAAS,CAAAiB,SAAA,EACRD,EAAAA,EAAAA,MAACX,EAAK,CAAAY,SAAA,EACJC,EAAAA,EAAAA,KAACX,EAAe,CAAAU,SAAC,mBACjBC,EAAAA,EAAAA,KAACT,EAAkB,CAAAQ,SACP,gBAATJ,EACGC,EAAQK,yBACC,kBAATN,EACAC,EAAQM,2BACC,aAATP,EACAC,EAAQO,uBACC,WAATR,EACAC,EAAQQ,qBACC,SAATT,EACAC,EAAQS,mBACC,UAATV,EACAC,EAAQU,oBACC,WAATX,EACAC,EAAQW,qBACR,WAGRT,EAAAA,EAAAA,MAACX,EAAK,CAAAY,SAAA,EACJC,EAAAA,EAAAA,KAACX,EAAe,CAAAU,SAAC,mBACjBC,EAAAA,EAAAA,KAACT,EAAkB,CAAAQ,SACP,gBAATJ,EACGC,EAAQY,yBACC,kBAATb,EACAC,EAAQa,2BACC,aAATd,EACAC,EAAQc,uBACC,WAATf,EACAC,EAAQe,qBACC,SAAThB,EACAC,EAAQgB,mBACC,UAATjB,EACAC,EAAQiB,oBACC,WAATlB,EACAC,EAAQkB,qBACR,YAKd,ECzFMC,GAASC,EAAAA,EAAAA,IAAG/B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFAMZJ,EAAYC,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iBACxB6B,GAGEE,GAAMlC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAYO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iIAOlBiC,EAASpC,EAAAA,GAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wDAInBkC,EAAMrC,EAAAA,GAAOsC,IAAGC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,8FAMhBqC,EAAWxC,EAAAA,GAAOC,IAAGwC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,scACvB6B,GAwBEU,EAAU1C,EAAAA,GAAOC,IAAG0C,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,oKAUpByC,EAAU5C,EAAAA,GAAOC,IAAG4C,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,mSAiBpB2C,EAAK9C,EAAAA,GAAOC,IAAG8C,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,2FAQf6C,EAAYhD,EAAAA,GAAOiD,KAAIC,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,sWAqBvBgD,EAAOnD,EAAAA,GAAOsC,IAAGc,IAAAA,GAAAjD,EAAAA,EAAAA,GAAA,yBAiGvB,I,IAAA,EA9FA,WACE,IAAckD,GAAgBC,EAAAA,EAAAA,GAC5B,CAAC,YACD,kBAAMC,EAAAA,EAAAA,KAAe,GACrB,CACEC,gBAAgB,EAChBC,sBAAsB,IALlBC,KAQRC,GAAuCL,EAAAA,EAAAA,GACrC,CAAC,YACD,kBAAMM,EAAAA,EAAAA,IAAe,GACrB,CACEJ,gBAAgB,EAChBC,sBAAsB,IALZ9C,EAAWgD,EAAjBD,KAAmBG,EAAOF,EAAPE,QAY3B,OAJAC,EAAAA,EAAAA,YAAU,WACRD,GACF,GAAG,CAACA,KAGF5C,EAAAA,EAAAA,KAAA8C,EAAAA,SAAA,CAAA/C,SACGqC,GACC1C,GACA0C,EAAYW,KAAI,SAACN,EAAMO,GAAK,OAC1BlD,EAAAA,EAAAA,MAAChB,EAAS,CAAAiB,SAAA,EACRD,EAAAA,EAAAA,MAACmB,EAAG,CACFgC,GAAE,IAAAC,OAAMT,EAAKU,eACbC,MAAO,CACLC,KAAMZ,EAAKa,cACX3D,KAAM8C,EAAKc,cACXC,KAAMf,EAAKgB,cACXC,GAAIjB,EAAKkB,YACTC,KAAMnB,EAAKoB,kBACXC,MAAOrB,EAAKsB,eACZC,OAAQvB,EAAKwB,gBACbC,GAAIzB,EAAK0B,YACTC,GAAI3B,EAAK4B,aACTtE,SAAA,EAEFC,EAAAA,EAAAA,KAACmB,EAAM,CAAApB,UACLC,EAAAA,EAAAA,KAACoB,EAAG,CACFkD,IAAK7B,EAAK8B,mBACVC,IAAI,YACJC,QAAQ,OACRC,SAAS,aAGb5E,EAAAA,EAAAA,MAACyB,EAAQ,CAAAxB,SAAA,EACPC,EAAAA,EAAAA,KAAA,QAAAD,SAAO0C,EAAKc,iBACZvD,EAAAA,EAAAA,KAAA,QAAAD,SAAO0C,EAAKa,iBACZtD,EAAAA,EAAAA,KAACyB,EAAO,CAAA1B,SACL0C,EAAKkC,eAAe5B,KAAI,SAAC6B,EAAUC,GAAS,OAC3C7E,EAAAA,EAAAA,KAACkC,EAAI,CAEH4C,OAAO,KACPC,MAAM,KACNT,IAAG,+BAAApB,OAAiC0B,EAAQ,gBAC5CJ,IAAKI,EACLH,QAAQ,OACRC,SAAS,SANJG,EAOL,OAIN7E,EAAAA,EAAAA,KAACgF,EAAU,CACTtF,YAAaA,EACbC,KAAM8C,EAAKU,uBAIjBnD,EAAAA,EAAAA,KAAC2B,EAAO,CAAA5B,UACND,EAAAA,EAAAA,MAAC+B,EAAE,CAAA9B,SAAA,EACDC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UAETD,EAAAA,EAAAA,MAACiC,EAAS,CAAAhC,SAAA,EACRC,EAAAA,EAAAA,KAAA,OACEsE,IAAK7B,EAAKgB,cACVe,IAAI,aACJC,QAAQ,OACRC,SAAS,WAEX1E,EAAAA,EAAAA,KAAA,QAAAD,SAAO0C,EAAKkB,wBA1DJX,EA8DJ,KAItB,EC1MMlE,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iKAStB+F,EAAUlG,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sLA8B1B,MApBA,WACE,OACEc,EAAAA,EAAAA,KAAClB,EAAS,CAACoG,GAAG,WAAUnF,UACtBD,EAAAA,EAAAA,MAACX,EAAAA,GAAK,CAAAY,SAAA,EACJD,EAAAA,EAAAA,MAAC6B,EAAAA,GAAO,CAAA5B,SAAA,EACNC,EAAAA,EAAAA,KAACmF,EAAAA,GAAa,CAAApF,UACZC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAENC,EAAAA,EAAAA,KAACoF,EAAAA,GAAa,CAAArF,SAAC,yHAIjBC,EAAAA,EAAAA,KAACiF,EAAO,CAAAlF,UACNC,EAAAA,EAAAA,KAACqF,EAAe,UAK1B,C","sources":["pages/main/project/VisitedBox.tsx","pages/main/project/ProjectsLinkBox.tsx","pages/main/project/Projects.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { IVisited } from \"../../../interface/iproject\";\r\n\r\nconst Container = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  margin-top: 1vw;\r\n  @media (max-width: 1024px) {\r\n    & {\r\n      width: 60%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Inner = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  :first-child {\r\n    border-right: 1px solid #fff;\r\n  }\r\n`;\r\n\r\nconst VisitedInnerTop = styled.div`\r\n  font-size: 1vw;\r\n  padding: 0.5rem 0;\r\n  @media (max-width: 429px) {\r\n    & {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n`;\r\nconst VisitedInnerBottom = styled.div`\r\n  border-top: 1px solid #fff;\r\n  font-size: 1vw;\r\n  padding: 0.5rem 0;\r\n  font-weight: 900;\r\n  @media (max-width: 429px) {\r\n    & {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction VisitedBox({\r\n  visitedData,\r\n  name,\r\n}: {\r\n  visitedData: IVisited[];\r\n  name: string;\r\n}) {\r\n  const [visited] = visitedData;\r\n  return (\r\n    <Container>\r\n      <Inner>\r\n        <VisitedInnerTop>Visited Today</VisitedInnerTop>\r\n        <VisitedInnerBottom>\r\n          {name === \"visual-coin\"\r\n            ? visited.visited_visaulcoin_today\r\n            : name === \"carrot-market\"\r\n            ? visited.visited_carrotmarket_today\r\n            : name === \"awwwards\"\r\n            ? visited.visited_awwwards_today\r\n            : name === \"kanban\"\r\n            ? visited.visited_kanban_today\r\n            : name === \"coin\"\r\n            ? visited.visited_coin_today\r\n            : name === \"myapp\"\r\n            ? visited.visited_myapp_today\r\n            : name === \"airbnb\"\r\n            ? visited.visited_airbnb_today\r\n            : null}\r\n        </VisitedInnerBottom>\r\n      </Inner>\r\n      <Inner>\r\n        <VisitedInnerTop>Total Visited</VisitedInnerTop>\r\n        <VisitedInnerBottom>\r\n          {name === \"visual-coin\"\r\n            ? visited.visited_visaulcoin_total\r\n            : name === \"carrot-market\"\r\n            ? visited.visited_carrotmarket_total\r\n            : name === \"awwwards\"\r\n            ? visited.visited_awwwards_total\r\n            : name === \"kanban\"\r\n            ? visited.visited_kanban_total\r\n            : name === \"coin\"\r\n            ? visited.visited_coin_total\r\n            : name === \"myapp\"\r\n            ? visited.visited_myapp_total\r\n            : name === \"airbnb\"\r\n            ? visited.visited_airbnb_total\r\n            : null}\r\n        </VisitedInnerBottom>\r\n      </Inner>\r\n    </Container>\r\n  );\r\n}\r\nexport default VisitedBox;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { IProjectsData, IVisited } from \"../../../interface/iproject\";\r\nimport { fetchProjects, fetchVistited } from \"../../../services/listData\";\r\nimport { useEffect } from \"react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport VisitedBox from \"./VisitedBox\";\r\n\r\nconst common = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  ${common};\r\n`;\r\n\r\nconst Box = styled(Link)`\r\n  position: relative;\r\n  border-radius: 15px;\r\n  box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.15);\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ImgBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst Img = styled.img`\r\n  aspect-ratio: 4/3;\r\n  width: 100%;\r\n  border-radius: 15px;\r\n  object-fit: cover;\r\n`;\r\nconst HoverBox = styled.div`\r\n  ${common};\r\n  align-items: center;\r\n  gap: 1rem;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  border-radius: 15px;\r\n  color: #fff;\r\n  opacity: 0;\r\n  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 1));\r\n  will-change: opacity, background;\r\n  transition: opacity 0.2s ease-in-out;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    & {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  display: flex;\r\n  gap: 0.3rem;\r\n  @media (max-width: 440px) {\r\n    & {\r\n      display: grid;\r\n      grid-template-columns: repeat(5, 1fr);\r\n    }\r\n  }\r\n`;\r\nconst TextBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem 0 1rem 0;\r\n  font-size: 1.5rem;\r\n  @media (max-width: 1024px) {\r\n    & {\r\n      font-size: 2vw;\r\n    }\r\n  }\r\n  @media (max-width: 650px) {\r\n    & {\r\n      font-size: 3.5vw;\r\n    }\r\n  }\r\n`;\r\nconst By = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  small {\r\n    font-weight: 100;\r\n  }\r\n`;\r\n\r\nconst InnerSpan = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  img {\r\n    margin: 0 0.3rem;\r\n    object-fit: fill;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    border-radius: 100%;\r\n    @media (max-width: 480px) {\r\n      & {\r\n        width: 32px;\r\n        height: 32px;\r\n      }\r\n    }\r\n  }\r\n  span {\r\n    font-weight: bold;\r\n    border-bottom: 2px solid #b7b7b7;\r\n  }\r\n`;\r\nconst Icon = styled.img`\r\n  fill: #fff;\r\n`;\r\nfunction ProjectsLinkBox() {\r\n  const { data: projectData } = useQuery<IProjectsData[]>(\r\n    [\"project\"],\r\n    () => fetchProjects(),\r\n    {\r\n      refetchOnMount: false,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n  const { data: visitedData, refetch } = useQuery<IVisited[]>(\r\n    [\"visited\"],\r\n    () => fetchVistited(),\r\n    {\r\n      refetchOnMount: false,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [refetch]);\r\n\r\n  return (\r\n    <>\r\n      {projectData &&\r\n        visitedData &&\r\n        projectData.map((data, index) => (\r\n          <Container key={index}>\r\n            <Box\r\n              to={`/${data.projects_code}`}\r\n              state={{\r\n                date: data.projects_date,\r\n                name: data.projects_name,\r\n                logo: data.projects_logo,\r\n                by: data.projects_by,\r\n                imgs: data.projects_prev_img,\r\n                fonts: data.projects_fonts,\r\n                colors: data.projects_colors,\r\n                ko: data.projects_ko,\r\n                en: data.projects_en,\r\n              }}\r\n            >\r\n              <ImgBox>\r\n                <Img\r\n                  src={data.projects_thumbnail}\r\n                  alt=\"thumbnail\"\r\n                  loading=\"lazy\"\r\n                  decoding=\"async\"\r\n                />\r\n              </ImgBox>\r\n              <HoverBox>\r\n                <span>{data.projects_name}</span>\r\n                <span>{data.projects_date}</span>\r\n                <IconBox>\r\n                  {data.projects_tools.map((iconData, iconIndex) => (\r\n                    <Icon\r\n                      key={iconIndex}\r\n                      height=\"35\"\r\n                      width=\"35\"\r\n                      src={`https://cdn.simpleicons.org/${iconData}/white/false`}\r\n                      alt={iconData}\r\n                      loading=\"lazy\"\r\n                      decoding=\"async\"\r\n                    />\r\n                  ))}\r\n                </IconBox>\r\n\r\n                <VisitedBox\r\n                  visitedData={visitedData}\r\n                  name={data.projects_code}\r\n                />\r\n              </HoverBox>\r\n            </Box>\r\n            <TextBox>\r\n              <By>\r\n                <div>\r\n                  <small>by</small>\r\n                </div>\r\n                <InnerSpan>\r\n                  <img\r\n                    src={data.projects_logo}\r\n                    alt=\"maker_logo\"\r\n                    loading=\"lazy\"\r\n                    decoding=\"async\"\r\n                  />\r\n                  <span>{data.projects_by}</span>\r\n                </InnerSpan>\r\n              </By>\r\n            </TextBox>\r\n          </Container>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectsLinkBox;\r\n","import styled from \"styled-components\";\r\nimport {\r\n  Inner,\r\n  TextBox,\r\n  TextBoxbottom,\r\n  TextBoxMiddle,\r\n} from \"../../common/mainCommon\";\r\nimport ProjectsLinkBox from \"./ProjectsLinkBox\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  padding: 1vw 0 13vw 0;\r\n  border-radius: 5vw;\r\n  z-index: 1;\r\n  box-shadow: 0 0 3rem rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst GridBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1rem;\r\n  @media (max-width: 768px) {\r\n    & {\r\n      grid-template-columns: repeat(1, 1fr);\r\n    }\r\n  }\r\n`;\r\nfunction Projects() {\r\n  return (\r\n    <Container id=\"projects\">\r\n      <Inner>\r\n        <TextBox>\r\n          <TextBoxMiddle>\r\n            <h3>projects</h3>\r\n          </TextBoxMiddle>\r\n          <TextBoxbottom>\r\n            지금까지 공부하며 만든 프로젝트들입니다.\r\n          </TextBoxbottom>\r\n        </TextBox>\r\n        <GridBox>\r\n          <ProjectsLinkBox />\r\n        </GridBox>\r\n      </Inner>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Inner","_templateObject2","VisitedInnerTop","_templateObject3","VisitedInnerBottom","_templateObject4","_ref","visitedData","name","visited","_slicedToArray","_jsxs","children","_jsx","visited_visaulcoin_today","visited_carrotmarket_today","visited_awwwards_today","visited_kanban_today","visited_coin_today","visited_myapp_today","visited_airbnb_today","visited_visaulcoin_total","visited_carrotmarket_total","visited_awwwards_total","visited_kanban_total","visited_coin_total","visited_myapp_total","visited_airbnb_total","common","css","Box","Link","ImgBox","Img","img","_templateObject5","HoverBox","_templateObject6","IconBox","_templateObject7","TextBox","_templateObject8","By","_templateObject9","InnerSpan","span","_templateObject10","Icon","_templateObject11","projectData","useQuery","fetchProjects","refetchOnMount","refetchOnWindowFocus","data","_useQuery2","fetchVistited","refetch","useEffect","_Fragment","map","index","to","concat","projects_code","state","date","projects_date","projects_name","logo","projects_logo","by","projects_by","imgs","projects_prev_img","fonts","projects_fonts","colors","projects_colors","ko","projects_ko","en","projects_en","src","projects_thumbnail","alt","loading","decoding","projects_tools","iconData","iconIndex","height","width","VisitedBox","GridBox","id","TextBoxMiddle","TextBoxbottom","ProjectsLinkBox"],"sourceRoot":""}