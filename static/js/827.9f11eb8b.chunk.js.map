{"version":3,"file":"static/js/827.9f11eb8b.chunk.js","mappings":"sPASO,MAAMA,EAAYC,EAAAA,GAAOC,GAA2B;;aAE7CC,IAA+B,IAApBA,EAAMC,UAAqB,GAAM;;;;;;;;EAS7CC,EAAcJ,EAAAA,GAAOK,MAA8B;;;;aAIlDH,IAA+B,IAApBA,EAAMC,UAAqB,EAAI;;;;;;;;;;;;;;EAyDxD,QAzCA,SAAiBG,GAAsC,IAArC,SAAEC,GAAgCD,EAClD,MAAOH,EAAWK,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IACfC,GACCA,EAAMC,sBAAsBH,YAuBhC,OATAI,EAAAA,EAAAA,YAAU,KACJJ,EAAUL,WAAaA,GACzBC,EAAaI,EAAUK,SAErBL,EAAUL,WAAaA,GACzBC,GAAa,EACf,GACC,CAACI,EAAWL,KAGbW,EAAAA,EAAAA,KAACnB,EAAS,CAACI,UAAWA,EAAUgB,UAC9BD,EAAAA,EAAAA,KAACd,EAAW,CAACgB,QAASA,IAvBXC,MACb,MAAMJ,GAAWd,EACjBK,EAAaS,GACbP,GACEY,EAAAA,EAAAA,GAAe,IACVV,EACHK,QAASA,EACTV,SAAUA,KAGdG,GAASa,EAAAA,EAAAA,IAAuB,GAAM,EAaRF,GAAUlB,UAAWA,EAAUgB,SACxDhB,GACCe,EAAAA,EAAAA,KAAA,QAAMM,UAAU,2BAA0BL,SAAC,WAE3CD,EAAAA,EAAAA,KAAA,QAAMM,UAAU,2BAA0BL,SAAC,kBAKrD,E,aC5EO,MAAMM,EAAYzB,EAAAA,GAAOC,GAAG;;;;;;EAOtByB,EAAQ1B,EAAAA,GAAOC,GAAG;;;;;;;;;;;EAalB0B,EAAO3B,EAAAA,GAAOC,GAA4B;;sBAEhCC,GACnBA,EAAM0B,WAAa,UAAY;;;;;;mBAMf1B,GAAWA,EAAM0B,WAAa,OAAS;;;;;;;;MAQrD7B;;;MAGAK;;;;;;;;;;;;;;EAgBOyB,EAAW7B,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;;;EAuBrB6B,EAAS9B,EAAAA,GAAOC,GAAG;;EAInB8B,EAAQ/B,EAAAA,GAAOC,GAAG,GChEzB+B,EAAMhC,EAAAA,GAAOiC,GAAG;;EAItB,SAASC,IACP,MAAMC,GAAetB,EAAAA,EAAAA,IACnBP,IAAA,IAAC,kBAAE8B,GAA6D9B,EAAA,OAC9D8B,EAAkBD,YAAY,IAE5BzB,GAAWC,EAAAA,EAAAA,MAYjB,OACEO,EAAAA,EAAAA,KAACmB,EAAAA,GAAe,CAACC,UAZDC,IAA0C,IAAzC,YAAEC,EAAW,OAAEC,GAAoBF,EACpD,GAAKC,GACDA,EAAa,CACf,MAAME,EAAW,IAAIP,GACfQ,EAAUD,EAASD,EAAOG,OAChCF,EAASG,OAAOJ,EAAOG,MAAO,GAC9BF,EAASG,OAAkB,OAAXL,QAAW,IAAXA,OAAW,EAAXA,EAAaI,MAAO,EAAGD,GACvCjC,GAASoC,EAAAA,EAAAA,GAAcJ,GACzB,GAIsCvB,UACpCD,EAAAA,EAAAA,KAACO,EAAS,CAAAN,UACRD,EAAAA,EAAAA,KAAC6B,EAAAA,GAAS,CAACC,YAAY,MAAK7B,SACxB8B,IACAC,EAAAA,EAAAA,MAACxB,EAAK,CAACyB,IAAKF,EAAMG,YAAcH,EAAMI,eAAclC,SAAA,CACjDgB,EAAamB,KAAI,CAACC,EAAqBX,KACtC1B,EAAAA,EAAAA,KAACsC,EAAAA,GAAS,CAERC,YAAaF,EAASG,MACtBd,MAAOA,EAAMzB,SAEZA,CAACwC,EAAUC,KACVV,EAAAA,EAAAA,MAACvB,EAAI,CACHC,WAAYgC,EAAShC,WACrBuB,IAAKQ,EAASP,YACVO,EAASE,mBACTF,EAASG,eAAc3C,SAAA,EAE3B+B,EAAAA,EAAAA,MAACrB,EAAQ,CAAAV,SAAA,EACP+B,EAAAA,EAAAA,MAACpB,EAAM,CAAAX,SAAA,EACLD,EAAAA,EAAAA,KAACc,EAAG,CACF+B,IAAKR,EAAStB,IACd+B,IAAI,cACJC,QAAQ,OACRC,SAAS,WAEXhD,EAAAA,EAAAA,KAACiD,EAAQ,CAAC5D,SAAUgD,EAASa,UAE/BlD,EAAAA,EAAAA,KAACa,EAAK,CAAAZ,UACJD,EAAAA,EAAAA,KAAA,QAAAC,SAAOoC,EAASG,cAGpBxC,EAAAA,EAAAA,KAACW,EAAQ,CAAAV,UACPD,EAAAA,EAAAA,KAAA,QAAAC,SAAOoC,EAASc,YAElBnD,EAAAA,EAAAA,KAACW,EAAQ,CAAAV,UACPD,EAAAA,EAAAA,KAAA,QAAAC,SAAOoC,EAASe,cA7BjBf,EAASG,SAmCjBT,EAAMsB,oBAOrB,CAEA,QAAeC,EAAAA,KAAWtC,G,aCzE1B,MAAMF,EAAMhC,EAAAA,GAAOiC,GAAG;;EAItB,SAASwC,IACP,MAAMC,GAAmB7D,EAAAA,EAAAA,IACvBP,IAAA,IAAC,sBACCqE,GAGDrE,EAAA,OAAKqE,EAAsBD,gBAAgB,IAExChE,GAAWC,EAAAA,EAAAA,MAYjB,OACEO,EAAAA,EAAAA,KAACmB,EAAAA,GAAe,CAACC,UAZDC,IAA0C,IAAzC,YAAEC,EAAW,OAAEC,GAAoBF,EACpD,GAAKC,GACDA,EAAa,CACf,MAAME,EAAW,IAAIgC,GACf/B,EAAUD,EAASD,EAAOG,OAChCF,EAASG,OAAOJ,EAAOG,MAAO,GAC9BF,EAASG,OAAkB,OAAXL,QAAW,IAAXA,OAAW,EAAXA,EAAaI,MAAO,EAAGD,GACvCjC,GAASkE,EAAAA,EAAAA,GAAkBlC,GAC7B,GAIsCvB,UACpCD,EAAAA,EAAAA,KAACO,EAAS,CAAAN,UACRD,EAAAA,EAAAA,KAAC6B,EAAAA,GAAS,CAACC,YAAY,MAAK7B,SACxB8B,IACAC,EAAAA,EAAAA,MAACxB,EAAK,CAACyB,IAAKF,EAAMG,YAAcH,EAAMI,eAAclC,SAAA,CACjDuD,EAAiBpB,KAAI,CAACuB,EAAgBjC,KACrC1B,EAAAA,EAAAA,KAACsC,EAAAA,GAAS,CAERC,YAAaoB,EAAInB,MACjBd,MAAOA,EAAMzB,SAEZA,CAACwC,EAAUC,KACVV,EAAAA,EAAAA,MAACvB,EAAI,CACHC,WAAYgC,EAAShC,WACrBuB,IAAKQ,EAASP,YACVO,EAASE,mBACTF,EAASG,eAAc3C,SAAA,EAE3B+B,EAAAA,EAAAA,MAACrB,EAAQ,CAAAV,SAAA,EACP+B,EAAAA,EAAAA,MAACpB,EAAM,CAAAX,SAAA,EACLD,EAAAA,EAAAA,KAACc,EAAG,CACF+B,IAAKc,EAAI5C,IACT+B,IAAI,cACJC,QAAQ,OACRC,SAAS,WAEXhD,EAAAA,EAAAA,KAACiD,EAAQ,CAAC5D,SAAUsE,EAAIT,UAE1BlD,EAAAA,EAAAA,KAACa,EAAK,CAAAZ,UACJD,EAAAA,EAAAA,KAAA,QAAAC,SAAO0D,EAAInB,cAGfxC,EAAAA,EAAAA,KAACW,EAAQ,CAAAV,UACPD,EAAAA,EAAAA,KAAA,QAAAC,SAAO0D,EAAIR,YAEbnD,EAAAA,EAAAA,KAACW,EAAQ,CAAAV,UACPD,EAAAA,EAAAA,KAAA,QAAAC,SAAO0D,EAAIP,cA7BZO,EAAInB,SAmCZT,EAAMsB,oBAOrB,CAEA,QAAeC,EAAAA,KAAWC,G,kHCtFpBhD,EAAYzB,EAAAA,GAAO8E,OAAO;;;;;;;;;EAU1BC,EAAQ/E,EAAAA,GAAOC,GAAG;;EAGlB+E,GAAgBhF,EAAAA,EAAAA,IAAOiF,EAAAA,GAAQ;;;EAK/BC,EAAiBlF,EAAAA,GAAOC,GAAG;;;;;;;;EAS3BkF,EAAcnF,EAAAA,GAAOC,GAAG;;EAGxBmF,EAAWpF,EAAAA,GAAOiC,GAAG;;;EAIrBoD,EAAarF,EAAAA,GAAOC,GAAwB;;;;aAIpCC,GAAWA,EAAMoF,OAAS,EAAI;;;;;EAMtCC,EAAQvF,EAAAA,GAAOwF,KAAK;;EAGpBC,EAAezF,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8BzByF,GAAkB1F,EAAAA,EAAAA,IAAOyF,EAAa;;;;;;;;;EA6E5C,QAlEA,WACE,MAAQtC,IAAKwC,EAAaL,OAAQM,IAAiBC,EAAAA,EAAAA,OAC3C1C,IAAK2C,EAAQR,OAAQS,IAAYF,EAAAA,EAAAA,MACzC,OACE3E,EAAAA,EAAAA,KAACO,EAAS,CAACuE,GAAG,QAAO7E,UACnB+B,EAAAA,EAAAA,MAAC6B,EAAK,CAAA5D,SAAA,EACJ+B,EAAAA,EAAAA,MAAC8B,EAAa,CAAA7D,SAAA,EACZD,EAAAA,EAAAA,KAAC+E,EAAAA,GAAa,CAAA9E,SAAC,gBACf+B,EAAAA,EAAAA,MAACgD,EAAAA,GAAa,CAAA/E,SAAA,EACZD,EAAAA,EAAAA,KAAA,SAAM,4HAENA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,mGAENA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,kIAENA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,4FAIVgC,EAAAA,EAAAA,MAACgC,EAAc,CAAA/D,SAAA,EACb+B,EAAAA,EAAAA,MAACiC,EAAW,CAAChC,IAAKwC,EAAYxE,SAAA,EAC5BD,EAAAA,EAAAA,KAACkE,EAAQ,CACPrB,IAAI,+FACJC,IAAI,gBACJC,QAAQ,OACRC,SAAS,WAEXhD,EAAAA,EAAAA,KAACmE,EAAU,CAACC,OAAQM,EAAazE,UAC/BD,EAAAA,EAAAA,KAACqE,EAAK,CAACY,UAAU,EAAOC,UAAU,EAAMC,MAAM,EAAMC,OAAO,EAAKnF,UAC9DD,EAAAA,EAAAA,KAAA,UAAQ6C,IAAKwC,EAAYC,KAAK,mBAGlCtF,EAAAA,EAAAA,KAACuE,EAAY,CAAAtE,UACXD,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qBAIVD,EAAAA,EAAAA,KAACgB,EAAQ,KACTgB,EAAAA,EAAAA,MAACiC,EAAW,CAAChC,IAAK2C,EAAO3E,SAAA,EACvBD,EAAAA,EAAAA,KAACkE,EAAQ,CACPrB,IAAI,+FACJC,IAAI,WACJC,QAAQ,OACRC,SAAS,WAEXhD,EAAAA,EAAAA,KAACmE,EAAU,CAACC,OAAQS,EAAQ5E,UAC1BD,EAAAA,EAAAA,KAACqE,EAAK,CAACY,UAAU,EAAOC,UAAU,EAAMC,MAAM,EAAMC,OAAO,EAAKnF,UAC9DD,EAAAA,EAAAA,KAAA,UAAQ6C,IAAK0C,EAAYD,KAAK,mBAGlCtF,EAAAA,EAAAA,KAACwE,EAAe,CAAAvE,UACdD,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,yBAIVD,EAAAA,EAAAA,KAACwF,EAAY,WAKvB,C","sources":["components/Music/MusicSet.tsx","components/Music/common/boardsCommon.ts","components/Music/NewJeans.tsx","components/Music/FavoriteSong.tsx","container/Music.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IVideoInfo } from \"../../interface/imusic\";\nimport { videoInfoRedux } from \"../../redux/playingVideoInfoSlice\";\nimport { controllerVisibleRedux } from \"../../redux/controllerVisibleSlice\";\nimport { useMySelector } from \"../../libs/useMySelector\";\n\nexport const ButtonDiv = styled.div<{ isPlaying: boolean }>`\n  position: absolute;\n  opacity: ${(props) => (props.isPlaying === true ? 0.9 : 0)};\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #000000;\n  transition: opacity 0.2s ease-in-out;\n  will-change: opacity;\n`;\nexport const ControllBtn = styled.button<{ isPlaying: boolean }>`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  opacity: ${(props) => (props.isPlaying === true ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n  will-change: opacity;\n  background: none;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  span {\n    color: #fff;\n    font-size: clamp(30px, 2vw, 60px);\n  }\n`;\n\nfunction MusicSet({ videoUrl }: { videoUrl: string }) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const dispatch = useDispatch();\n  const videoInfo = useMySelector(\n    (state: { playingVideoInfoSlice: IVideoInfo }) =>\n      state.playingVideoInfoSlice.videoInfo\n  );\n  const toggle = () => {\n    const playing = !isPlaying;\n    setIsPlaying(playing);\n    dispatch(\n      videoInfoRedux({\n        ...videoInfo,\n        playing: playing,\n        videoUrl: videoUrl,\n      })\n    );\n    dispatch(controllerVisibleRedux(true));\n  };\n  useEffect(() => {\n    if (videoInfo.videoUrl === videoUrl) {\n      setIsPlaying(videoInfo.playing);\n    }\n    if (videoInfo.videoUrl !== videoUrl) {\n      setIsPlaying(false);\n    }\n  }, [videoInfo, videoUrl]);\n\n  return (\n    <ButtonDiv isPlaying={isPlaying}>\n      <ControllBtn onClick={() => toggle()} isPlaying={isPlaying}>\n        {isPlaying ? (\n          <span className=\"material-symbols-rounded\">pause</span>\n        ) : (\n          <span className=\"material-symbols-rounded\">play_arrow</span>\n        )}\n      </ControllBtn>\n    </ButtonDiv>\n  );\n}\n\nexport default MusicSet;\n","import styled from \"styled-components\";\nimport { ButtonDiv, ControllBtn } from \"../MusicSet\";\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 8vw 0 15vw 0;\n  background-color: #000;\n  color: #fff;\n  z-index: 3;\n`;\nexport const Board = styled.div`\n  padding: 0px 40px;\n  background-color: transparent;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  @media (max-width: 480px) {\n    & {\n      padding: 0px 20px;\n    }\n  }\n`;\n\nexport const Card = styled.div<{ isDragging: boolean }>`\n  padding: 10px 2vw;\n  background-color: ${(props) =>\n    props.isDragging ? \"#1d1d1d\" : \"transparent\"};\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  align-items: center;\n  font-size: 1vw;\n  border-bottom: 1px solid #1d1d1d;\n  border-radius: ${(props) => (props.isDragging ? \"10px\" : \"none\")};\n  transition: background-color 0.2s ease-in-out, border-radius 0.2s ease-in-out;\n  will-change: background-color, border-radius;\n  :last-child {\n    border-bottom: none;\n  }\n  :hover {\n    background-color: #1d1d1d;\n    ${ButtonDiv} {\n      opacity: 0.9;\n    }\n    ${ControllBtn} {\n      opacity: 1;\n    }\n  }\n  @media (max-width: 650px) {\n    & {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n  @media (max-width: 429px) {\n    & {\n      font-size: 0.6rem;\n    }\n  }\n`;\n\nexport const CardItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 7%;\n  :nth-child(2) {\n    padding-left: 20%;\n  }\n  :nth-child(3) {\n    padding-left: 20%;\n  }\n  @media (max-width: 768px) {\n    & {\n    }\n  }\n  @media (max-width: 650px) {\n    & {\n      :last-child {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const ImgDiv = styled.div`\n  position: relative;\n`;\n\nexport const Title = styled.div``;\n","import {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport MusicSet from \"./MusicSet\";\nimport { useDispatch } from \"react-redux\";\nimport { INewjeansListData, IPlayList } from \"../../interface/imusic\";\nimport { newJeansRedux } from \"../../redux/newJeansListSlice\";\nimport {\n  Board,\n  Card,\n  CardItem,\n  Container,\n  ImgDiv,\n  Title,\n} from \"./common/boardsCommon\";\nimport { useMySelector } from \"../../libs/useMySelector\";\n\nconst Img = styled.img`\n  width: clamp(40px, 4vw, 128px);\n`;\n\nfunction NewJeans() {\n  const newjeansList = useMySelector(\n    ({ newJeansListSlice }: { newJeansListSlice: INewjeansListData }) =>\n      newJeansListSlice.newjeansList\n  );\n  const dispatch = useDispatch();\n  const onDragEnd = ({ destination, source }: DropResult) => {\n    if (!destination) return;\n    if (destination) {\n      const copyList = [...newjeansList];\n      const taskObj = copyList[source.index];\n      copyList.splice(source.index, 1);\n      copyList.splice(destination?.index, 0, taskObj);\n      dispatch(newJeansRedux(copyList));\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Container>\n        <Droppable droppableId=\"one\">\n          {(magic) => (\n            <Board ref={magic.innerRef} {...magic.droppableProps}>\n              {newjeansList.map((newjeans: IPlayList, index: number) => (\n                <Draggable\n                  key={newjeans.title}\n                  draggableId={newjeans.title}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <Card\n                      isDragging={snapshot.isDragging}\n                      ref={provided.innerRef}\n                      {...provided.dragHandleProps}\n                      {...provided.draggableProps}\n                    >\n                      <CardItem>\n                        <ImgDiv>\n                          <Img\n                            src={newjeans.img}\n                            alt=\"album_photo\"\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                          />\n                          <MusicSet videoUrl={newjeans.url} />\n                        </ImgDiv>\n                        <Title>\n                          <span>{newjeans.title}</span>\n                        </Title>\n                      </CardItem>\n                      <CardItem>\n                        <span>{newjeans.artist}</span>\n                      </CardItem>\n                      <CardItem>\n                        <span>{newjeans.album}</span>\n                      </CardItem>\n                    </Card>\n                  )}\n                </Draggable>\n              ))}\n              {magic.placeholder}\n            </Board>\n          )}\n        </Droppable>\n      </Container>\n    </DragDropContext>\n  );\n}\n\nexport default React.memo(NewJeans);\n","import {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ILoLChampionsListData, IPlayList } from \"../../interface/imusic\";\nimport {\n  Board,\n  Card,\n  CardItem,\n  Container,\n  ImgDiv,\n  Title,\n} from \"./common/boardsCommon\";\nimport { useMySelector } from \"../../libs/useMySelector\";\nimport { lolChampionsRedux } from \"../../redux/favoriteListSlice\";\nimport MusicSet from \"./MusicSet\";\n\nconst Img = styled.img`\n  width: clamp(40px, 4vw, 128px);\n`;\n\nfunction LoLChampions() {\n  const lolChampionsList = useMySelector(\n    ({\n      lolChampionsListSlice,\n    }: {\n      lolChampionsListSlice: ILoLChampionsListData;\n    }) => lolChampionsListSlice.lolChampionsList\n  );\n  const dispatch = useDispatch();\n  const onDragEnd = ({ destination, source }: DropResult) => {\n    if (!destination) return;\n    if (destination) {\n      const copyList = [...lolChampionsList];\n      const taskObj = copyList[source.index];\n      copyList.splice(source.index, 1);\n      copyList.splice(destination?.index, 0, taskObj);\n      dispatch(lolChampionsRedux(copyList));\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Container>\n        <Droppable droppableId=\"one\">\n          {(magic) => (\n            <Board ref={magic.innerRef} {...magic.droppableProps}>\n              {lolChampionsList.map((lol: IPlayList, index: number) => (\n                <Draggable\n                  key={lol.title}\n                  draggableId={lol.title}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <Card\n                      isDragging={snapshot.isDragging}\n                      ref={provided.innerRef}\n                      {...provided.dragHandleProps}\n                      {...provided.draggableProps}\n                    >\n                      <CardItem>\n                        <ImgDiv>\n                          <Img\n                            src={lol.img}\n                            alt=\"album_photo\"\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                          />\n                          <MusicSet videoUrl={lol.url} />\n                        </ImgDiv>\n                        <Title>\n                          <span>{lol.title}</span>\n                        </Title>\n                      </CardItem>\n                      <CardItem>\n                        <span>{lol.artist}</span>\n                      </CardItem>\n                      <CardItem>\n                        <span>{lol.album}</span>\n                      </CardItem>\n                    </Card>\n                  )}\n                </Draggable>\n              ))}\n              {magic.placeholder}\n            </Board>\n          )}\n        </Droppable>\n      </Container>\n    </DragDropContext>\n  );\n}\n\nexport default React.memo(LoLChampions);\n","import styled from \"styled-components\";\nimport { useInView } from \"react-intersection-observer\";\nimport {\n  TextBox,\n  TextBoxMiddle,\n  TextBoxbottom,\n} from \"../pages/main/common/mainCommon\";\nimport NewJeans from \"../components/Music/NewJeans\";\nimport FavoriteSong from \"../components/Music/FavoriteSong\";\nimport newjeansmv from \"../assets/video/newjeansmv.mp4\";\nimport musicvideo from \"../assets/video/musicvideo.mp4\";\n\nconst Container = styled.section`\n  width: 100%;\n  padding-top: 3vw;\n  background-color: #fff;\n  border-radius: 5vw 5vw 0 0;\n  margin-top: -6rem;\n  position: relative;\n  z-index: 1;\n  box-shadow: 0 0 3rem rgba(0, 0, 0, 0.5);\n`;\nconst Inner = styled.div`\n  width: 100%;\n`;\nconst StickyTextBox = styled(TextBox)`\n  position: sticky;\n  top: 0;\n`;\n\nconst MusicContainer = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  border-radius: 5vw 5vw 0 0;\n  overflow: hidden;\n  box-shadow: 0 0 3rem rgba(0, 0, 0, 0.5);\n`;\nconst RelativeBox = styled.div`\n  position: relative;\n`;\nconst MusicImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\nconst MusicVideo = styled.div<{ inView: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: ${(props) => (props.inView ? 1 : 0)};\n  transition: opacity 0.3s 1s ease-in-out;\n  position: absolute;\n  left: 0;\n  top: -0.2rem;\n`;\nconst Video = styled.video`\n  width: 100vw;\n`;\nconst MusicTextBox = styled.div`\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1));\n  position: absolute;\n  left: 0;\n  top: 0;\n  color: #fff;\n  div {\n    position: absolute;\n    left: 5%;\n    bottom: 0;\n  }\n  h2 {\n    font-weight: bold;\n    font-size: 2.5vw;\n    margin-bottom: 1vw;\n  }\n  p {\n    font-size: 1.2vw;\n  }\n  @media (max-width: 650px) {\n    & {\n      p {\n        font-size: 2vw;\n      }\n    }\n  }\n`;\n\nconst AllMusicTextBox = styled(MusicTextBox)`\n  background: linear-gradient(\n    rgba(0, 0, 0, 1) 0%,\n    rgba(0, 0, 0, 0.5) 50%,\n    rgba(0, 0, 0, 1) 100%\n  );\n  div {\n    bottom: 10%;\n  }\n`;\n\nfunction Music() {\n  const { ref: newjeansRef, inView: newjeansView } = useInView();\n  const { ref: favRef, inView: favView } = useInView();\n  return (\n    <Container id=\"music\">\n      <Inner>\n        <StickyTextBox>\n          <TextBoxMiddle>Music List</TextBoxMiddle>\n          <TextBoxbottom>\n            <br />\n            사이트를 보시면서 음악을 감상할 수 있습니다.\n            <br />\n            <br />\n            제 취향 팝송과 뉴진스 노래들입니다.\n            <br />\n            <br />\n            뮤직 리스트는 위에서 부터 차례대로 재생됩니다.\n            <br />\n            <br />\n            재생 순서를 바꾸실수 있습니다.\n          </TextBoxbottom>\n        </StickyTextBox>\n        <MusicContainer>\n          <RelativeBox ref={newjeansRef}>\n            <MusicImg\n              src=\"https://imagedelivery.net/4aEUbX05h6IovGOQjgkfSw/9729d7ac-0232-4eef-60ef-c3cb6db80b00/public\"\n              alt=\"famous artist\"\n              loading=\"lazy\"\n              decoding=\"async\"\n            />\n            <MusicVideo inView={newjeansView}>\n              <Video controls={false} autoPlay={true} loop={true} muted={true}>\n                <source src={newjeansmv} type=\"video/mp4\"></source>\n              </Video>\n            </MusicVideo>\n            <MusicTextBox>\n              <div>\n                <h2>NewJeans</h2>\n              </div>\n            </MusicTextBox>\n          </RelativeBox>\n          <NewJeans />\n          <RelativeBox ref={favRef}>\n            <MusicImg\n              src=\"https://imagedelivery.net/4aEUbX05h6IovGOQjgkfSw/e30f57f2-4254-460d-dfb3-7750dbb31000/public\"\n              alt=\"newjeans\"\n              loading=\"lazy\"\n              decoding=\"async\"\n            />\n            <MusicVideo inView={favView}>\n              <Video controls={false} autoPlay={true} loop={true} muted={true}>\n                <source src={musicvideo} type=\"video/mp4\"></source>\n              </Video>\n            </MusicVideo>\n            <AllMusicTextBox>\n              <div>\n                <h2>FavoriteSong</h2>\n              </div>\n            </AllMusicTextBox>\n          </RelativeBox>\n          <FavoriteSong />\n        </MusicContainer>\n      </Inner>\n    </Container>\n  );\n}\nexport default Music;\n"],"names":["ButtonDiv","styled","div","props","isPlaying","ControllBtn","button","_ref","videoUrl","setIsPlaying","useState","dispatch","useDispatch","videoInfo","useMySelector","state","playingVideoInfoSlice","useEffect","playing","_jsx","children","onClick","toggle","videoInfoRedux","controllerVisibleRedux","className","Container","Board","Card","isDragging","CardItem","ImgDiv","Title","Img","img","NewJeans","newjeansList","newJeansListSlice","DragDropContext","onDragEnd","_ref2","destination","source","copyList","taskObj","index","splice","newJeansRedux","Droppable","droppableId","magic","_jsxs","ref","innerRef","droppableProps","map","newjeans","Draggable","draggableId","title","provided","snapshot","dragHandleProps","draggableProps","src","alt","loading","decoding","MusicSet","url","artist","album","placeholder","React","LoLChampions","lolChampionsList","lolChampionsListSlice","lolChampionsRedux","lol","section","Inner","StickyTextBox","TextBox","MusicContainer","RelativeBox","MusicImg","MusicVideo","inView","Video","video","MusicTextBox","AllMusicTextBox","newjeansRef","newjeansView","useInView","favRef","favView","id","TextBoxMiddle","TextBoxbottom","controls","autoPlay","loop","muted","newjeansmv","type","musicvideo","FavoriteSong"],"sourceRoot":""}