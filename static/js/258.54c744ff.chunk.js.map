{"version":3,"file":"static/js/258.54c744ff.chunk.js","mappings":"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","sources":["services/coinApi.ts","libs/useCoinNames.ts","components/CoinList/ColGroup.tsx","components/CoinList/TheadTr.tsx","components/CoinList/SkeletonUI.tsx","components/CoinList/TradePrice.tsx","components/CoinList/ChangePrice.tsx","components/CoinList/CirculatingSupply.tsx","components/CoinList/AccTradePrice24h.tsx","components/CoinList/AccTradeVolume24h.tsx","components/CoinList/Chart.tsx","components/CoinList/Chart200Days.tsx","libs/useCoinListData.ts","libs/useCoinTickers.ts","libs/useCoinHistory.ts","components/CoinList/TbodyTr.tsx","container/CoinList.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { ICoinSocketTickers } from \"../interface/icoin\";\nimport { json } from \"stream/consumers\";\n\nexport async function fetchCoins() {\n  const response = await fetch(\n    `https://api.upbit.com/v1/market/all?isDetails=false`\n  );\n  return await response.json();\n}\nexport async function fetchCoinTickers(coinList: string[]) {\n  let results = [];\n  for (let index = 0; index < coinList.length; index++) {\n    const response = await fetch(\n      `https://api.upbit.com/v1/ticker?markets=${coinList[index]}`\n    );\n    const [json] = await response.json();\n    results.push(json);\n  }\n  return results;\n}\nexport async function fetchCoinHistory(coinList: string[]) {\n  let results = [];\n  for (let index = 0; index < coinList.length; index++) {\n    const response = await fetch(\n      `https://api.upbit.com/v1/candles/days?market=${coinList[index]}&count=200&convertingPriceUnit=KRW`\n    );\n    const json = await response.json();\n    results.push(json);\n  }\n\n  return results;\n}\n\nexport const useCoinTickersSocket = (socketNameList: string[]) => {\n  const [socket, setSocket] = useState<WebSocket | null>(null);\n  const [coinTickers, setCoinTickers] = useState<ICoinSocketTickers[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const connectWS = useCallback(() => {\n    if (\n      socket &&\n      (socket.readyState === WebSocket.OPEN ||\n        socket.readyState === WebSocket.CONNECTING)\n    ) {\n      return;\n    }\n    const upbitSocket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n    setSocket(upbitSocket);\n\n    upbitSocket.addEventListener(\"error\", (error: any) => {\n      console.error(\"WebSocket error:\", error.name);\n      setError(\"WebSocket error: \" + error.name);\n      upbitSocket.close();\n    });\n\n    upbitSocket.addEventListener(\"close\", () => {\n      setSocket(null);\n      connectWS();\n    });\n\n    upbitSocket.addEventListener(\"message\", (message) => {\n      message.data.text().then((text: string) => {\n        try {\n          const jsonData = JSON.parse(text);\n          setCoinTickers(() => [jsonData]);\n        } catch (e) {\n          console.error(\"Error parsing message data:\", e);\n        }\n      });\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    connectWS();\n\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [connectWS]);\n\n  useEffect(() => {\n    if (!socket || !socketNameList) return;\n\n    const handleOpen = () => {\n      const subscribeMsg = [\n        { ticket: \"UNIQUE_TICKET\" },\n        { type: \"ticker\", codes: socketNameList },\n      ];\n      socket.send(JSON.stringify(subscribeMsg));\n    };\n\n    socket.addEventListener(\"open\", handleOpen);\n\n    return () => {\n      socket.removeEventListener(\"open\", handleOpen);\n    };\n  }, [socketNameList, socket]);\n  return { coinTickers, error };\n};\n\n//무료 Supply api, market cap api 못찾겠다...\nexport const circulatingSupply = [\n  { id: \"KRW-ZETA\", supply: 683010417 },\n  { id: \"KRW-IMX\", supply: 1743800322 },\n  { id: \"KRW-EGLD\", supply: 27865314 },\n  { id: \"KRW-MINA\", supply: 1214515858 },\n  {\n    id: \"KRW-BLUR\",\n    supply: 2203803082,\n  },\n  {\n    id: \"KRW-ADA\",\n    supply: 35201193526,\n  },\n  { id: \"KRW-STRIKE\", supply: 5265785 },\n  {\n    id: \"KRW-LSK\",\n    supply: 166894159,\n  },\n  {\n    id: \"KRW-SUI\",\n    supply: 3089707195,\n  },\n  {\n    id: \"KRW-BTC\",\n    supply: 19823850,\n  },\n  {\n    id: \"KRW-ETH\",\n    supply: 120545398,\n  },\n  {\n    id: \"KRW-NEO\",\n    supply: 70538831,\n  },\n  {\n    id: \"KRW-MTL\",\n    supply: 83171865,\n  },\n  {\n    id: \"KRW-XRP\",\n    supply: 57762545657,\n  },\n  {\n    id: \"KRW-ETC\",\n    supply: 150740793,\n  },\n  {\n    id: \"KRW-OMG\",\n    supply: 140245398,\n  },\n  {\n    id: \"KRW-SNT\",\n    supply: 3996911204,\n  },\n  {\n    id: \"KRW-WAVES\",\n    supply: 116974126,\n  },\n  {\n    id: \"KRW-XEM\",\n    supply: 8999999999,\n  },\n  {\n    id: \"KRW-QTUM\",\n    supply: 105521616,\n  },\n  {\n    id: \"KRW-STEEM\",\n    supply: 483263173,\n  },\n  {\n    id: \"KRW-XLM\",\n    supply: 30603014104,\n  },\n  {\n    id: \"KRW-ARDR\",\n    supply: 998466231,\n  },\n  {\n    id: \"KRW-ARK\",\n    supply: 186706754,\n  },\n  {\n    id: \"KRW-STORJ\",\n    supply: 401361292,\n  },\n  {\n    id: \"KRW-GRS\",\n    supply: 86940619,\n  },\n  {\n    id: \"KRW-GRT\",\n    supply: 9548531509,\n  },\n  {\n    id: \"KRW-POWR\",\n    supply: 560162329,\n  },\n  {\n    id: \"KRW-BTG\",\n    supply: 17513924,\n  },\n  {\n    id: \"KRW-ICX\",\n    supply: 1048487515,\n  },\n  {\n    id: \"KRW-EOS\",\n    supply: 1546399988,\n  },\n  {\n    id: \"KRW-TRX\",\n    supply: 86098744015,\n  },\n  {\n    id: \"KRW-SC\",\n    supply: 56025636522,\n  },\n  {\n    id: \"KRW-ONT\",\n    supply: 912697857,\n  },\n  {\n    id: \"KRW-ZIL\",\n    supply: 19527125342,\n  },\n  {\n    id: \"KRW-POLYX\",\n    supply: 925434676,\n  },\n  {\n    id: \"KRW-POL\",\n    supply: 8562688053,\n  },\n  {\n    id: \"KRW-ZRX\",\n    supply: 848396563,\n  },\n  {\n    id: \"KRW-LOOM\",\n    supply: 1242920898,\n  },\n  {\n    id: \"KRW-BCH\",\n    supply: 19829019,\n  },\n  {\n    id: \"KRW-BAT\",\n    supply: 1495668357,\n  },\n  {\n    id: \"KRW-IOST\",\n    supply: 21315000000,\n  },\n  {\n    id: \"KRW-CVC\",\n    supply: 1000000000,\n  },\n  {\n    id: \"KRW-IQ\",\n    supply: 20520426316,\n  },\n  {\n    id: \"KRW-IOTA\",\n    supply: 3631397410,\n  },\n  {\n    id: \"KRW-HIFI\",\n    supply: 141753577,\n  },\n  { id: \"KRW-ID\", supply: 879627042 },\n  {\n    id: \"KRW-ONG\",\n    supply: 404983864,\n  },\n  { id: \"KRW-ASTR\", supply: 7597621696 },\n  {\n    id: \"KRW-GAS\",\n    supply: 77508512,\n  },\n  {\n    id: \"KRW-UPP\",\n    supply: 497834800,\n  },\n  {\n    id: \"KRW-ELF\",\n    supply: 738908400,\n  },\n  {\n    id: \"KRW-KNC\",\n    supply: 186564360,\n  },\n  {\n    id: \"KRW-BSV\",\n    supply: 19824725,\n  },\n  {\n    id: \"KRW-THETA\",\n    supply: 1000000000,\n  },\n  {\n    id: \"KRW-QKC\",\n    supply: 7091115594,\n  },\n  {\n    id: \"KRW-BTT\",\n    supply: 986061142857000,\n  },\n  {\n    id: \"KRW-MOC\",\n    supply: 423489688,\n  },\n  {\n    id: \"KRW-TFUEL\",\n    supply: 6843074105,\n  },\n  {\n    id: \"KRW-MANA\",\n    supply: 1942255184,\n  },\n  {\n    id: \"KRW-ANKR\",\n    supply: 10000000000,\n  },\n  {\n    id: \"KRW-AERGO\",\n    supply: 47249996,\n  },\n  {\n    id: \"KRW-ATOM\",\n    supply: 390934204,\n  },\n  { id: \"KRW-AKT\", supply: 248285795 },\n  {\n    id: \"KRW-TT\",\n    supply: 11807804373,\n  },\n  {\n    id: \"KRW-GAME2\",\n    supply: 16831694490,\n  },\n  {\n    id: \"KRW-MBL\",\n    supply: 18269887214,\n  },\n  {\n    id: \"KRW-WAXP\",\n    supply: 3648160776,\n  },\n  {\n    id: \"KRW-HBAR\",\n    supply: 38269622458,\n  },\n  { id: \"KRW-PYTH\", supply: 3624988002 },\n  {\n    id: \"KRW-MED\",\n    supply: 9543626701,\n  },\n  {\n    id: \"KRW-MLK\",\n    supply: 429666797,\n  },\n  {\n    id: \"KRW-SBD\",\n    supply: 13194660,\n  },\n  {\n    id: \"KRW-STPT\",\n    supply: 1942420283,\n  },\n  {\n    id: \"KRW-ORBS\",\n    supply: 4535312901,\n  },\n  {\n    id: \"KRW-VET\",\n    supply: 80985041177,\n  },\n  {\n    id: \"KRW-CHZ\",\n    supply: 9404573039,\n  },\n  {\n    id: \"KRW-STMX\",\n    supply: 12345659609,\n  },\n  {\n    id: \"KRW-DKA\",\n    supply: 4686666667,\n  },\n  {\n    id: \"KRW-HIVE\",\n    supply: 500749243,\n  },\n  {\n    id: \"KRW-KAVA\",\n    supply: 1082860622,\n  },\n  {\n    id: \"KRW-AHT\",\n    supply: 6023268293,\n  },\n  {\n    id: \"KRW-LINK\",\n    supply: 638099970,\n  },\n  {\n    id: \"KRW-SEI\",\n    supply: 4432638888,\n  },\n  {\n    id: \"KRW-XTZ\",\n    supply: 1030014723,\n  },\n  {\n    id: \"KRW-BORA\",\n    supply: 1099750000,\n  },\n  {\n    id: \"KRW-JST\",\n    supply: 9900000000,\n  },\n  {\n    id: \"KRW-CRO\",\n    supply: 26571560696,\n  },\n  {\n    id: \"KRW-TON\",\n    supply: 43841454,\n  },\n  {\n    id: \"KRW-SXP\",\n    supply: 633436958,\n  },\n  {\n    id: \"KRW-HUNT\",\n    supply: 198912688,\n  },\n  {\n    id: \"KRW-PLA\",\n    supply: 569265030,\n  },\n  {\n    id: \"KRW-DOT\",\n    supply: 1548476818,\n  },\n  {\n    id: \"KRW-SRM\",\n    supply: 263244669,\n  },\n  {\n    id: \"KRW-MVL\",\n    supply: 26152958863,\n  },\n  {\n    id: \"KRW-STRAX\",\n    supply: 2007995699,\n  },\n  {\n    id: \"KRW-AQT\",\n    supply: 26806201,\n  },\n  {\n    id: \"KRW-GLM\",\n    supply: 1000000000,\n  },\n  {\n    id: \"KRW-SSX\",\n    supply: 2861938931,\n  },\n  {\n    id: \"KRW-META\",\n    supply: 1705508722,\n  },\n  {\n    id: \"KRW-FCT2\",\n    supply: 958304370,\n  },\n  { id: \"KRW-CTC\", supply: 422084779 },\n  {\n    id: \"KRW-CBK\",\n    supply: 91066297,\n  },\n  {\n    id: \"KRW-SAND\",\n    supply: 2464357126,\n  },\n  {\n    id: \"KRW-HPO\",\n    supply: 1034734273,\n  },\n  {\n    id: \"KRW-HUM\",\n    supply: 913409274,\n  },\n  {\n    id: \"KRW-DOGE\",\n    supply: 148033876384,\n  },\n  {\n    id: \"KRW-STRK\",\n    supply: 3964522,\n  },\n  {\n    id: \"KRW-PUNDIX\",\n    supply: 258394551,\n  },\n  {\n    id: \"KRW-FLOW\",\n    supply: 1563712953,\n  },\n  {\n    id: \"KRW-AXS\",\n    supply: 158603698,\n  },\n  {\n    id: \"KRW-STX\",\n    supply: 1512986823,\n  },\n  {\n    id: \"KRW-XEC\",\n    supply: 19824739047583,\n  },\n  {\n    id: \"KRW-SOL\",\n    supply: 488170363,\n  },\n  {\n    id: \"KRW-MATIC\",\n    supply: 9899052814,\n  },\n  {\n    id: \"KRW-NU\",\n    supply: 703000000,\n  },\n  {\n    id: \"KRW-AAVE\",\n    supply: 15071805,\n  },\n  {\n    id: \"KRW-1INCH\",\n    supply: 1399453973,\n  },\n  {\n    id: \"KRW-ALGO\",\n    supply: 8434070346,\n  },\n  {\n    id: \"KRW-NEAR\",\n    supply: 1184141216,\n  },\n  {\n    id: \"KRW-AVAX\",\n    supply: 411949005,\n  },\n  {\n    id: \"KRW-T\",\n    supply: 10108927223,\n  },\n  {\n    id: \"KRW-CELO\",\n    supply: 562409366,\n  },\n  {\n    id: \"KRW-GMT\",\n    supply: 3157493622,\n  },\n  {\n    id: \"KRW-APT\",\n    supply: 586643426,\n  },\n  {\n    id: \"KRW-SHIB\",\n    supply: 589253884408118,\n  },\n  {\n    id: \"KRW-MASK\",\n    supply: 100000000,\n  },\n  {\n    id: \"KRW-ARB\",\n    supply: 4343862574,\n  },\n  { id: \"KRW-MNT\", supply: 3364694383 },\n  { id: \"KRW-ZRO\", supply: 110000000 },\n  { id: \"KRW-TAIKO\", supply: 115016756 },\n  { id: \"KRW-BLAST\", supply: 25443907166 },\n  { id: \"KRW-BEAM\", supply: 49466004168 },\n  { id: \"KRW-USDT\", supply: 112911493076 },\n  { id: \"KRW-ONDO\", supply: 3159107529 },\n  { id: \"KRW-AUCTION\", supply: 6590076 },\n  { id: \"KRW-JUP\", supply: 2637438889 },\n  { id: \"KRW-STG\", supply: 204338417 },\n  { id: \"KRW-GAL\", supply: 118544998 },\n  { id: \"KRW-G\", supply: 8768180000 },\n  { id: \"KRW-ENS\", supply: 35549160 },\n  { id: \"KRW-PENDLE\", supply: 164896088 },\n  { id: \"KRW-ATH\", supply: 6697646536 },\n  { id: \"KRW-USDC\", supply: 56098473904 },\n  { id: \"KRW-UXLINK\", supply: 338200000 },\n  { id: \"KRW-BIGTIME\", supply: 1666915441 },\n  { id: \"KRW-CKB\", supply: 45947644639 },\n  { id: \"KRW-W\", supply: 2862609176 },\n  { id: \"KRW-CARV\", supply: 185850382 },\n  { id: \"KRW-INJ\", supply: 98970935 },\n  { id: \"KRW-MEW\", supply: 88888888888 },\n  { id: \"KRW-UNI\", supply: 600518038 },\n  { id: \"KRW-SAFE\", supply: 527419089 },\n  { id: \"KRW-DRIFT\", supply: 286261798 },\n  { id: \"KRW-AGLD\", supply: 77280001 },\n  { id: \"KRW-PEPE\", supply: 420689899999995 },\n  { id: \"KRW-BONK\", supply: 77231169593284 },\n  { id: \"KRW-TRUMP\", supply: 199999617 },\n  { id: \"KRW-USDT\", supply: 141925329576 },\n  { id: \"KRW-LAYER\", supply: 210000000 },\n  { id: \"KRW-ME\", supply: 113873532 },\n  { id: \"KRW-BERA\", supply: 107480000 },\n  { id: \"KRW-MOVE\", supply: 2400000000 },\n  { id: \"KRW-VIRTUAL\", supply: 648018015 },\n  { id: \"KRW-VANA\", supply: 30084000 },\n  { id: \"KRW-ANIME\", supply: 5538604656 },\n  { id: \"KRW-SONIC\", supply: 360000000 },\n  { id: \"KRW-VTHO\", supply: 86193318511 },\n  { id: \"KRW-MOCA\", supply: 1783865250 },\n  { id: \"KRW-BOUNTY\", supply: 508749999 },\n  { id: \"KRW-RENDER\", supply: 517716590 },\n  { id: \"KRW-TOKAMAK\", supply: 43841454 },\n];\n","import { useQuery } from \"@tanstack/react-query\";\nimport { ICoins } from \"../interface/icoin\";\nimport { fetchCoins } from \"../services/coinApi\";\n\nconst useCoinNames = (allList: boolean) => {\n  const { data: nameData } = useQuery<ICoins[]>([\"name\"], () => fetchCoins(), {\n    select: (datas) =>\n      datas.filter((data) => {\n        if (allList) {\n          return !data.market.indexOf(\"KRW\");\n        } else {\n          return data;\n        }\n      }),\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n  });\n  console.log(nameData)\n  return { nameData };\n};\n\nexport default useCoinNames;\n","import styled from \"styled-components\";\n\nconst ColName = styled.col`\n  width: 310px;\n  min-width: auto;\n  @media (max-width: 1279px) {\n    & {\n      box-shadow: 0px 0px 2px rgba(128, 138, 157, 0.12),\n        0px 0px 24px rgba(128, 138, 157, 0.14);\n    }\n  }\n`;\nconst ColPrice = styled.col`\n  width: 181px;\n  min-width: auto;\n`;\nconst ColChange = styled.col`\n  width: 200px;\n  min-width: auto;\n`;\nconst ColVolume = styled.col`\n  width: 236px;\n  min-width: auto;\n`;\nconst ColVolumePrice = styled.col`\n  width: 236px;\n  min-width: auto;\n`;\nconst ColSupply = styled.col`\n  width: 236px;\n  min-width: auto;\n`;\nconst ColCap = styled.col`\n  width: 236px;\n  min-width: auto;\n`;\nconst ColChart = styled.col`\n  width: 183px;\n  min-width: auto;\n`;\nfunction Colgroup() {\n  return (\n    <colgroup>\n      <ColName />\n      <ColPrice />\n      <ColChange />\n      <ColVolume />\n      <ColVolumePrice />\n      <ColSupply />\n      <ColCap />\n      <ColChart />\n    </colgroup>\n  );\n}\nexport default Colgroup;\n","import styled from \"styled-components\";\nimport { Tr } from \"../../container/CoinList\";\nconst NameTh = styled.th`\n  text-align: start;\n  vertical-align: middle;\n  padding: 10px;\n  padding-left: 1vw;\n  position: sticky;\n  top: 0;\n  left: -2px;\n  z-index: 10;\n  background-color: #f8f8f8;\n  @media (max-width: 1279px) {\n    & {\n      ::before {\n        box-shadow: inset 10px 0 8px -8px rgba(0, 0, 0, 0.15);\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: -1px;\n        width: 30px;\n        transform: translateX(100%);\n        transition: box-shadow 0.3s;\n        content: \"\";\n        pointer-events: none;\n      }\n    }\n  }\n`;\nconst Th = styled.th`\n  position: sticky;\n  top: 0;\n  z-index: 3;\n  background-color: #f8f8f8;\n  text-align: end;\n  vertical-align: middle;\n  padding: 10px;\n  font-weight: 900;\n  white-space: nowrap;\n  :last-child {\n    padding-right: 1vw;\n  }\n`;\nfunction TheadTr() {\n  return (\n    <Tr>\n      <NameTh>\n        <span>Name</span>\n      </NameTh>\n      <Th>\n        <span>Price</span>\n      </Th>\n      <Th>\n        <span>Change (24h)</span>\n      </Th>\n      <Th>\n        <span>Volume (24h)</span>\n      </Th>\n      <Th>\n        <span>Volume Price (24h)</span>\n      </Th>\n      <Th>\n        <span>Circulating Supply</span>\n      </Th>\n      <Th>\n        <span>Market Cap</span>\n      </Th>\n      <Th>\n        <span>Last 200 Days</span>\n      </Th>\n    </Tr>\n  );\n}\nexport default TheadTr;\n","import styled from \"styled-components\";\nimport { Tr } from \"../../container/CoinList\";\nconst Namediv = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n`;\nconst TdFixed = styled.td`\n  padding: 3.5px;\n  text-align: end;\n  vertical-align: middle;\n  white-space: nowrap;\n  :last-child {\n    padding: 0px;\n  }\n`;\n\nconst TdNomalDivFixed = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 3px;\n  align-items: flex-end;\n`;\n\nconst Skeleton = styled.div`\n  background-color: #ececec;\n  border-radius: 5px;\n  padding: 13px 10px;\n`;\nconst SkeletonName = styled(Skeleton)`\n  width: 100%;\n`;\nconst SkeletonPrice = styled(Skeleton)`\n  width: 100%;\n`;\nconst SkeletonChangePrice = styled(Skeleton)`\n  width: 40%;\n`;\nconst SkeletonChangePer = styled(Skeleton)`\n  width: 50%;\n`;\nconst SkeletonVolume = styled(Skeleton)`\n  width: 90%;\n`;\nconst SkeletonVolumePrice = styled(Skeleton)`\n  width: 90%;\n`;\nconst SkeletonSupply = styled(Skeleton)`\n  width: 90%;\n`;\nconst SkeletonMarketCap = styled(Skeleton)`\n  width: 90%;\n`;\nconst SkeletonChart = styled(Skeleton)`\n  width: 100%;\n  height: 50px;\n`;\n\nfunction SkeletonUI() {\n  return (\n    <Tr>\n      <TdFixed>\n        <Namediv>\n          <SkeletonName />\n        </Namediv>\n      </TdFixed>\n      <TdFixed>\n        <TdNomalDivFixed>\n          <SkeletonPrice />\n        </TdNomalDivFixed>\n      </TdFixed>\n      <TdFixed>\n        <TdNomalDivFixed>\n          <SkeletonChangePrice />\n          <SkeletonChangePer />\n        </TdNomalDivFixed>\n      </TdFixed>\n      <TdFixed>\n        <TdNomalDivFixed>\n          <SkeletonVolume />\n        </TdNomalDivFixed>\n      </TdFixed>\n      <TdFixed>\n        <TdNomalDivFixed>\n          <SkeletonVolumePrice />\n        </TdNomalDivFixed>\n      </TdFixed>\n      <TdFixed>\n        <TdNomalDivFixed>\n          <SkeletonSupply />\n        </TdNomalDivFixed>\n      </TdFixed>\n      <TdFixed>\n        <TdNomalDivFixed>\n          <SkeletonMarketCap />\n        </TdNomalDivFixed>\n      </TdFixed>\n      <TdFixed>\n        <SkeletonChart />\n      </TdFixed>\n    </Tr>\n  );\n}\nexport default SkeletonUI;\n","import { useEffect, useState } from \"react\";\nimport { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\nimport styled, { keyframes, css } from \"styled-components\";\n\nconst TradePrice = ({\n  coinName,\n  tickerSocketData,\n  tickerList,\n}: {\n  coinName: string;\n\n  tickerSocketData: ICoinSocketTickers[];\n  tickerList: ICoinHttpTickers[];\n}): JSX.Element => {\n  if (tickerSocketData) {\n    const price: string = tickerList\n      .find((ticker) => ticker.market === coinName && ticker, 0)\n      ?.trade_price.toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\n    return <span>₩{price || 0}</span>;\n  }\n  return <></>;\n};\nexport default TradePrice;\n","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\nimport { Icons, TdChangeDiv } from \"./TbodyTr\";\n\nconst ChangePrice = ({\n  coinName,\n  tickerSocketData,\n  tickerList,\n}: {\n  coinName: string;\n  tickerSocketData: ICoinSocketTickers[];\n  tickerList: ICoinHttpTickers[];\n}): JSX.Element => {\n  if (tickerSocketData) {\n    const changePrice: string = tickerList\n      .find((ticker) => ticker.market === coinName && ticker, 0)\n      ?.change_price.toString()\n      .replace(/\\B(?=(\\d{3})+(!\\d))/g, \",\")!;\n    const change: string = tickerList.find(\n      (ticker) => ticker.market === coinName && ticker,\n      \"EVEN\"\n    )?.change!;\n    const changeRate: number = tickerList.find(\n      (ticker) => ticker.market === coinName && ticker,\n      0\n    )?.change_rate!;\n    return (\n      <TdChangeDiv change={change || \"EVEN\"}>\n        <span>₩{changePrice || 0}</span>\n        <span>\n          {change === \"EVEN\" ? (\n            <Icons className=\"material-symbols-outlined\">\n              check_indeterminate_small\n            </Icons>\n          ) : change === \"RISE\" ? (\n            <Icons className=\"material-symbols-outlined\">arrow_drop_up</Icons>\n          ) : change === \"FALL\" ? (\n            <Icons className=\"material-symbols-outlined\">arrow_drop_down</Icons>\n          ) : (\n            <Icons className=\"material-symbols-outlined\">trending_flat</Icons>\n          )}\n          {(changeRate * 100 || 0).toFixed(2)}%\n        </span>\n      </TdChangeDiv>\n    );\n  }\n  return <TdChangeDiv change=\"EVEN\"></TdChangeDiv>;\n};\nexport default ChangePrice;","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\nconst CirculatingSupply = ({\n  coinName,\n  supply,\n  tickerSocketData,\n  tickerList,\n}: {\n  coinName: string;\n  supply: number;\n  tickerSocketData: ICoinSocketTickers[];\n  tickerList: ICoinHttpTickers[];\n}): JSX.Element => {\n  if (tickerSocketData) {\n    const price: number = tickerList.find(\n      (ticker) => ticker.market === coinName && ticker,\n      0\n    )?.trade_price!;\n    return (\n      <span>\n        ₩\n        {(supply * price || 0)\n          .toFixed(0)\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n      </span>\n    );\n  }\n  return <></>;\n};\nexport default CirculatingSupply;\n","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\n\nconst AccTradePrice24h = ({\n  coinName,\n  tickerSocketData,\n  tickerList,\n}: {\n  coinName: string;\n  tickerSocketData: ICoinSocketTickers[];\n  tickerList: ICoinHttpTickers[];\n}): JSX.Element => {\n  if (tickerSocketData) {\n    const accTradePrice24h: string = tickerList\n      .find((ticker) => ticker.market === coinName && ticker, 0)\n      ?.acc_trade_price_24h.toFixed(0)\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\n    return <span>₩{accTradePrice24h || 0}</span>;\n  }\n  return <></>;\n};\nexport default AccTradePrice24h;","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../interface/icoin\";\n\nconst AccTradeVolume24h = ({\n  coinName,\n  tickerSocketData,\n  tickerList,\n}: {\n  coinName: string;\n  tickerSocketData: ICoinSocketTickers[];\n  tickerList: ICoinHttpTickers[];\n}): JSX.Element => {\n  if (tickerSocketData) {\n    const accTradeVolume24h: string = tickerList\n      .find((ticker) => ticker.market === coinName && ticker, 0)\n      ?.acc_trade_volume_24h.toFixed(0)\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\n    return (\n      <span>\n        {accTradeVolume24h || 0} {coinName.substring(4) || \"\"}\n      </span>\n    );\n  }\n  return <></>;\n};\nexport default AccTradeVolume24h;","import styled from \"styled-components\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { ICoinHistory } from \"../../interface/icoin\";\n\nconst ApexChartDiv = styled.div`\n  max-width: 100%;\n  max-height: 61px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\nconst ApexChart = styled(ReactApexChart)`\n  width: 164px;\n  color: ${(props) =>\n    props.change === \"RISE\"\n      ? \"#089981\"\n      : props.change === \"FALL\"\n      ? \" #F23645\"\n      : \"#222\"};\n  will-change: color;\n`;\nfunction Chart({\n  history,\n  change,\n}: {\n  history: ICoinHistory[];\n  change: string;\n}) {\n  return (\n    <>\n      <ApexChartDiv>\n        <ApexChart\n          change={change}\n          type=\"line\"\n          series={[\n            {\n              data:\n                history.map((price) => ({\n                  x: price.timestamp,\n                  y: price.prev_closing_price,\n                })) ?? [],\n            },\n          ]}\n          options={{\n            chart: {\n              type: \"line\",\n              background: \"transparent\",\n              zoom: { enabled: false },\n              toolbar: {\n                show: false,\n              },\n              animations: {\n                enabled: false,\n              },\n            },\n            grid: {\n              show: false,\n            },\n            legend: {\n              show: false,\n            },\n            dataLabels: {\n              enabled: false,\n            },\n            labels: {\n              show: false,\n            },\n            tooltip: {\n              enabled: false,\n            },\n            markers: { size: 0 },\n            stroke: { curve: \"smooth\", width: 3 },\n            colors: [\n              change === \"RISE\"\n                ? \"#c84a31\"\n                : change === \"EVEN\"\n                ? \"#222\"\n                : \"#1261c4\",\n            ],\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n            },\n            yaxis: { show: false },\n          }}\n        />\n      </ApexChartDiv>\n    </>\n  );\n}\nexport default Chart;\n","import {\n  ICoinHistory,\n  ICoinHttpTickers,\n  ICoinSocketTickers,\n} from \"../../interface/icoin\";\nimport Chart from \"./Chart\";\n\nconst Chart200Days = ({\n  coinName,\n  history,\n  tickerSocketData,\n  tickerList,\n}: {\n  coinName: string;\n  history: ICoinHistory[];\n  tickerSocketData: ICoinSocketTickers[];\n  tickerList: ICoinHttpTickers[];\n}) => {\n  if (tickerSocketData) {\n    const change: string = tickerList.find(\n      (ticker) => ticker.market === coinName && ticker,\n      \"EVEN\"\n    )?.change!;\n    return <Chart history={history} change={change} />;\n  }\n  return <></>;\n};\nexport default Chart200Days;","import { useEffect, useState, useCallback } from \"react\";\nimport { circulatingSupply } from \"../services/coinApi\";\nimport {\n  ICoinHistory,\n  ICoinHttpTickers,\n  ICoinListDataResult,\n  ICoinListMerge,\n  ICoins,\n} from \"../interface/icoin\";\n\nconst useCoinListData = (\n  nameData: ICoins[] | undefined,\n  tickerHttpData: ICoinHttpTickers[] | undefined,\n  historyData: ICoinHistory[][] | undefined\n): ICoinListDataResult => {\n  const [mergeData, setMergeData] = useState<ICoinListMerge[]>([]);\n\n  const mergeFn = useCallback(async () => {\n    let newArr: ICoinListMerge[] = [];\n    await Promise.all(\n      tickerHttpData!.map(async (tickerArr) => {\n        const supplyArr = circulatingSupply.find(\n          (supply) => supply.id === tickerArr.market\n        );\n        if (supplyArr) {\n          const historyArr = historyData!.find(\n            (history) => history[0].market === tickerArr.market\n          );\n          if (historyArr) {\n            const nameArr = nameData!.find(\n              (name) => name.market === tickerArr.market\n            );\n            if (nameArr) {\n              let newObject = {\n                ...tickerArr,\n                ...nameArr,\n                ...supplyArr,\n                historyArr,\n              };\n              newArr.push(newObject);\n            }\n          }\n        }\n      })\n    ).then(() => setMergeData(() => newArr));\n  }, [historyData, nameData, tickerHttpData]);\n\n  useEffect(() => {\n    if (historyData) {\n      mergeFn();\n    }\n  }, [historyData, mergeFn]);\n\n  return {\n    data: mergeData,\n  };\n};\n\nexport default useCoinListData;\n","import { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoinTickers } from \"../services/coinApi\";\nimport { ICoinHttpTickers } from \"../interface/icoin\";\n\nconst useCoinTickers = (count: number, coinList: string[]) => {\n  const { data: tickerHttpData } = useQuery<ICoinHttpTickers[]>(\n    [\"ticker\", coinList],\n    () => fetchCoinTickers(coinList!),\n    {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n  return { tickerHttpData };\n};\n\nexport default useCoinTickers;\n","import { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoinHistory } from \"../services/coinApi\";\nimport { ICoinHistory } from \"../interface/icoin\";\n\nconst useCoinHistory = (count: number, coinList: string[]) => {\n  const { data: historyData } = useQuery<ICoinHistory[][]>(\n    [\"history\", coinList],\n    () => fetchCoinHistory(coinList!),\n    {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n    }\n  );\n  return {\n    historyData,\n  };\n};\n\nexport default useCoinHistory;\n","import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport SkeletonUI from \"./SkeletonUI\";\nimport TradePrice from \"./TradePrice\";\nimport ChangePrice from \"./ChangePrice\";\nimport CirculatingSupply from \"./CirculatingSupply\";\nimport AccTradePrice24h from \"./AccTradePrice24h\";\nimport AccTradeVolume24h from \"./AccTradeVolume24h\";\nimport Chart200Days from \"./Chart200Days\";\nimport useCoinNames from \"../../libs/useCoinNames\";\nimport useCoinListData from \"../../libs/useCoinListData\";\nimport { useCoinTickersSocket } from \"../../services/coinApi\";\nimport { ICoinHttpTickers, ICoins } from \"../../interface/icoin\";\nimport { Tr } from \"../../container/CoinList\";\nimport useCoinTickers from \"../../libs/useCoinTickers\";\nimport useCoinHistory from \"../../libs/useCoinHistory\";\n\nconst GoDetail = styled.a`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  &:hover {\n    background-color: #dadada;\n    border-radius: 5px;\n  }\n  div {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n  }\n  div span + span {\n    color: #808a9d;\n  }\n`;\nexport const Td = styled.td`\n  text-align: end;\n  vertical-align: middle;\n  padding: 10px;\n  white-space: nowrap;\n  :last-child {\n    padding: 0px;\n  }\n`;\nconst NameTd = styled.td`\n  text-align: start;\n  vertical-align: middle;\n  position: sticky;\n  position: -webkit-sticky;\n  top: 0;\n  left: -2px;\n  z-index: 10;\n  background-color: #f8f8f8;\n  @media (max-width: 1279px) {\n    & {\n      ::before {\n        box-shadow: inset 10px 0 8px -8px rgba(0, 0, 0, 0.15);\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: -1px;\n        width: 30px;\n        transform: translateX(100%);\n        transition: box-shadow 0.3s;\n        content: \"\";\n        pointer-events: none;\n      }\n    }\n  }\n`;\nexport const Namediv = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  div {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n  }\n  div span + span {\n    color: #808a9d;\n  }\n`;\nexport const TdChangeDiv = styled.div<{ change: string }>`\n  display: flex;\n  flex-direction: column;\n  color: ${(props) =>\n    props.change === \"RISE\"\n      ? \"#c84a31\"\n      : props.change === \"FALL\"\n      ? \"#1261c4\"\n      : \"#222\"};\n  will-change: color;\n`;\nexport const Icons = styled.span`\n  vertical-align: middle;\n`;\nexport const Img = styled.img`\n  margin-right: 5px;\n  max-width: 20px;\n`;\n\nfunction TbodyTr({\n  count,\n  nameData,\n}: {\n  count: number;\n  nameData: ICoins[] | undefined;\n}) {\n  const coinList = nameData\n    ?.map((data) => data.market)\n    .slice(count - 10, count);\n  const socketNameList = nameData?.map((data) => data.market);\n  const { tickerHttpData } = useCoinTickers(count, coinList!);\n  const { historyData } = useCoinHistory(count, coinList!);\n  const { data: mergeData } = useCoinListData(\n    nameData,\n    tickerHttpData,\n    historyData\n  );\n  const { coinTickers } = useCoinTickersSocket(socketNameList!);\n  const [tickerList, setTickerList] = useState<ICoinHttpTickers[]>(\n    mergeData || []\n  );\n  useEffect(() => {\n    if (coinTickers && mergeData) {\n      const updatedTickerList = mergeData.map((httpData) => {\n        const arr = coinTickers.find(\n          (socketData) => httpData.market === socketData.code\n        );\n        return arr ? { ...httpData, ...arr } : httpData;\n      });\n      setTickerList(updatedTickerList);\n    }\n  }, [coinTickers, mergeData]);\n\n  const makeSkeleton = () => {\n    const skeletons = [];\n    for (let i = 1; i <= 10; i++) {\n      skeletons.push(<SkeletonUI key={i} />);\n    }\n    return skeletons;\n  };\n  return (\n    <>\n      {mergeData && tickerList && coinTickers\n        ? mergeData.map((data, index) => (\n            <Tr key={index}>\n              <NameTd>\n                <GoDetail\n                  href={`https://upbit.com/exchange?code=CRIX.UPBIT.${data.market}`}\n                  target=\"_blank\"\n                >\n                  <Img\n                    src={`https://static.upbit.com/logos/${data.market.substring(\n                      4\n                    )}.png`}\n                    alt=\"coin_icon\"\n                    loading=\"lazy\"\n                    decoding=\"async\"\n                  />\n                  <div>\n                    <span>{data.english_name}</span>\n                    <span>{data.market.substring(4)}</span>\n                  </div>\n                </GoDetail>\n              </NameTd>\n              <Td>\n                <TradePrice\n                  coinName={data.market}\n                  tickerList={tickerList}\n                  tickerSocketData={coinTickers}\n                />\n              </Td>\n              <Td>\n                <ChangePrice\n                  coinName={data.market}\n                  tickerList={tickerList}\n                  tickerSocketData={coinTickers}\n                />\n              </Td>\n              <Td>\n                <AccTradeVolume24h\n                  coinName={data.market}\n                  tickerList={tickerList}\n                  tickerSocketData={coinTickers}\n                />\n              </Td>\n              <Td>\n                <AccTradePrice24h\n                  coinName={data.market}\n                  tickerList={tickerList}\n                  tickerSocketData={coinTickers}\n                />\n              </Td>\n              <Td>\n                <span>\n                  {data.supply.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}{\" \"}\n                  {data.market.substring(4)}\n                </span>\n              </Td>\n              <Td>\n                <CirculatingSupply\n                  coinName={data.market}\n                  supply={data.supply}\n                  tickerList={tickerList}\n                  tickerSocketData={coinTickers}\n                />\n              </Td>\n              <Td>\n                {data.historyArr && (\n                  <Chart200Days\n                    coinName={data.market}\n                    history={data.historyArr}\n                    tickerList={tickerList}\n                    tickerSocketData={coinTickers}\n                  />\n                )}\n              </Td>\n            </Tr>\n          ))\n        : makeSkeleton()}\n    </>\n  );\n}\nexport default React.memo(TbodyTr);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useCoinNames from \"../libs/useCoinNames\";\nimport { TextBox, TextBoxMiddle, TextBoxbottom } from \"../pages/main/common/mainCommon\";\nimport Colgroup from \"../components/CoinList/ColGroup\";\nimport TheadTr from \"../components/CoinList/TheadTr\";\nimport TbodyTr from \"../components/CoinList/TbodyTr\";\n\nconst Container = styled.section`\n  width: 100%;\n  margin-top: -5rem;\n  padding: 4vw 2.7vw 15vw 2.7vw;\n  border-radius: 5vw 5vw 0 0;\n  background-color: #f8f8f8;\n  position: relative;\n  z-index: 3;\n  @media (max-width: 1050px) {\n    & {\n      padding-bottom: 12rem;\n    }\n  }\n`;\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst TableBox = styled.div`\n  @media (max-width: 1279px) {\n    & {\n      overflow-x: scroll;\n    }\n  }\n`;\nconst ListTable = styled.table`\n  width: 100%;\n  font-weight: 900;\n  @media (max-width: 650px) {\n    & {\n      font-size: 2.3vw;\n    }\n  }\n  @media (max-width: 480px) {\n    & {\n      font-size: 3vw;\n    }\n  }\n`;\nexport const Tr = styled.tr`\n  border-bottom: 1px solid #e2e2e2;\n  :first-child {\n    border-top: 1px solid #e2e2e2;\n  }\n`;\nconst BtnBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5vw;\n  margin-top: 40px;\n`;\nconst PageBtn = styled.button<{ selected: boolean }>`\n  font-family: \"Apercu\", sans-serif;\n  font-weight: 600;\n  border: none;\n  border-radius: 7px;\n  font-size: 15px;\n  cursor: pointer;\n  padding: 5px 10px;\n  transition: all 0.2s ease-in-out;\n  background-color: ${(props) => (props.selected ? \"#333\" : \"transparent\")};\n  color: ${(props) => (props.selected ? \"#fff\" : \"#333\")};\n  will-change: background-color, color;\n`;\n\nfunction CoinList() {\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(10);\n  const pageNation = (pageNum: number) => {\n    setPage(() => pageNum);\n  };\n  useEffect(() => {\n    updateCount(page);\n  }, [page]);\n  const updateCount = (page: number) => {\n    setCount(() => page * 10);\n  };\n  const { nameData } = useCoinNames(true);\n  const makePageBtn = () => {\n    const pageButtons = [];\n    if (nameData) {\n      let pageLength = Math.ceil(nameData.length / 10);\n      for (let i = 1; i <= pageLength; i++) {\n        pageButtons.push(\n          <PageBtn onClick={() => pageNation(i)} key={i} selected={i === page}>\n            {i}\n          </PageBtn>\n        );\n      }\n      return pageButtons;\n    }\n  };\n  return (\n    <Container>\n      <Inner>\n        <TextBox>\n          <TextBoxMiddle>CoinList</TextBoxMiddle>\n          <TextBoxbottom>\n            Combination of UPBIT, React-Query\n          </TextBoxbottom>\n        </TextBox>\n        <TableBox>\n          <ListTable>\n            <Colgroup />\n            <thead>\n              <TheadTr />\n            </thead>\n            <tbody>\n              <TbodyTr count={count} nameData={nameData}/>\n            </tbody>\n          </ListTable>\n        </TableBox>\n        <BtnBox>{makePageBtn()}</BtnBox>\n      </Inner>\n    </Container>\n  );\n}\nexport default React.memo(CoinList);\n"],"names":["circulatingSupply","id","supply","allList","data","nameData","useQuery","async","response","fetch","json","fetchCoins","select","datas","filter","market","indexOf","refetchOnMount","refetchOnWindowFocus","console","log","ColName","styled","col","_templateObject","_taggedTemplateLiteral","ColPrice","_templateObject2","ColChange","_templateObject3","ColVolume","_templateObject4","ColVolumePrice","_templateObject5","ColSupply","_templateObject6","ColCap","_templateObject7","ColChart","_templateObject8","_jsxs","children","_jsx","NameTh","th","Th","Tr","Namediv","div","TdFixed","td","TdNomalDivFixed","Skeleton","SkeletonName","SkeletonPrice","SkeletonChangePrice","SkeletonChangePer","SkeletonVolume","_templateObject9","SkeletonVolumePrice","_templateObject10","SkeletonSupply","_templateObject11","SkeletonMarketCap","_templateObject12","SkeletonChart","_templateObject13","_ref","coinName","tickerSocketData","tickerList","_tickerList$find","price","find","ticker","trade_price","toString","replace","_Fragment","_tickerList$find2","_tickerList$find3","changePrice","change_price","change","changeRate","change_rate","TdChangeDiv","Icons","className","toFixed","accTradePrice24h","acc_trade_price_24h","accTradeVolume24h","acc_trade_volume_24h","substring","ApexChartDiv","ApexChart","ReactApexChart","props","_history$map","history","type","series","map","x","timestamp","y","prev_closing_price","options","chart","background","zoom","enabled","toolbar","show","animations","grid","legend","dataLabels","labels","tooltip","markers","size","stroke","curve","width","colors","xaxis","axisBorder","axisTicks","yaxis","Chart","useCoinListData","tickerHttpData","historyData","mergeData","setMergeData","useState","mergeFn","useCallback","newArr","Promise","all","supplyArr","tickerArr","historyArr","nameArr","name","newObject","push","then","useEffect","useCoinTickers","count","coinList","results","index","length","concat","fetchCoinTickers","useCoinHistory","fetchCoinHistory","GoDetail","a","Td","NameTd","span","Img","img","TbodyTr","slice","socketNameList","coinTickers","socket","setSocket","setCoinTickers","error","setError","connectWS","readyState","WebSocket","OPEN","CONNECTING","upbitSocket","addEventListener","close","message","text","jsonData","JSON","parse","e","handleOpen","subscribeMsg","ticket","codes","send","stringify","removeEventListener","useCoinTickersSocket","setTickerList","updatedTickerList","httpData","arr","socketData","code","href","target","src","alt","loading","decoding","english_name","TradePrice","ChangePrice","AccTradeVolume24h","AccTradePrice24h","CirculatingSupply","Chart200Days","makeSkeleton","skeletons","i","SkeletonUI","React","Container","section","Inner","TableBox","ListTable","table","tr","BtnBox","PageBtn","button","selected","CoinList","page","setPage","setCount","updateCount","useCoinNames","TextBox","TextBoxMiddle","TextBoxbottom","Colgroup","TheadTr","makePageBtn","pageButtons","pageLength","Math","ceil","onClick","pageNation","pageNum"],"sourceRoot":""}