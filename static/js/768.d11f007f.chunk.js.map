{"version":3,"file":"static/js/768.d11f007f.chunk.js","mappings":"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","sources":["pages/main/coinList/ColGroup.tsx","pages/main/coinList/TheadTr.tsx","pages/main/coinList/SkeletonUI.tsx","pages/main/coinList/TradePrice.tsx","pages/main/coinList/ChangePrice.tsx","pages/main/coinList/CirculatingSupply.tsx","pages/main/coinList/AccTradePrice24h.tsx","pages/main/coinList/AccTradeVolume24h.tsx","pages/main/coinList/Chart.tsx","pages/main/coinList/Chart200Days.tsx","services/coinApi.ts","pages/main/coinList/TbodyTr.tsx","pages/main/coinList/CoinList.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst ColName = styled.col`\r\n  width: 310px;\r\n  min-width: auto;\r\n  @media (max-width: 1279px) {\r\n    & {\r\n      box-shadow: 0px 0px 2px rgba(128, 138, 157, 0.12),\r\n        0px 0px 24px rgba(128, 138, 157, 0.14);\r\n    }\r\n  }\r\n`;\r\nconst ColPrice = styled.col`\r\n  width: 181px;\r\n  min-width: auto;\r\n`;\r\nconst ColChange = styled.col`\r\n  width: 200px;\r\n  min-width: auto;\r\n`;\r\nconst ColVolume = styled.col`\r\n  width: 236px;\r\n  min-width: auto;\r\n`;\r\nconst ColVolumePrice = styled.col`\r\n  width: 236px;\r\n  min-width: auto;\r\n`;\r\nconst ColSupply = styled.col`\r\n  width: 236px;\r\n  min-width: auto;\r\n`;\r\nconst ColCap = styled.col`\r\n  width: 236px;\r\n  min-width: auto;\r\n`;\r\nconst ColChart = styled.col`\r\n  width: 183px;\r\n  min-width: auto;\r\n`;\r\nfunction Colgroup() {\r\n  return (\r\n    <colgroup>\r\n      <ColName />\r\n      <ColPrice />\r\n      <ColChange />\r\n      <ColVolume />\r\n      <ColVolumePrice />\r\n      <ColSupply />\r\n      <ColCap />\r\n      <ColChart />\r\n    </colgroup>\r\n  );\r\n}\r\nexport default Colgroup;\r\n","import styled from \"styled-components\";\r\nimport { Tr } from \"./CoinList\";\r\n\r\nconst NameTh = styled.th`\r\n  text-align: start;\r\n  vertical-align: middle;\r\n  padding: 10px;\r\n  padding-left: 1vw;\r\n  position: sticky;\r\n  top: 0;\r\n  left: -2px;\r\n  z-index: 10;\r\n  background-color: #f8f8f8;\r\n  @media (max-width: 1279px) {\r\n    & {\r\n      ::before {\r\n        box-shadow: inset 10px 0 8px -8px rgba(0, 0, 0, 0.15);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: -1px;\r\n        width: 30px;\r\n        transform: translateX(100%);\r\n        transition: box-shadow 0.3s;\r\n        content: \"\";\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Th = styled.th`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 3;\r\n  background-color: #f8f8f8;\r\n  text-align: end;\r\n  vertical-align: middle;\r\n  padding: 10px;\r\n  font-weight: 900;\r\n  white-space: nowrap;\r\n  :last-child {\r\n    padding-right: 1vw;\r\n  }\r\n`;\r\nfunction TheadTr() {\r\n  return (\r\n    <Tr>\r\n      <NameTh>\r\n        <span>Name</span>\r\n      </NameTh>\r\n      <Th>\r\n        <span>Price</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Change (24h)</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Volume (24h)</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Volume Price (24h)</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Circulating Supply</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Market Cap</span>\r\n      </Th>\r\n      <Th>\r\n        <span>Last 200 Days</span>\r\n      </Th>\r\n    </Tr>\r\n  );\r\n}\r\nexport default TheadTr;\r\n","import styled from \"styled-components\";\r\nimport { Tr } from \"./CoinList\";\r\nimport { Namediv } from \"./TbodyTr\";\r\n\r\nconst TdFixed = styled.td`\r\n  padding: 3.5px;\r\n  text-align: end;\r\n  vertical-align: middle;\r\n  white-space: nowrap;\r\n  :last-child {\r\n    padding: 0px;\r\n  }\r\n`;\r\n\r\nconst TdNomalDivFixed = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 3px;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst Skeleton = styled.div`\r\n  background-color: #ececec;\r\n  border-radius: 5px;\r\n  padding: 13px 10px;\r\n`;\r\nconst SkeletonName = styled(Skeleton)`\r\n  width: 100%;\r\n`;\r\nconst SkeletonPrice = styled(Skeleton)`\r\n  width: 100%;\r\n`;\r\nconst SkeletonChangePrice = styled(Skeleton)`\r\n  width: 40%;\r\n`;\r\nconst SkeletonChangePer = styled(Skeleton)`\r\n  width: 50%;\r\n`;\r\nconst SkeletonVolume = styled(Skeleton)`\r\n  width: 90%;\r\n`;\r\nconst SkeletonVolumePrice = styled(Skeleton)`\r\n  width: 90%;\r\n`;\r\nconst SkeletonSupply = styled(Skeleton)`\r\n  width: 90%;\r\n`;\r\nconst SkeletonMarketCap = styled(Skeleton)`\r\n  width: 90%;\r\n`;\r\nconst SkeletonChart = styled(Skeleton)`\r\n  width: 100%;\r\n  height: 50px;\r\n`;\r\n\r\nfunction SkeletonUI() {\r\n  return (\r\n    <Tr>\r\n      <TdFixed>\r\n        <Namediv>\r\n          <SkeletonName />\r\n        </Namediv>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonPrice />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonChangePrice />\r\n          <SkeletonChangePer />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonVolume />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonVolumePrice />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonSupply />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <TdNomalDivFixed>\r\n          <SkeletonMarketCap />\r\n        </TdNomalDivFixed>\r\n      </TdFixed>\r\n      <TdFixed>\r\n        <SkeletonChart />\r\n      </TdFixed>\r\n    </Tr>\r\n  );\r\n}\r\nexport default SkeletonUI;\r\n","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../../interface/icoin\";\r\n\r\nconst TradePrice = ({\r\n  coinName,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const price: string = tickerList\r\n      .find((ticker) => ticker.market === coinName && ticker, 0)\r\n      ?.trade_price.toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\r\n\r\n    return <span>₩{price || 0}</span>;\r\n  }\r\n  return <></>;\r\n};\r\nexport default TradePrice;\r\n","\r\nimport { ICoinHttpTickers, ICoinSocketTickers } from \"../../../interface/icoin\";\r\nimport { Icons, TdChangeDiv } from \"./TbodyTr\";\r\n\r\nconst ChangePrice = ({\r\n  coinName,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const changePrice: string = tickerList\r\n      .find((ticker) => ticker.market === coinName && ticker, 0)\r\n      ?.change_price.toString()\r\n      .replace(/\\B(?=(\\d{3})+(!\\d))/g, \",\")!;\r\n    const change: string = tickerList.find(\r\n      (ticker) => ticker.market === coinName && ticker,\r\n      \"EVEN\"\r\n    )?.change!;\r\n    const changeRate: number = tickerList.find(\r\n      (ticker) => ticker.market === coinName && ticker,\r\n      0\r\n    )?.change_rate!;\r\n    return (\r\n      <TdChangeDiv change={change || \"EVEN\"}>\r\n        <span>₩{changePrice || 0}</span>\r\n        <span>\r\n          {change === \"EVEN\" ? (\r\n            <Icons className=\"material-symbols-outlined\">\r\n              check_indeterminate_small\r\n            </Icons>\r\n          ) : change === \"RISE\" ? (\r\n            <Icons className=\"material-symbols-outlined\">arrow_drop_up</Icons>\r\n          ) : change === \"FALL\" ? (\r\n            <Icons className=\"material-symbols-outlined\">arrow_drop_down</Icons>\r\n          ) : (\r\n            <Icons className=\"material-symbols-outlined\">trending_flat</Icons>\r\n          )}\r\n          {(changeRate * 100 || 0).toFixed(2)}%\r\n        </span>\r\n      </TdChangeDiv>\r\n    );\r\n  }\r\n  return <TdChangeDiv change=\"EVEN\"></TdChangeDiv>;\r\n};\r\nexport default ChangePrice;\r\n","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../../interface/icoin\";\r\n\r\n\r\nconst CirculatingSupply = ({\r\n  coinName,\r\n  supply,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  supply: number;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const price: number = tickerList.find(\r\n      (ticker) => ticker.market === coinName && ticker,\r\n      0\r\n    )?.trade_price!;\r\n\r\n    return (\r\n      <span>\r\n        ₩\r\n        {(supply * price || 0)\r\n          .toFixed(0)\r\n          .toString()\r\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n      </span>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\nexport default CirculatingSupply;\r\n","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../../interface/icoin\";\r\n\r\nconst AccTradePrice24h = ({\r\n  coinName,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const accTradePrice24h: string = tickerList\r\n      .find((ticker) => ticker.market === coinName && ticker, 0)\r\n      ?.acc_trade_price_24h.toFixed(0)\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\r\n\r\n    return <span>₩{accTradePrice24h || 0}</span>;\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default AccTradePrice24h;\r\n","import { ICoinHttpTickers, ICoinSocketTickers } from \"../../../interface/icoin\";\r\n\r\n\r\nconst AccTradeVolume24h = ({\r\n  coinName,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}): JSX.Element => {\r\n  if (tickerSocketData) {\r\n    const accTradeVolume24h: string = tickerList\r\n      .find((ticker) => ticker.market === coinName && ticker, 0)\r\n      ?.acc_trade_volume_24h.toFixed(0)\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")!;\r\n\r\n    return (\r\n      <span>\r\n        {accTradeVolume24h || 0} {coinName.substring(4) || \"\"}\r\n      </span>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\nexport default AccTradeVolume24h;\r\n","import styled from \"styled-components\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { ICoinHistory } from \"../../../interface/icoin\";\r\n\r\nconst ApexChartDiv = styled.div`\r\n  max-width: 100%;\r\n  max-height: 61px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst ApexChart = styled(ReactApexChart)`\r\n  width: 164px;\r\n  color: ${(props) =>\r\n    props.change === \"RISE\"\r\n      ? \"#c84a31\"\r\n      : props.change === \"FALL\"\r\n      ? \" #1261c4\"\r\n      : \"#222\"};\r\n  will-change: color;\r\n`;\r\nfunction Chart({\r\n  history,\r\n  change,\r\n}: {\r\n  history: ICoinHistory[];\r\n  change: string;\r\n}) {\r\n  return (\r\n    <>\r\n      <ApexChartDiv>\r\n        <ApexChart\r\n          change={change}\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              data:\r\n                history.map((price) => ({\r\n                  x: price.timestamp,\r\n                  y: price.prev_closing_price,\r\n                })) ?? [],\r\n            },\r\n          ]}\r\n          options={{\r\n            chart: {\r\n              type: \"line\",\r\n              background: \"transparent\",\r\n              zoom: { enabled: false },\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              animations: {\r\n                enabled: false,\r\n              },\r\n            },\r\n            grid: {\r\n              show: false,\r\n            },\r\n            legend: {\r\n              show: false,\r\n            },\r\n            dataLabels: {\r\n              enabled: false,\r\n            },\r\n            labels: {\r\n              show: false,\r\n            },\r\n            tooltip: {\r\n              enabled: false,\r\n            },\r\n            markers: { size: 0 },\r\n            stroke: { curve: \"smooth\", width: 3 },\r\n            colors: [\r\n              change === \"RISE\"\r\n                ? \"#c84a31\"\r\n                : change === \"EVEN\"\r\n                ? \"#222\"\r\n                : \"#1261c4\",\r\n            ],\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: { show: false },\r\n          }}\r\n        />\r\n      </ApexChartDiv>\r\n    </>\r\n  );\r\n}\r\nexport default Chart;\r\n","\r\nimport { ICoinHistory, ICoinHttpTickers, ICoinSocketTickers } from \"../../../interface/icoin\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst Chart200Days = ({\r\n  coinName,\r\n  history,\r\n  tickerSocketData,\r\n  tickerList,\r\n}: {\r\n  coinName: string;\r\n  history: ICoinHistory[];\r\n  tickerSocketData: ICoinSocketTickers[];\r\n  tickerList: ICoinHttpTickers[];\r\n}) => {\r\n  if (tickerSocketData) {\r\n    const change: string = tickerList.find(\r\n      (ticker) => ticker.market === coinName && ticker,\r\n      \"EVEN\"\r\n    )?.change!;\r\n\r\n    return <Chart history={history} change={change} />;\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default Chart200Days;\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ICoinSocketTickers } from \"../interface/icoin\";\r\n\r\nexport async function fetchCoins() {\r\n  const response = await fetch(\r\n    `https://api.upbit.com/v1/market/all?isDetails=false`\r\n  );\r\n  return await response.json();\r\n}\r\nexport async function fetchCoinTickers(coinList: string[]) {\r\n  let results = [];\r\n  for (let index = 0; index < coinList.length; index++) {\r\n    const response = await fetch(\r\n      `https://api.upbit.com/v1/ticker?markets=${coinList[index]}`\r\n    );\r\n    const [json] = await response.json();\r\n    results.push(json);\r\n  }\r\n  return results;\r\n}\r\n\r\nexport async function fetchCoinHistory(coinList: string[]) {\r\n  let results = [];\r\n  for (let index = 0; index < coinList.length; index++) {\r\n    const response = await fetch(\r\n      `https://api.upbit.com/v1/candles/days?market=${coinList[index]}&count=200&convertingPriceUnit=KRW`\r\n    );\r\n    const json = await response.json();\r\n    results.push(json);\r\n  }\r\n  return results;\r\n}\r\n\r\nexport function useCoinTickersSocket(coinList: string[]) {\r\n  const [socket, setSocket] = useState<WebSocket | null>(null);\r\n  const connectWS = () => {\r\n    const upbitSocket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\r\n    setSocket(() => upbitSocket);\r\n    upbitSocket.addEventListener(\"error\", (error) => {\r\n      console.error(\"WebSocket error:\", error);\r\n      connectWS();\r\n    });\r\n    upbitSocket.addEventListener(\"close\", () => {\r\n      console.log(\"WebSocket connection closed\");\r\n      connectWS();\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      connectWS();\r\n      return;\r\n    }\r\n    socket.addEventListener(\"open\", () => {\r\n      const subscribeMsg = [\r\n        { ticket: \"UNIQUE_TICKET\" },\r\n        { type: \"ticker\", codes: coinList },\r\n      ];\r\n      socket.send(JSON.stringify(subscribeMsg));\r\n    });\r\n  }, [coinList, socket]);\r\n\r\n  const fetchCoinTickersSocket = async () => {\r\n    let newArr: ICoinSocketTickers[] = [];\r\n    await new Promise((resolve, reject) => {\r\n      if (!socket) {\r\n        reject(\"The websocket connection is experiencing some delay.\");\r\n        return;\r\n      }\r\n      socket.addEventListener(\"message\", (message) => {\r\n        message.data.text().then((text: string) => {\r\n          const jsonData = JSON.parse(text);\r\n          newArr = [jsonData];\r\n          resolve(newArr);\r\n        });\r\n      });\r\n    });\r\n    return newArr;\r\n  };\r\n\r\n  return useQuery<ICoinSocketTickers[]>(\r\n    [\"coinTickers\", coinList],\r\n    () => fetchCoinTickersSocket(),\r\n    {\r\n      enabled: !!coinList,\r\n      refetchInterval: 1000,\r\n      cacheTime: 1000,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n}\r\n\r\n//무료 Supply api, market cap api 못찾겠다...\r\nexport const circulatingSupply = [\r\n  { id: \"KRW-EGLD\", supply: 26141841 },\r\n  { id: \"KRW-MINA\", supply: 993204269 },\r\n  {\r\n    id: \"KRW-BLUR\",\r\n    supply: 1037696566,\r\n  },\r\n  {\r\n    id: \"KRW-ADA\",\r\n    supply: 35239093292,\r\n  },\r\n  {\r\n    id: \"KRW-LSK\",\r\n    supply: 128900445,\r\n  },\r\n  {\r\n    id: \"KRW-SUI\",\r\n    supply: 860392960,\r\n  },\r\n  {\r\n    id: \"KRW-BTC\",\r\n    supply: 19527825,\r\n  },\r\n  {\r\n    id: \"KRW-ETH\",\r\n    supply: 120269588,\r\n  },\r\n  {\r\n    id: \"KRW-NEO\",\r\n    supply: 70538831,\r\n  },\r\n  {\r\n    id: \"KRW-MTL\",\r\n    supply: 66588888,\r\n  },\r\n  {\r\n    id: \"KRW-XRP\",\r\n    supply: 53560508378,\r\n  },\r\n  {\r\n    id: \"KRW-ETC\",\r\n    supply: 143761250,\r\n  },\r\n  {\r\n    id: \"KRW-OMG\",\r\n    supply: 140245398,\r\n  },\r\n  {\r\n    id: \"KRW-SNT\",\r\n    supply: 3867254211,\r\n  },\r\n  {\r\n    id: \"KRW-WAVES\",\r\n    supply: 112880272,\r\n  },\r\n  {\r\n    id: \"KRW-XEM\",\r\n    supply: 8999999999,\r\n  },\r\n  {\r\n    id: \"KRW-QTUM\",\r\n    supply: 104755842,\r\n  },\r\n  {\r\n    id: \"KRW-STEEM\",\r\n    supply: 447323620,\r\n  },\r\n  {\r\n    id: \"KRW-XLM\",\r\n    supply: 27828662953,\r\n  },\r\n  {\r\n    id: \"KRW-ARDR\",\r\n    supply: 998999495,\r\n  },\r\n  {\r\n    id: \"KRW-ARK\",\r\n    supply: 176574732,\r\n  },\r\n  {\r\n    id: \"KRW-STORJ\",\r\n    supply: 369601919,\r\n  },\r\n  {\r\n    id: \"KRW-GRS\",\r\n    supply: 83701269,\r\n  },\r\n  {\r\n    id: \"KRW-GRT\",\r\n    supply: 9273618693,\r\n  },\r\n  {\r\n    id: \"KRW-POWR\",\r\n    supply: 511332804,\r\n  },\r\n  {\r\n    id: \"KRW-BTG\",\r\n    supply: 17513924,\r\n  },\r\n  {\r\n    id: \"KRW-ICX\",\r\n    supply: 970574697,\r\n  },\r\n  {\r\n    id: \"KRW-EOS\",\r\n    supply: 1106943005,\r\n  },\r\n  {\r\n    id: \"KRW-TRX\",\r\n    supply: 88813932678,\r\n  },\r\n  {\r\n    id: \"KRW-SC\",\r\n    supply: 55459686387,\r\n  },\r\n  {\r\n    id: \"KRW-ONT\",\r\n    supply: 875249524,\r\n  },\r\n  {\r\n    id: \"KRW-ZIL\",\r\n    supply: 17372203179,\r\n  },\r\n  {\r\n    id: \"KRW-POLYX\",\r\n    supply: 743118982,\r\n  },\r\n  {\r\n    id: \"KRW-ZRX\",\r\n    supply: 847496055,\r\n  },\r\n  {\r\n    id: \"KRW-LOOM\",\r\n    supply: 1219425698,\r\n  },\r\n  {\r\n    id: \"KRW-BCH\",\r\n    supply: 19545181,\r\n  },\r\n  {\r\n    id: \"KRW-BAT\",\r\n    supply: 1490115132,\r\n  },\r\n  {\r\n    id: \"KRW-IOST\",\r\n    supply: 18588745668,\r\n  },\r\n  {\r\n    id: \"KRW-CVC\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-IQ\",\r\n    supply: 17022926376,\r\n  },\r\n  {\r\n    id: \"KRW-IOTA\",\r\n    supply: 2980714977,\r\n  },\r\n  {\r\n    id: \"KRW-HIFI\",\r\n    supply: 95012805,\r\n  },\r\n  {\r\n    id: \"KRW-ONG\",\r\n    supply: 360446029,\r\n  },\r\n  {\r\n    id: \"KRW-GAS\",\r\n    supply: 10128375,\r\n  },\r\n  {\r\n    id: \"KRW-UPP\",\r\n    supply: 490334811,\r\n  },\r\n  {\r\n    id: \"KRW-ELF\",\r\n    supply: 622340178,\r\n  },\r\n  {\r\n    id: \"KRW-KNC\",\r\n    supply: 170553950,\r\n  },\r\n  {\r\n    id: \"KRW-BSV\",\r\n    supply: 19266077,\r\n  },\r\n  {\r\n    id: \"KRW-THETA\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-QKC\",\r\n    supply: 6399906497,\r\n  },\r\n  {\r\n    id: \"KRW-BTT\",\r\n    supply: 951421714286000,\r\n  },\r\n  {\r\n    id: \"KRW-MOC\",\r\n    supply: 399489688,\r\n  },\r\n  {\r\n    id: \"KRW-TFUEL\",\r\n    supply: 6329728259,\r\n  },\r\n  {\r\n    id: \"KRW-MANA\",\r\n    supply: 1893095371,\r\n  },\r\n  {\r\n    id: \"KRW-ANKR\",\r\n    supply: 10000000000,\r\n  },\r\n  {\r\n    id: \"KRW-AERGO\",\r\n    supply: 445000000,\r\n  },\r\n  {\r\n    id: \"KRW-ATOM\",\r\n    supply: 372014559,\r\n  },\r\n  {\r\n    id: \"KRW-TT\",\r\n    supply: 10445528584,\r\n  },\r\n  {\r\n    id: \"KRW-CRE\",\r\n    supply: 10000000000,\r\n  },\r\n  {\r\n    id: \"KRW-MBL\",\r\n    supply: 16805372888,\r\n  },\r\n  {\r\n    id: \"KRW-WAXP\",\r\n    supply: 3369760187,\r\n  },\r\n  {\r\n    id: \"KRW-HBAR\",\r\n    supply: 33530602294,\r\n  },\r\n  {\r\n    id: \"KRW-MED\",\r\n    supply: 6908642520,\r\n  },\r\n  {\r\n    id: \"KRW-MLK\",\r\n    supply: 316685004,\r\n  },\r\n  {\r\n    id: \"KRW-SBD\",\r\n    supply: 12532609,\r\n  },\r\n  {\r\n    id: \"KRW-STPT\",\r\n    supply: 1942420283,\r\n  },\r\n  {\r\n    id: \"KRW-ORBS\",\r\n    supply: 3837372313,\r\n  },\r\n  {\r\n    id: \"KRW-VET\",\r\n    supply: 72714516834,\r\n  },\r\n  {\r\n    id: \"KRW-CHZ\",\r\n    supply: 7565079839,\r\n  },\r\n  {\r\n    id: \"KRW-STMX\",\r\n    supply: 10000000000,\r\n  },\r\n  {\r\n    id: \"KRW-DKA\",\r\n    supply: 3121666667,\r\n  },\r\n  {\r\n    id: \"KRW-HIVE\",\r\n    supply: 500749243,\r\n  },\r\n  {\r\n    id: \"KRW-KAVA\",\r\n    supply: 885982791,\r\n  },\r\n  {\r\n    id: \"KRW-AHT\",\r\n    supply: 4317728503,\r\n  },\r\n  {\r\n    id: \"KRW-LINK\",\r\n    supply: 556849970,\r\n  },\r\n  {\r\n    id: \"KRW-SEI\",\r\n    supply: 1800000000,\r\n  },\r\n  {\r\n    id: \"KRW-XTZ\",\r\n    supply: 932500082,\r\n  },\r\n  {\r\n    id: \"KRW-BORA\",\r\n    supply: 993750000,\r\n  },\r\n  {\r\n    id: \"KRW-JST\",\r\n    supply: 8902080000,\r\n  },\r\n  {\r\n    id: \"KRW-CRO\",\r\n    supply: 25263013692,\r\n  },\r\n  {\r\n    id: \"KRW-TON\",\r\n    supply: 43749835,\r\n  },\r\n  {\r\n    id: \"KRW-SXP\",\r\n    supply: 582529712,\r\n  },\r\n  {\r\n    id: \"KRW-HUNT\",\r\n    supply: 198912688,\r\n  },\r\n  {\r\n    id: \"KRW-PLA\",\r\n    supply: 569265030,\r\n  },\r\n  {\r\n    id: \"KRW-DOT\",\r\n    supply: 1263709202,\r\n  },\r\n  {\r\n    id: \"KRW-SRM\",\r\n    supply: 263244669,\r\n  },\r\n  {\r\n    id: \"KRW-MVL\",\r\n    supply: 23752958863,\r\n  },\r\n  {\r\n    id: \"KRW-STRAX\",\r\n    supply: 154744623,\r\n  },\r\n  {\r\n    id: \"KRW-AQT\",\r\n    supply: 26640785,\r\n  },\r\n  {\r\n    id: \"KRW-GLM\",\r\n    supply: 1000000000,\r\n  },\r\n  {\r\n    id: \"KRW-SSX\",\r\n    supply: 2861938931,\r\n  },\r\n  {\r\n    id: \"KRW-META\",\r\n    supply: 1703608720,\r\n  },\r\n  {\r\n    id: \"KRW-FCT2\",\r\n    supply: 766632231,\r\n  },\r\n  {\r\n    id: \"KRW-CBK\",\r\n    supply: 78071865,\r\n  },\r\n  {\r\n    id: \"KRW-SAND\",\r\n    supply: 2071031926,\r\n  },\r\n  {\r\n    id: \"KRW-HPO\",\r\n    supply: 913409273,\r\n  },\r\n  {\r\n    id: \"KRW-HUM\",\r\n    supply: 913409274,\r\n  },\r\n  {\r\n    id: \"KRW-DOGE\",\r\n    supply: 141619286384,\r\n  },\r\n  {\r\n    id: \"KRW-STRK\",\r\n    supply: 3964522,\r\n  },\r\n  {\r\n    id: \"KRW-PUNDIX\",\r\n    supply: 258491637,\r\n  },\r\n  {\r\n    id: \"KRW-FLOW\",\r\n    supply: 1036200000,\r\n  },\r\n  {\r\n    id: \"KRW-AXS\",\r\n    supply: 141391485,\r\n  },\r\n  {\r\n    id: \"KRW-STX\",\r\n    supply: 1415522352,\r\n  },\r\n  {\r\n    id: \"KRW-XEC\",\r\n    supply: 19539129673093,\r\n  },\r\n  {\r\n    id: \"KRW-SOL\",\r\n    supply: 419295247,\r\n  },\r\n  {\r\n    id: \"KRW-MATIC\",\r\n    supply: 9309803041,\r\n  },\r\n  {\r\n    id: \"KRW-NU\",\r\n    supply: 703000000,\r\n  },\r\n  {\r\n    id: \"KRW-AAVE\",\r\n    supply: 14598485,\r\n  },\r\n  {\r\n    id: \"KRW-1INCH\",\r\n    supply: 1043779237,\r\n  },\r\n  {\r\n    id: \"KRW-ALGO\",\r\n    supply: 7925375653,\r\n  },\r\n  {\r\n    id: \"KRW-NEAR\",\r\n    supply: 989205460,\r\n  },\r\n  {\r\n    id: \"KRW-AVAX\",\r\n    supply: 355071893,\r\n  },\r\n  {\r\n    id: \"KRW-T\",\r\n    supply: 9312266778,\r\n  },\r\n  {\r\n    id: \"KRW-CELO\",\r\n    supply: 515094127,\r\n  },\r\n  {\r\n    id: \"KRW-GMT\",\r\n    supply: 1294809379,\r\n  },\r\n  {\r\n    id: \"KRW-APT\",\r\n    supply: 247248463,\r\n  },\r\n  {\r\n    id: \"KRW-SHIB\",\r\n    supply: 589346914631298,\r\n  },\r\n  {\r\n    id: \"KRW-MASK\",\r\n    supply: 82112500,\r\n  },\r\n  {\r\n    id: \"KRW-ARB\",\r\n    supply: 1275000000,\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\nimport { Tr } from \"./CoinList\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SkeletonUI from \"./SkeletonUI\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport TradePrice from \"./TradePrice\";\r\nimport ChangePrice from \"./ChangePrice\";\r\nimport CirculatingSupply from \"./CirculatingSupply\";\r\nimport AccTradePrice24h from \"./AccTradePrice24h\";\r\nimport AccTradeVolume24h from \"./AccTradeVolume24h\";\r\nimport Chart200Days from \"./Chart200Days\";\r\nimport { ICoinHttpTickers, ICoinListMerge } from \"../../../interface/icoin\";\r\nimport {\r\n  fetchCoinTickers,\r\n  useCoinTickersSocket,\r\n} from \"../../../services/coinApi\";\r\n\r\nexport const Td = styled.td`\r\n  text-align: end;\r\n  vertical-align: middle;\r\n  padding: 10px;\r\n  white-space: nowrap;\r\n\r\n  :last-child {\r\n    padding: 0px;\r\n  }\r\n`;\r\nconst NameTd = styled.td`\r\n  text-align: start;\r\n  vertical-align: middle;\r\n  position: sticky;\r\n  position: -webkit-sticky;\r\n  top: 0;\r\n  left: -2px;\r\n  z-index: 10;\r\n  background-color: #f8f8f8;\r\n  @media (max-width: 1279px) {\r\n    & {\r\n      ::before {\r\n        box-shadow: inset 10px 0 8px -8px rgba(0, 0, 0, 0.15);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: -1px;\r\n        width: 30px;\r\n        transform: translateX(100%);\r\n        transition: box-shadow 0.3s;\r\n        content: \"\";\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const Namediv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n  div span + span {\r\n    color: #808a9d;\r\n  }\r\n`;\r\n\r\nexport const TdChangeDiv = styled.div<{ change: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${(props) =>\r\n    props.change === \"RISE\"\r\n      ? \"#c84a31\"\r\n      : props.change === \"FALL\"\r\n      ? \"#1261c4\"\r\n      : \"#222\"};\r\n  will-change: color;\r\n`;\r\nexport const Icons = styled.span`\r\n  vertical-align: middle;\r\n`;\r\nexport const Img = styled.img`\r\n  margin-right: 5px;\r\n  max-width: 20px;\r\n`;\r\n\r\nfunction TbodyTr({\r\n  mergeData,\r\n  coinList,\r\n  count,\r\n}: {\r\n  mergeData: ICoinListMerge[];\r\n  coinList: string[];\r\n  count: number;\r\n}) {\r\n  const { data: tickerHttpData } = useQuery<ICoinHttpTickers[]>(\r\n    [\"ticker\", count],\r\n    () => fetchCoinTickers(coinList!),\r\n    {\r\n      enabled: !!coinList,\r\n      refetchOnMount: false,\r\n      refetchOnWindowFocus: true,\r\n    }\r\n  );\r\n  const { data: tickerSocketData } = useCoinTickersSocket(coinList!);\r\n\r\n  const [tickerList, setTickerList] = useState<ICoinHttpTickers[]>(\r\n    tickerHttpData || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (tickerSocketData) {\r\n      setTickerList(\r\n        tickerHttpData?.map((httpData) => {\r\n          const supplyArr = tickerSocketData.find(\r\n            (socketData) => httpData.market === socketData.code\r\n          );\r\n          if (supplyArr) {\r\n            return { ...httpData, ...supplyArr };\r\n          }\r\n          return httpData;\r\n        }) || []\r\n      );\r\n    }\r\n  }, [tickerHttpData, tickerSocketData]);\r\n\r\n  const makeSkeleton = () => {\r\n    const skeletons = [];\r\n    for (let i = 1; i <= 10; i++) {\r\n      skeletons.push(<SkeletonUI key={i} />);\r\n    }\r\n    return skeletons;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {mergeData && tickerSocketData && tickerHttpData && tickerList\r\n        ? mergeData.map((data, index) => (\r\n            <Tr key={index}>\r\n              <NameTd>\r\n                <Namediv>\r\n                  <Img\r\n                    src={`https://static.upbit.com/logos/${data.market.substring(\r\n                      4\r\n                    )}.png`}\r\n                    alt=\"coin_icon\"\r\n                    loading=\"lazy\"\r\n                    decoding=\"async\"\r\n                  />\r\n                  <div>\r\n                    <span>{data.english_name}</span>\r\n                    <span>{data.market.substring(4)}</span>\r\n                  </div>\r\n                </Namediv>\r\n              </NameTd>\r\n              <Td>\r\n                <TradePrice\r\n                  coinName={data.market}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={tickerSocketData}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                <ChangePrice\r\n                  coinName={data.market}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={tickerSocketData}\r\n                />\r\n              </Td>\r\n\r\n              <Td>\r\n                <AccTradeVolume24h\r\n                  coinName={data.market}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={tickerSocketData}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                <AccTradePrice24h\r\n                  coinName={data.market}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={tickerSocketData}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                <span>\r\n                  {data.supply.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}{\" \"}\r\n                  {data.market.substring(4)}\r\n                </span>\r\n              </Td>\r\n              <Td>\r\n                <CirculatingSupply\r\n                  coinName={data.market}\r\n                  supply={data.supply}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={tickerSocketData}\r\n                />\r\n              </Td>\r\n              <Td>\r\n                <Chart200Days\r\n                  coinName={data.market}\r\n                  history={data.historyArr}\r\n                  tickerList={tickerList}\r\n                  tickerSocketData={tickerSocketData}\r\n                />\r\n              </Td>\r\n            </Tr>\r\n          ))\r\n        : makeSkeleton()}\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(TbodyTr);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Colgroup from \"./ColGroup\";\r\nimport TheadTr from \"./TheadTr\";\r\nimport TbodyTr from \"./TbodyTr\";\r\nimport {\r\n  circulatingSupply,\r\n  fetchCoinHistory,\r\n  fetchCoins,\r\n} from \"../../../services/coinApi\";\r\nimport { ICoinHistory, ICoinListMerge, ICoins } from \"../../../interface/icoin\";\r\nimport { TextBox, TextBoxMiddle, TextBoxbottom } from \"../../common/mainCommon\";\r\n\r\nconst Container = styled.section`\r\n  width: 100%;\r\n  margin-top: -5rem;\r\n  padding: 4vw 2.7vw 15vw 2.7vw;\r\n  border-radius: 5vw 5vw 0 0;\r\n  background-color: #f8f8f8;\r\n  position: relative;\r\n  z-index: 3;\r\n  @media (max-width: 1050px) {\r\n    & {\r\n      padding-bottom: 12rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Inner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TableBox = styled.div`\r\n  @media (max-width: 1279px) {\r\n    & {\r\n      overflow-x: scroll;\r\n    }\r\n  }\r\n`;\r\nconst ListTable = styled.table`\r\n  width: 100%;\r\n  font-weight: 900;\r\n\r\n  @media (max-width: 650px) {\r\n    & {\r\n      font-size: 2.3vw;\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    & {\r\n      font-size: 3vw;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Tr = styled.tr`\r\n  border-bottom: 1px solid #e2e2e2;\r\n  :first-child {\r\n    border-top: 1px solid #e2e2e2;\r\n  }\r\n`;\r\nconst BtnBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5vw;\r\n  margin-top: 40px;\r\n`;\r\nconst PageBtn = styled.button<{ selected: boolean }>`\r\n  font-family: \"Apercu\", sans-serif;\r\n  font-weight: 600;\r\n  border: none;\r\n  border-radius: 7px;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  transition: all 0.2s ease-in-out;\r\n  background-color: ${(props) => (props.selected ? \"#333\" : \"transparent\")};\r\n  color: ${(props) => (props.selected ? \"#fff\" : \"#333\")};\r\n  will-change: background-color, color;\r\n`;\r\n\r\nfunction CoinList() {\r\n  const [page, setPage] = useState(1);\r\n  const [count, setCount] = useState(10);\r\n  const pageNation = (pageNum: number) => {\r\n    setPage(() => pageNum);\r\n  };\r\n  useEffect(() => {\r\n    updateCount(page);\r\n  }, [page]);\r\n  const updateCount = (page: number) => {\r\n    setCount(() => page * 10);\r\n  };\r\n  const makePageBtn = () => {\r\n    const pageButtons = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n      pageButtons.push(\r\n        <PageBtn onClick={() => pageNation(i)} key={i} selected={i === page}>\r\n          {i}\r\n        </PageBtn>\r\n      );\r\n    }\r\n    return pageButtons;\r\n  };\r\n\r\n  const [mergeData, setMergeData] = useState<ICoinListMerge[]>([]);\r\n  const { data: nameData } = useQuery<ICoins[]>([\"name\"], () => fetchCoins(), {\r\n    select: (data) => data.filter((data) => !data.market.indexOf(\"KRW\")),\r\n    refetchOnMount: false,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  const coinList = nameData\r\n    ?.map((data) => data.market)\r\n    .slice(count - 10, count);\r\n\r\n  const { data: historyData } = useQuery<ICoinHistory[][]>(\r\n    [\"history\", count],\r\n    () => fetchCoinHistory(coinList!),\r\n    {\r\n      enabled: !!coinList,\r\n      refetchOnMount: false,\r\n      refetchOnWindowFocus: true,\r\n    }\r\n  );\r\n\r\n  const mergeFn = useCallback(async () => {\r\n    let newArr: ICoinListMerge[] = [];\r\n    await Promise.all(\r\n      nameData!.map(async (nameArr) => {\r\n        const supplyArr = circulatingSupply.find(\r\n          (supply) => supply.id === nameArr.market\r\n        );\r\n        if (supplyArr) {\r\n          const historyArr = historyData!.find(\r\n            (history) => history[0].market === nameArr.market\r\n          );\r\n          if (historyArr) {\r\n            let newObject = { ...nameArr, ...supplyArr, historyArr };\r\n            newArr.push(newObject);\r\n          }\r\n        }\r\n      })\r\n    ).then(() => setMergeData(() => newArr));\r\n  }, [coinList]);\r\n\r\n  useEffect(() => {\r\n    if (historyData) {\r\n      mergeFn();\r\n    }\r\n  }, [historyData]);\r\n\r\n  return (\r\n    <Container>\r\n      <Inner>\r\n        <TextBox>\r\n          <TextBoxMiddle>CoinList</TextBoxMiddle>\r\n          <TextBoxbottom>\r\n            Combination of UPBIT Websocket, React-Query\r\n          </TextBoxbottom>\r\n        </TextBox>\r\n        <TableBox>\r\n          <ListTable>\r\n            <Colgroup />\r\n            <thead>\r\n              <TheadTr />\r\n            </thead>\r\n            <tbody>\r\n              {mergeData && coinList && (\r\n                <TbodyTr\r\n                  coinList={coinList}\r\n                  mergeData={mergeData}\r\n                  count={count}\r\n                />\r\n              )}\r\n            </tbody>\r\n          </ListTable>\r\n        </TableBox>\r\n        <BtnBox>{makePageBtn()}</BtnBox>\r\n      </Inner>\r\n    </Container>\r\n  );\r\n}\r\nexport default React.memo(CoinList);\r\n"],"names":["ColName","styled","col","_templateObject","_taggedTemplateLiteral","ColPrice","_templateObject2","ColChange","_templateObject3","ColVolume","_templateObject4","ColVolumePrice","_templateObject5","ColSupply","_templateObject6","ColCap","_templateObject7","ColChart","_templateObject8","_jsxs","children","_jsx","NameTh","th","Th","Tr","TdFixed","td","TdNomalDivFixed","div","Skeleton","SkeletonName","SkeletonPrice","SkeletonChangePrice","SkeletonChangePer","SkeletonVolume","SkeletonVolumePrice","_templateObject9","SkeletonSupply","_templateObject10","SkeletonMarketCap","_templateObject11","SkeletonChart","_templateObject12","Namediv","_ref","coinName","tickerSocketData","tickerList","_tickerList$find","price","find","ticker","market","trade_price","toString","replace","_Fragment","_tickerList$find2","_tickerList$find3","changePrice","change_price","change","changeRate","change_rate","TdChangeDiv","Icons","className","toFixed","supply","accTradePrice24h","acc_trade_price_24h","accTradeVolume24h","acc_trade_volume_24h","substring","ApexChartDiv","ApexChart","ReactApexChart","props","_history$map","history","type","series","data","map","x","timestamp","y","prev_closing_price","options","chart","background","zoom","enabled","toolbar","show","animations","grid","legend","dataLabels","labels","tooltip","markers","size","stroke","curve","width","colors","xaxis","axisBorder","axisTicks","yaxis","Chart","_fetchCoins","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","response","wrap","_context2","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","_fetchCoinTickers","_callee3","coinList","results","index","_yield$response$json","_yield$response$json2","_context3","length","concat","_slicedToArray","push","_fetchCoinHistory","_callee4","_context4","useCoinTickersSocket","_useState","useState","_useState2","socket","setSocket","connectWS","upbitSocket","WebSocket","addEventListener","error","console","log","useEffect","subscribeMsg","ticket","codes","send","JSON","stringify","fetchCoinTickersSocket","_callee","newArr","_context","Promise","resolve","reject","message","text","then","jsonData","parse","useQuery","refetchInterval","cacheTime","refetchOnWindowFocus","circulatingSupply","id","Td","NameTd","span","Img","img","TbodyTr","mergeData","count","_useQuery","_x","fetchCoinTickers","refetchOnMount","tickerHttpData","setTickerList","httpData","supplyArr","socketData","code","_objectSpread","src","alt","loading","decoding","english_name","TradePrice","ChangePrice","AccTradeVolume24h","AccTradePrice24h","CirculatingSupply","Chart200Days","historyArr","skeletons","i","SkeletonUI","makeSkeleton","React","Container","section","Inner","TableBox","ListTable","table","tr","BtnBox","PageBtn","button","selected","CoinList","page","setPage","_useState3","_useState4","setCount","updateCount","_useState5","_useState6","setMergeData","fetchCoins","select","filter","indexOf","nameData","slice","_useQuery2","_x2","fetchCoinHistory","historyData","mergeFn","useCallback","all","_ref2","nameArr","newObject","TextBox","TextBoxMiddle","TextBoxbottom","Colgroup","TheadTr","pageButtons","_loop","onClick","pageNum","makePageBtn"],"sourceRoot":""}